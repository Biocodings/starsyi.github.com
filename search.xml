<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Circos教程(二):基础使用]]></title>
      <url>http://starsyi.github.io/2016/06/23/Circos%E6%95%99%E7%A8%8B(%E4%BA%8C)%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h3 id="一、circos绘图流程"><a href="#一、circos绘图流程" class="headerlink" title="一、circos绘图流程"></a>一、circos绘图流程</h3><p><img src="http://blog.qiubio.com:8080/wp-content/uploads/2011/11/circos-architecture.png" alt="此处输入图片的描述"><br>图1. Circos绘图流程<br>理解了circos的绘图流程，理解了每个文件的作用，基本上也就学会了circos绘图工具。</p>
<h3 id="二、circos配置文件"><a href="#二、circos配置文件" class="headerlink" title="二、circos配置文件"></a>二、circos配置文件</h3><h4 id="1-数据文件"><a href="#1-数据文件" class="headerlink" title="1. 数据文件"></a>1. 数据文件</h4><h5 id="1-1-基因组数据文件"><a href="#1-1-基因组数据文件" class="headerlink" title="1.1 基因组数据文件"></a>1.1 基因组数据文件</h5><p>先看文件：<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#染色体 -   染色体编号(ID) 图显示名称(Label)     起始   结束    颜色</span></span><br><span class="line"><span class="built_in">chr</span> -   Gmax01  <span class="number">1</span>   <span class="number">0</span>   <span class="number">56831624</span>    chr1</span><br><span class="line"><span class="built_in">chr</span> -   Gmax02  <span class="number">2</span>   <span class="number">0</span>   <span class="number">48577505</span>   chr2</span><br><span class="line"><span class="built_in">chr</span> -   Gmax03  <span class="number">3</span>   <span class="number">0</span>   <span class="number">45779781</span>    chr3</span><br><span class="line">…</span><br></pre></td></tr></table></figure></p>
<p>讲解一下：<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">染色体      chr，这一列定义表面这是一个染色体</span><br><span class="line"></span><br><span class="line">-           短线占位符，这个占位符通常用来定义所属关系，对于染色体来说，没有所属</span><br><span class="line"></span><br><span class="line">染色体编号  ID，ID是染色体唯一且不能重复的标识。如果一个染色体组型文件里面包含多个不同来源的染色体组，设置ID最好的办法就是使用前缀。</span><br><span class="line">            比如hs=homo sapiens, mm=mus musculus等等。有时候你可以使用hs19做为前缀来明示数据来源版本。</span><br><span class="line">            其实，即使是只有一个来源的染色体组，也最好使用前缀，以规范文件格式。</span><br><span class="line">            比如上面的示例，就是我绘图的大豆的基因组，因而我在设置染色体编号（ID）的时候，使用了Gmax01 …的格式，自己可以根据自己的染色体来设置。</span><br><span class="line"></span><br><span class="line">图显名称    <span class="built_in">Label</span>，是将来用于显示在图上的文本。<span class="built_in">Label</span>主要是在图中显示的名称，我这里就直接使用<span class="number">1</span>,<span class="number">2</span>, …表示，</span><br><span class="line">            但是如果有多个物种的基因组，或者来自不同的样品，品系的，还是要加以区分。</span><br><span class="line"></span><br><span class="line">起始、结束  <span class="built_in">START</span>和END值，定义了染色体的大小。</span><br><span class="line">            对于染色体组型文件，需要指明的是，这里的<span class="built_in">START</span>和END应该是染色体本身的大小，而不是你想绘制部分的起止位置。</span><br><span class="line">            指定绘制部分将由其它文件来定义。</span><br><span class="line"></span><br><span class="line">颜色        <span class="built_in">COLOR</span>，是于定义显示的颜色。如果染色体组不以条纹(cytogenetic bands)图谱覆盖的话，那么就会以这里设置的颜色显示。</span><br><span class="line">            对于人类基因组而言，circos预设了与染色体相同的名字做为颜色名，比如chr1, chr2, … chrX, chrY, chrUn.</span><br></pre></td></tr></table></figure></p>
<p><strong>关于染色体上加上条纹图谱的信息</strong>，可以参考<a href="http://blog.qiubio.com:8080/archives/2519" target="_blank" rel="external">《Circos系列教程（二）染色体示意图ideograms 》</a>，这里方便，也移植过来了：<br>    一般的，我们都会在染色体组型文件当中加上条纹图谱的信息，这样才会让染色体图谱看上去有被染色的效果。文件格式与之前的一致，也只有七列。这里的DOMAIN就是染色体组型当中的ID就好了，其它的定义与前面的一致。下面就是一个例子。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">band</span>    <span class="selector-tag">DOMAIN</span>  <span class="selector-tag">ID</span>  <span class="selector-tag">LABEL</span>   <span class="selector-tag">START</span>   <span class="selector-tag">END</span> <span class="selector-tag">COLOR</span></span><br><span class="line"><span class="selector-tag">band</span>    <span class="selector-tag">hs1</span>     <span class="selector-tag">p36</span><span class="selector-class">.33</span>  <span class="selector-tag">p36</span><span class="selector-class">.33</span>  0   2300000     <span class="selector-tag">gneg</span></span><br><span class="line"><span class="selector-tag">band</span>    <span class="selector-tag">hs1</span>     <span class="selector-tag">p36</span><span class="selector-class">.32</span>  <span class="selector-tag">p36</span><span class="selector-class">.32</span>  2300000     5400000     <span class="selector-tag">gpos25</span></span><br><span class="line"><span class="selector-tag">band</span>    <span class="selector-tag">hs1</span>     <span class="selector-tag">p36</span><span class="selector-class">.31</span>  <span class="selector-tag">p36</span><span class="selector-class">.31</span>  5400000     7200000     <span class="selector-tag">gneg</span></span><br><span class="line"><span class="selector-tag">band</span>    <span class="selector-tag">hs1</span>     <span class="selector-tag">p36</span><span class="selector-class">.23</span>  <span class="selector-tag">p36</span><span class="selector-class">.23</span>  7200000     9200000     <span class="selector-tag">gpos25</span></span><br><span class="line"><span class="selector-tag">band</span>    <span class="selector-tag">hs1</span>     <span class="selector-tag">p36</span><span class="selector-class">.22</span>  <span class="selector-tag">p36</span><span class="selector-class">.22</span>  9200000     12700000    <span class="selector-tag">gneg</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>cytogenetic bands的名称例子：1p36.33<br>其命名规则是之前的数字、字母为染色体代号，一般是数字或者X,Y。而之后会有字母p或者q。p代表短臂，q代表长臂。而每个band都会有颜色深浅的不同，这里主要以gpos和gneg来区别。为了和真实值更接近，circos还定义了一系列的灰度。<br><img src="http://blog.qiubio.com:8080/wp-content/uploads/2011/11/chromosomallocation.jpg" alt="此处输入图片的描述"><br>图2. 染色体组型定义</p>
<h5 id="1-2-feature数据文件"><a href="#1-2-feature数据文件" class="headerlink" title="1.2 feature数据文件"></a>1.2 feature数据文件</h5><p>刚才说完了基因组的数据文件，下面说一下其他的数据文件，我这里做了SNP的密度显示track，那么就拿这样一个track来做一个示例：<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#染色体编号 起始位置    终止位置    value</span><br><span class="line">Gmax01  <span class="number">0</span>   <span class="number">999999</span>  <span class="number">0.000301</span></span><br><span class="line">Gmax01  <span class="number">1000000</span>     <span class="number">1999999</span>     <span class="number">0.001321</span></span><br><span class="line">Gmax01  <span class="number">2000000</span>     <span class="number">2999999</span>     <span class="number">0.001050</span></span><br><span class="line">Gmax01  <span class="number">3000000</span>     <span class="number">3999999</span>     <span class="number">0.003027</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>解释一下：<br><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这里的染色体编号一定要与基因组信息文件中的染色体编号保持一致，不然绘图的时候会出错；</span><br><span class="line">起始位置、终止位置，这是你要统计的这个区段的的范围；</span><br><span class="line"><span class="keyword">value</span>，则是值，根据情况，比如我这里是统计的SNP的密度，那么这个值就是在这个染色体区段范围类，染色体的密度，如果是统计数量，那么这个值就是数目。</span><br></pre></td></tr></table></figure></p>
<p>每个track都有自己对应的数据，而且不同的绘图类型，所需要的数据结构可能都不一样，这是你就需要根据自己的需求来准备数据文件了。<br>不同显示数据的track对应的数据文件的格式，其实数据的格式都很好理解，如果你想绘制什么样的图，可以在官网上找到相关的数据类型结构，你只要根据这个结构来做好你的数据，就没什么问题。</p>
<h4 id="2-配置文件"><a href="#2-配置文件" class="headerlink" title="2. 配置文件"></a>2. 配置文件</h4><p>一般绘图需要以下配置文件：</p>
<ul>
<li>circos.conf</li>
<li>ideogram.conf</li>
<li>ticks.conf</li>
<li>image.conf</li>
<li>highlight.conf</li>
<li>colors_fonts_patterns.conf</li>
</ul>
<p>你可以将配置文件内容全部放在circos.conf里，也可以分离成单独的文件通过include方式导入。<br>为了使用，阅读和读取的方便，我们还是建议最好分离成单独的文件。<br>那么我们就一个一个的配置文件说起，最后说主配置文件circos.conf<br>因为有很多人已经在这方面有了很详细的注解和心得，我也就不自己一个个来翻译，注释和配置了，这里主要引用来自陈连福<a href="http://www.chenlianfu.com/?p=2342" target="_blank" rel="external">《Circos的安装和简单使用》</a></p>
<h5 id="2-1-ideogram-block-显示染色体"><a href="#2-1-ideogram-block-显示染色体" class="headerlink" title="2.1 ideogram block 显示染色体"></a>2.1 ideogram block 显示染色体</h5><p>将染色体在圈图上展示出来，代表每个染色体的图形，称为ideogram。将以下配置信息放入一个单独的配置文件中，给其命名 ideogram.conf 。<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;ideogram&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">## 设定 ideograms 之间的空隙</span></span><br><span class="line">&lt;spacing&gt;</span><br><span class="line"><span class="meta"># 设置圈图中染色体之间的空隙大小，以下设置为每个空隙大小为周长的 0.5%</span></span><br><span class="line"><span class="keyword">default</span> = <span class="number">0.005</span>r</span><br><span class="line"></span><br><span class="line"><span class="meta"># 也可以设置指定两条染色体之间的空隙</span></span><br><span class="line"><span class="meta">#&lt;pairwise hsY;hs1&gt;</span></span><br><span class="line"><span class="meta"># 以下设定为两条染色体之间的空隙约为圆的 20 度角。</span></span><br><span class="line"><span class="meta">#spacing = 20r</span></span><br><span class="line"><span class="meta">#&lt;/pairwise&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;/spacing&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">## 设定 ideograms </span></span><br><span class="line"><span class="meta"># 设定 ideograms 的位置，以下设定 ideograms 在图离圆心的 90% 处</span></span><br><span class="line">radius           = <span class="number">0.90</span>r</span><br><span class="line"><span class="meta"># 设定 ideograms 的厚度，可以使用 r（比例关系） 或 p（像素）作为单位</span></span><br><span class="line">thickness        = <span class="number">20</span>p</span><br><span class="line"><span class="meta"># 设定 ideograms 是否填充颜色。填充的颜色取决于 karyotype 指定的文件的最后一列。</span></span><br><span class="line">fill             = yes</span><br><span class="line"><span class="meta"># 设定 ideograms 轮廓的颜色及其厚度。如果没有该参数或设定其厚度为0，则表示没有轮廓。</span></span><br><span class="line">stroke_color     = dgrey</span><br><span class="line">stroke_thickness = <span class="number">2</span>p</span><br><span class="line"></span><br><span class="line"><span class="meta">## 设定 label 的显示</span></span><br><span class="line"><span class="meta"># 设定是否显示 label 。 label 对应着 karyotype 文件的第 4 列。如果其值为 yes，则必须要有 label_radius 参数来设定 label 的位置，否则会报错并不能生成结果。</span></span><br><span class="line">show_label       = yes</span><br><span class="line"><span class="meta"># 设定 label 的字体</span></span><br><span class="line">label_font       = <span class="keyword">default</span></span><br><span class="line"><span class="meta"># 设定 label 的位置</span></span><br><span class="line">label_radius     = <span class="number">1</span>r+<span class="number">90</span>p</span><br><span class="line"><span class="meta"># 设定 label 的字体大小</span></span><br><span class="line">label_size       = <span class="number">40</span></span><br><span class="line"><span class="meta"># 设定 label 的字体方向，yes 是易于浏览的方向。</span></span><br><span class="line">label_parallel   = yes</span><br><span class="line"></span><br><span class="line">&lt;/ideogram&gt;</span><br></pre></td></tr></table></figure></p>
<h5 id="2-2-ticks-block-以刻度形式显示染色体大小"><a href="#2-2-ticks-block-以刻度形式显示染色体大小" class="headerlink" title="2.2 ticks block 以刻度形式显示染色体大小"></a>2.2 ticks block 以刻度形式显示染色体大小</h5><p>将染色体的大小以刻度的形式在圈图上展示出来。将以下配置信息放入一个单独的配置文件中，给其命名 ticks.conf 。<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 是否显示 ticks</span></span><br><span class="line">show_ticks         = yes</span><br><span class="line"><span class="comment"># 是否显示 ticks 的 lables</span></span><br><span class="line">show_tick_labels    = yes</span><br><span class="line"></span><br><span class="line"><span class="comment">## 设定 ticks</span></span><br><span class="line">&lt;ticks&gt;</span><br><span class="line"><span class="comment">## ticks 的设置</span></span><br><span class="line"><span class="comment"># 设定 ticks 的位置</span></span><br><span class="line">radius           = 1r</span><br><span class="line"><span class="comment"># 设定 ticks 的颜色</span></span><br><span class="line">color            = black</span><br><span class="line"><span class="comment"># 设定 ticks 的厚度</span></span><br><span class="line">thickness        = 2p</span><br><span class="line"><span class="comment"># 设定 ticks' label 的值的计算。将该刻度对应位置的值 * multiplier 得到能展示到圈图上的 label 值。</span></span><br><span class="line">multiplier       = 1e-6</span><br><span class="line"><span class="comment"># label 值的格式化方法。%d 表示结果为整数；%f 结果为浮点数； %.1f 结果为小数点后保留1位； %.2f 结果为小数点后保留2位。</span></span><br><span class="line">format           = %d</span><br><span class="line"></span><br><span class="line"><span class="comment">## 以下设置了 2 个 ticks，前者是小刻度，后者是大刻度。</span></span><br><span class="line">&lt;tick&gt;</span><br><span class="line"><span class="comment"># 设置每个刻度代表的长度。若其单位为 u，则必须要设置 chromosomes_units 参数。比如设置 chromosomes_units = 1000000，则如下 5u 表示每个刻度代表 5M 长度的基因组序列。</span></span><br><span class="line">spacing        = 5u</span><br><span class="line"><span class="comment"># 设置 tick 的长度</span></span><br><span class="line">size           = 10p</span><br><span class="line">&lt;/tick&gt;</span><br><span class="line"></span><br><span class="line">&lt;tick&gt;</span><br><span class="line">spacing        = 25u</span><br><span class="line">size           = 15p</span><br><span class="line"><span class="comment"># 由于设置的是大刻度，以下用于设置展示 ticks' label。</span></span><br><span class="line">show_label     = yes</span><br><span class="line"><span class="comment"># 设置 ticks' label 的字体大小</span></span><br><span class="line">label_size     = 20p</span><br><span class="line"><span class="comment"># 设置 ticks' label 离 ticks 的距离</span></span><br><span class="line">label_offset   = 10p</span><br><span class="line">format         = %d</span><br><span class="line">&lt;/tick&gt;</span><br><span class="line"></span><br><span class="line">&lt;/ticks&gt;</span><br></pre></td></tr></table></figure></p>
<h5 id="2-3-links-block-以曲线连接显示基因组内部区域之间的联系"><a href="#2-3-links-block-以曲线连接显示基因组内部区域之间的联系" class="headerlink" title="2.3 links block 以曲线连接显示基因组内部区域之间的联系"></a>2.3 links block 以曲线连接显示基因组内部区域之间的联系</h5><p>基因组内部不同的序列区域之间有联系，将之使用线条进行连接，从而展示到圈图上。常见的是重复序列之间的连接。将以下配置信息放入一个单独的配置文件中，给其命名 links.conf 。<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;links&gt;</span><br><span class="line"></span><br><span class="line">&lt;link&gt;</span><br><span class="line"><span class="meta"># 指定 link 文件的路径，其文件格式为：</span></span><br><span class="line"><span class="meta"># chr1  start   end     chr2    start   end</span></span><br><span class="line"><span class="meta"># hs1   465     30596   hs2     114046768       114076456</span></span><br><span class="line"><span class="meta"># 表明这两个染色体区域有联系，例如这个区域的序列长度&gt;1kb且序列相似性&gt;=90%。</span></span><br><span class="line">file          = data/<span class="number">5</span>/segdup.txt</span><br><span class="line"><span class="meta"># 设置 link 曲线的半径</span></span><br><span class="line">radius        = <span class="number">0.8</span>r</span><br><span class="line"><span class="meta"># 设置贝塞尔曲线半径，该值设大后曲线扁平，使图像不太好看。</span></span><br><span class="line">bezier_radius = <span class="number">0</span>r</span><br><span class="line"><span class="meta"># 设置 link 曲线的颜色</span></span><br><span class="line">color         = black_a4</span><br><span class="line"><span class="meta"># 设置 link 曲线的厚度</span></span><br><span class="line">thickness     = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">&lt;rules&gt;</span><br><span class="line"><span class="meta"># 以下可以设置多个 rules，用来对 link 文件的每一行进行过滤或展示进行设定。每个 rule 都有一个 condition 参数；如果该 condition 为真，除非 flow=continue ，则不</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 如果 link 文件中该行数据是染色体内部的 link，则不对其进行展示</span></span><br><span class="line">&lt;rule&gt;</span><br><span class="line">condition     = <span class="keyword">var</span>(intrachr)</span><br><span class="line">show          = no</span><br><span class="line">&lt;/rule&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta"># 设置 link 曲线的颜色与 ideogram 的颜色一致，否则为统一的颜色。</span></span><br><span class="line">&lt;rule&gt;</span><br><span class="line"><span class="meta"># condition 为真，则执行该 block 的内容</span></span><br><span class="line">condition     = <span class="number">1</span></span><br><span class="line"><span class="meta"># 设置 link 曲线的颜色为第 2 条染色体的颜色。对应这 link 文件中第 4 列数据对应的染色体的名称</span></span><br><span class="line">color         = eval(<span class="keyword">var</span>(chr2))</span><br><span class="line"><span class="meta"># 虽然 condition 为真，但依然检测下一个 rule</span></span><br><span class="line">flow          = continue</span><br><span class="line">&lt;/rule&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta"># 如果 link 起始于 hs1，则其 link 曲线半径为 0.99r</span></span><br><span class="line">&lt;rule&gt;</span><br><span class="line">condition     = from(hs1)</span><br><span class="line">radius1       = <span class="number">0.99</span>r</span><br><span class="line">&lt;/rule&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta"># 如果 link 结束于 hs1，则其 link 曲线半径为 0.99r</span></span><br><span class="line">&lt;rule&gt;</span><br><span class="line">condition     = to(hs1)</span><br><span class="line">radius2       = <span class="number">0.99</span>r</span><br><span class="line">&lt;/rule&gt;</span><br><span class="line"></span><br><span class="line">&lt;/rules&gt;</span><br><span class="line"></span><br><span class="line">&lt;/link&gt;</span><br><span class="line"></span><br><span class="line">&lt;/links&gt;</span><br></pre></td></tr></table></figure></p>
<h5 id="2-4-plots-block-以直方图形式展示数据"><a href="#2-4-plots-block-以直方图形式展示数据" class="headerlink" title="2.4 plots block 以直方图形式展示数据"></a>2.4 plots block 以直方图形式展示数据</h5><p>将基因组序列的GC含量，表达量等以直方图的形式在圈图中展示出来。将以下配置信息放入一个单独的配置文件中，给其命名 plots_histogram.conf 。以下作了两个直方图，并对分别添上背景或网格线。<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">&lt;plot&gt;</span><br><span class="line"><span class="comment"># 设定为直方图</span></span><br><span class="line"><span class="attr">type</span> = histogram</span><br><span class="line"><span class="comment"># 数据文件路径，为 4 列：</span></span><br><span class="line"><span class="comment"># chromosome	start	end	data</span></span><br><span class="line"><span class="comment"># hs1	0	1999999	180.0000</span></span><br><span class="line"><span class="attr">file</span> = data/<span class="number">5</span>/segdup.hs1234.hist.txt</span><br><span class="line"><span class="comment"># 设置直方图的位置，r1 要比 r0 大。直方图的方向默认为向外。</span></span><br><span class="line"><span class="attr">r1</span>   = <span class="number">0.88</span>r</span><br><span class="line"><span class="attr">r0</span>   = <span class="number">0.81</span>r</span><br><span class="line"><span class="comment"># 直方图的填充颜色</span></span><br><span class="line"><span class="attr">fill_color</span> = vdgrey</span><br><span class="line"><span class="comment"># 默认下直方图轮廓厚度为 1px，若不需要轮廓，则设置其厚度为0，或在 etc/tracks/histogram.conf 中修改。</span></span><br><span class="line"><span class="attr">thickness</span> = <span class="number">0</span>p</span><br><span class="line"><span class="comment"># 直方图是由 bins （条行框）所构成的。若 bins 在坐标上不相连，最好设置不要将其bins连接到一起。例如：</span></span><br><span class="line"><span class="comment"># hs1 10 20 0.5</span></span><br><span class="line"><span class="comment"># hs1 30 40 0.25</span></span><br><span class="line"><span class="comment"># 上述数据设置值为 yes 和 no 时，图形是不一样的。</span></span><br><span class="line"><span class="attr">extend_bin</span> = no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下添加 rule ，不在 hs1 上添加直方图。</span></span><br><span class="line">&lt;rules&gt;</span><br><span class="line">&lt;&lt;include exclude.hs1.rule&gt;&gt;</span><br><span class="line">&lt;/rules&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设定直方图的背景颜色</span></span><br><span class="line">&lt;backgrounds&gt;</span><br><span class="line"><span class="attr">show</span>  = data</span><br><span class="line"></span><br><span class="line">&lt;background&gt;</span><br><span class="line"><span class="attr">color</span> = vvlgrey</span><br><span class="line">&lt;/background&gt;</span><br><span class="line">&lt;background&gt;</span><br><span class="line"><span class="attr">color</span> = vlgrey</span><br><span class="line"><span class="attr">y0</span>    = <span class="number">0.2</span>r</span><br><span class="line"><span class="attr">y1</span>    = <span class="number">0.5</span>r</span><br><span class="line">&lt;/background&gt;</span><br><span class="line">&lt;background&gt;</span><br><span class="line"><span class="attr">color</span> = lgrey</span><br><span class="line"><span class="attr">y0</span>    = <span class="number">0.5</span>r</span><br><span class="line"><span class="attr">y1</span>    = <span class="number">0.8</span>r</span><br><span class="line">&lt;/background&gt;</span><br><span class="line">&lt;background&gt;</span><br><span class="line"><span class="attr">color</span> = grey</span><br><span class="line"><span class="attr">y0</span>    = <span class="number">0.8</span>r</span><br><span class="line">&lt;/background&gt;</span><br><span class="line"></span><br><span class="line">&lt;/backgrounds&gt;</span><br><span class="line"></span><br><span class="line">&lt;/plot&gt;</span><br><span class="line"></span><br><span class="line">&lt;plot&gt;</span><br><span class="line"><span class="attr">type</span> = histogram</span><br><span class="line"><span class="comment"># 此处直方图的数据文件第 4 列是多个由逗号分割的数值，需要制作叠加的直方图。</span></span><br><span class="line"><span class="attr">file</span> = data/<span class="number">5</span>/segdup.hs1234.stacked.txt</span><br><span class="line"><span class="attr">r1</span>   = <span class="number">0.99</span>r</span><br><span class="line"><span class="attr">r0</span>   = <span class="number">0.92</span>r</span><br><span class="line"><span class="comment"># 给 4 个值按顺序填充不同的颜色</span></span><br><span class="line"><span class="attr">fill_color</span>  = hs1,hs2,hs3,hs4</span><br><span class="line"><span class="attr">thickness</span> = <span class="number">0</span>p</span><br><span class="line"><span class="attr">orientation</span> = <span class="keyword">in</span></span><br><span class="line"><span class="attr">extend_bin</span>  = no</span><br><span class="line"></span><br><span class="line">&lt;rules&gt;</span><br><span class="line">&lt;&lt;include exclude.hs1.rule&gt;&gt;</span><br><span class="line">&lt;/rules&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在直方图中添加坐标网格线</span></span><br><span class="line">&lt;axes&gt;</span><br><span class="line"><span class="attr">show</span> = data</span><br><span class="line"><span class="attr">thickness</span> = <span class="number">1</span></span><br><span class="line"><span class="attr">color</span>     = lgrey</span><br><span class="line"></span><br><span class="line">&lt;axis&gt;</span><br><span class="line"><span class="attr">spacing</span>   = <span class="number">0.1</span>r</span><br><span class="line">&lt;/axis&gt;</span><br><span class="line">&lt;axis&gt;</span><br><span class="line"><span class="attr">spacing</span>   = <span class="number">0.2</span>r</span><br><span class="line"><span class="attr">color</span>     = grey</span><br><span class="line">&lt;/axis&gt;</span><br><span class="line">&lt;axis&gt;</span><br><span class="line"><span class="attr">position</span>  = <span class="number">0.5</span>r</span><br><span class="line"><span class="attr">color</span>     = red</span><br><span class="line">&lt;/axis&gt;</span><br><span class="line">&lt;axis&gt;</span><br><span class="line"><span class="attr">position</span>  = <span class="number">0.85</span>r</span><br><span class="line"><span class="attr">color</span>     = green</span><br><span class="line"><span class="attr">thickness</span> = <span class="number">2</span></span><br><span class="line">&lt;/axis&gt;</span><br><span class="line"></span><br><span class="line">&lt;/axes&gt;</span><br><span class="line"></span><br><span class="line">&lt;/plot&gt;</span><br></pre></td></tr></table></figure></p>
<h5 id="2-5-plots-block-以热图形式显示数据"><a href="#2-5-plots-block-以热图形式显示数据" class="headerlink" title="2.5 plots block 以热图形式显示数据"></a>2.5 plots block 以热图形式显示数据</h5><p>基因组一个区域内有多组数据时，适合以热图形式显示数据。比如基因表达量。将以下配置信息放入一个单独的配置文件中，给其命名 plots_heatmap.conf 。<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">&lt;plot&gt;</span><br><span class="line"><span class="comment"># 绘制 heat map</span></span><br><span class="line"><span class="attr">type</span>  = heatmap</span><br><span class="line"><span class="comment"># 设定数据文件路径。文件有 5 列</span></span><br><span class="line"><span class="comment"># chrID start   end     data    class</span></span><br><span class="line"><span class="comment"># hs1 0 1999999 113.0000 id=hs1</span></span><br><span class="line"><span class="comment"># hs1 0 1999999 40.0000 id=hs4</span></span><br><span class="line"><span class="comment"># hs1 0 1999999 20.0000 id=hs2</span></span><br><span class="line"><span class="comment"># hs1 0 1999999 7.0000 id=hs3</span></span><br><span class="line"><span class="attr">file</span>  = data/<span class="number">5</span>/segdup.hs1234.heatmap.txt</span><br><span class="line"><span class="comment"># 设定图形所处位置</span></span><br><span class="line"><span class="attr">r1</span>    = <span class="number">0.89</span>r</span><br><span class="line"><span class="attr">r0</span>    = <span class="number">0.88</span>r</span><br><span class="line"><span class="comment"># 设定热图的颜色。颜色为 hs3 ，以及相应带不同透明程度的 5 种颜色。</span></span><br><span class="line"><span class="attr">color</span> = hs1_a5,hs1_a4,hs1_a3,hs1_a2,hs1_a1,hs1</span><br><span class="line"><span class="comment"># 设定 scale_log_base 参数。计算颜色的方法如下：</span></span><br><span class="line"><span class="comment"># f = (value - min) / ( max - min )    热图中每个方块代表着一个值，并给予相应的颜色标示。一系列的值 [min,max] 对应一系列的颜色 c[n], i=0..N</span></span><br><span class="line"><span class="comment"># n = N * f ** (1/scale_log_base)</span></span><br><span class="line"><span class="comment"># 由上面两个公式计算出代表颜色的 n 值。</span></span><br><span class="line"><span class="comment"># 若 scale_log_base = 1，则数值与颜色的变化是线性的；</span></span><br><span class="line"><span class="comment"># 若 scale_log_base &gt; 1，则颜色向小方向靠近；</span></span><br><span class="line"><span class="comment"># 若 scale_log_base &lt; 1，则颜色向大方向靠近。</span></span><br><span class="line"><span class="attr">scale_log_base</span> = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">&lt;rules&gt;</span><br><span class="line">&lt;&lt;include exclude.hs1.rule&gt;&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅显示 id = hs1 的数据</span></span><br><span class="line">&lt;rule&gt;</span><br><span class="line"><span class="attr">condition</span> = var(id) ne <span class="string">"hs1"</span></span><br><span class="line"><span class="attr">show</span>      = no</span><br><span class="line">&lt;/rule&gt;</span><br><span class="line"></span><br><span class="line">&lt;/rules&gt;</span><br><span class="line"></span><br><span class="line">&lt;/plot&gt;</span><br><span class="line"></span><br><span class="line">&lt;plot&gt;</span><br><span class="line"><span class="attr">type</span>  = heatmap</span><br><span class="line"><span class="attr">file</span>  = data/<span class="number">5</span>/segdup.hs1234.heatmap.txt</span><br><span class="line"><span class="attr">r1</span>    = <span class="number">0.90</span>r</span><br><span class="line"><span class="attr">r0</span>    = <span class="number">0.89</span>r</span><br><span class="line"><span class="attr">color</span> = hs2_a5,hs2_a4,hs2_a3,hs2_a2,hs2_a1,hs2</span><br><span class="line"><span class="attr">scale_log_base</span> = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">&lt;rules&gt;</span><br><span class="line">&lt;&lt;include exclude.hs1.rule&gt;&gt;</span><br><span class="line"></span><br><span class="line">&lt;rule&gt;</span><br><span class="line"><span class="attr">condition</span> = var(id) ne <span class="string">"hs2"</span></span><br><span class="line"><span class="attr">show</span>      = no</span><br><span class="line">&lt;/rule&gt;</span><br><span class="line"></span><br><span class="line">&lt;/rules&gt;</span><br><span class="line"></span><br><span class="line">&lt;/plot&gt;</span><br><span class="line"></span><br><span class="line">&lt;plot&gt;</span><br><span class="line"><span class="attr">type</span>  = heatmap</span><br><span class="line"><span class="attr">file</span>  = data/<span class="number">5</span>/segdup.hs1234.heatmap.txt</span><br><span class="line"><span class="attr">r1</span>    = <span class="number">0.91</span>r</span><br><span class="line"><span class="attr">r0</span>    = <span class="number">0.90</span>r</span><br><span class="line"><span class="attr">color</span> = hs3_a5,hs3_a4,hs3_a3,hs3_a2,hs3_a1,hs3</span><br><span class="line"><span class="attr">scale_log_base</span> = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">&lt;rules&gt;</span><br><span class="line">&lt;&lt;include exclude.hs1.rule&gt;&gt;</span><br><span class="line"></span><br><span class="line">&lt;rule&gt;</span><br><span class="line"><span class="attr">condition</span> = var(id) ne <span class="string">"hs3"</span></span><br><span class="line"><span class="attr">show</span>      = no</span><br><span class="line">&lt;/rule&gt;</span><br><span class="line"></span><br><span class="line">&lt;/rules&gt;</span><br><span class="line"></span><br><span class="line">&lt;/plot&gt;</span><br><span class="line"></span><br><span class="line">&lt;plot&gt;</span><br><span class="line"><span class="attr">type</span>  = heatmap</span><br><span class="line"><span class="attr">file</span>  = data/<span class="number">5</span>/segdup.hs1234.heatmap.txt</span><br><span class="line"><span class="attr">r1</span>    = <span class="number">0.92</span>r</span><br><span class="line"><span class="attr">r0</span>    = <span class="number">0.91</span>r</span><br><span class="line"><span class="attr">color</span> = hs4_a5,hs4_a4,hs4_a3,hs4_a2,hs4_a1,hs4</span><br><span class="line"><span class="attr">scale_log_base</span> = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">&lt;rules&gt;</span><br><span class="line">&lt;&lt;include exclude.hs1.rule&gt;&gt;</span><br><span class="line"></span><br><span class="line">&lt;rule&gt;</span><br><span class="line"><span class="attr">condition</span> = var(id) ne <span class="string">"hs4"</span></span><br><span class="line"><span class="attr">show</span>      = no</span><br><span class="line">&lt;/rule&gt;</span><br><span class="line"></span><br><span class="line">&lt;/rules&gt;</span><br><span class="line"></span><br><span class="line">&lt;/plot&gt;</span><br></pre></td></tr></table></figure></p>
<h5 id="2-6-plots-block-以文本形式显示数据"><a href="#2-6-plots-block-以文本形式显示数据" class="headerlink" title="2.6 plots block 以文本形式显示数据"></a>2.6 plots block 以文本形式显示数据</h5><p>若需要在圈图上显示一些基因的名称，此时需要以文本形式显示数据。将以下配置信息放入一个单独的配置文件中，给其命名 plots_text.conf 。<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;plot&gt;</span><br><span class="line"><span class="comment"># 表示出文字</span></span><br><span class="line">type  = text</span><br><span class="line"><span class="comment"># 数据文件路径</span></span><br><span class="line">file  = data/6/genes.labels.txt</span><br><span class="line"><span class="comment"># 显示在图形中的位置</span></span><br><span class="line">r1    = 0.8r</span><br><span class="line">r0    = 0.6r</span><br><span class="line"><span class="comment"># 标签的字体</span></span><br><span class="line">label_font = light</span><br><span class="line"><span class="comment"># 标签大小</span></span><br><span class="line">label_size = 12p</span><br><span class="line"><span class="comment"># 文字边缘的大小，设置较小则不同单词就可能会连接到一起了。</span></span><br><span class="line"><span class="comment"># padding  - text margin in angular direction</span></span><br><span class="line"><span class="comment"># rpadding - text margin in radial direction</span></span><br><span class="line">rpadding   = 5p</span><br><span class="line"><span class="comment"># 设置是否需要在 label 前加一条线，用来指出 lable 的位置。</span></span><br><span class="line">show_links     = no</span><br><span class="line">link_dims      = 0p,2p,5p,2p,2p</span><br><span class="line">link_thickness = 2p</span><br><span class="line">link_color     = black</span><br><span class="line"></span><br><span class="line">&lt;rules&gt;</span><br><span class="line">&lt;&lt;include exclude.hs1.rule&gt;&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 rule ，对 label 中含有字母 a 或 b 的特异性显示</span></span><br><span class="line">&lt;rule&gt;</span><br><span class="line">condition  = var(value) =~ /a/i</span><br><span class="line">label_font = bold</span><br><span class="line">flow       = continue</span><br><span class="line">&lt;/rule&gt;</span><br><span class="line">&lt;rule&gt;</span><br><span class="line">condition  = var(value) =~ /b/i</span><br><span class="line">color      = blue</span><br><span class="line">&lt;/rule&gt;</span><br><span class="line">&lt;/rules&gt;</span><br><span class="line"></span><br><span class="line">&lt;/plot&gt;</span><br></pre></td></tr></table></figure></p>
<h5 id="2-7-rules-block-放置常用的规则配置"><a href="#2-7-rules-block-放置常用的规则配置" class="headerlink" title="2.7 rules block 放置常用的规则配置"></a>2.7 rules block 放置常用的规则配置</h5><p>本例子中，很多track没有在1号染色体上展示，需要设置如下规则信息，将之写入到文件 exclude.hs1.rule 中<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;rule&gt;</span></span><br><span class="line"><span class="attribute">condition</span> = <span class="literal">on</span>(hs1)</span><br><span class="line"><span class="attribute">show</span>      = no</span><br><span class="line"><span class="section">&lt;/rule&gt;</span></span><br></pre></td></tr></table></figure></p>
<h5 id="2-8-主配置文件"><a href="#2-8-主配置文件" class="headerlink" title="2.8 主配置文件"></a>2.8 主配置文件</h5><p>在主配置文件 circos.conf 中，包含以上所需要的配置文件信息，则可以画出所需要的track。此外，可以设置一些全局的设置。<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 指定染色体组型的文件，该文件分为</span></span><br><span class="line">karyotype = data<span class="meta-keyword">/karyotype/</span>karyotype.human.txt</span><br><span class="line"></span><br><span class="line"><span class="meta"># 设置长度单位，以下设置表示 1M 长度的序列代表为 1u。</span></span><br><span class="line">chromosomes_units = <span class="number">1000000</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 默认设置下是将 karyotype 文件中所有的染色体都展示出来。当然，也可能根据需要仅展示指定的 chromosomes, 使用如下的参数进行设置。</span></span><br><span class="line">chromosomes_display_default = no</span><br><span class="line"><span class="meta"># 以下参数设置指定的 chromosomes 用于展示到圈图中。<span class="comment">// 中是一个正则表达式，匹配的 chromosomes 用于展示到圈图中。其匹配的对象是 karyotype 文件中的第 3 列。也可以直接列出需要展示的 chromosomes， 例如：hs1;hs2;hs3;hs4 。</span></span></span><br><span class="line">chromosomes                 = /hs[<span class="number">1</span><span class="number">-4</span>]$/</span><br><span class="line"><span class="meta"># chromosomes                 = hs1;hs2;hs3;hs4</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 以下设置各个 ideograms 的大小。其总长度为 1 ，hs1 的长度为 0.5， hs2，hs3 和 hs4 这 3 个 chromosomes 的总长度为 0.5，并且这 3 个 chromosomes 的长度是分布均匀的。注意前者的单位是 r， 后者使用了正则表达式对应多个 chromosomes， 其单位于是为 rn 。</span></span><br><span class="line">chromosomes_scale   = hs1=<span class="number">0.5</span>r,/hs[<span class="number">234</span>]/=<span class="number">0.5</span>rn</span><br><span class="line"></span><br><span class="line"><span class="meta"># 使 hs2， hs3 和 hs4 在圈图上的展示方向是反向的。</span></span><br><span class="line">chromosomes_reverse = /hs[<span class="number">234</span>]/</span><br><span class="line"></span><br><span class="line"><span class="meta"># 设置各个 ideograms 的颜色</span></span><br><span class="line">chromosomes_color   = hs1=red,hs2=orange,hs3=green,hs4=blue</span><br><span class="line"></span><br><span class="line"><span class="meta"># 默认下在 ideogram block 中统一设置了 ideogram 的位置，可以使用此参数调整指定 ideogram 的位置。</span></span><br><span class="line">chromosomes_radius  = hs4:<span class="number">0.9</span>r</span><br><span class="line"><span class="meta"># chromosomes_radius  = hs2:0.9r;hs3:0.8r;hs4:0.7r</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># karyotype 文件最后一列指定了各个 chromosomes 的颜色，而使用 chromosomes_color 参数也能修改颜色。当然，使用如下方式进行颜色的修改，则更加直观。以下方式是对颜色重新进行定义。chr1，chr2，chr3 和 chr4 对应着 karyotype 文件最后一列的值，代表着颜色的类型。此处使用 color block 来对其进行重新定义。注意重新定义的时候需要加符号 * </span></span><br><span class="line"><span class="params">&lt;colors&gt;</span></span><br><span class="line">chr1* = red</span><br><span class="line">chr2* = orange</span><br><span class="line">chr3* = green</span><br><span class="line">chr4* = blue</span><br><span class="line"><span class="params">&lt;/colors&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">### 绘制 plot 图</span></span><br><span class="line"><span class="params">&lt;plots&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="params">&lt;&lt;include plots_histogram.conf&gt;</span>&gt;</span><br><span class="line"><span class="params">&lt;&lt;include plots_heatmap.conf&gt;</span>&gt;</span><br><span class="line"><span class="params">&lt;&lt;include plots_text.conf&gt;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="params">&lt;/plots&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="params">&lt;&lt;include ideogram.conf&gt;</span>&gt;</span><br><span class="line"><span class="params">&lt;&lt;include ticks.conf&gt;</span>&gt;</span><br><span class="line"><span class="params">&lt;&lt;include links.conf&gt;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">################################################################</span></span><br><span class="line"><span class="meta"># 插入必须的并不常修改的标准参数</span></span><br><span class="line"><span class="params">&lt;image&gt;</span></span><br><span class="line"><span class="params">&lt;&lt;include etc/image.conf&gt;</span>&gt;</span><br><span class="line"><span class="params">&lt;/image&gt;</span></span><br><span class="line"><span class="params">&lt;&lt;include etc/colors_fonts_patterns.conf&gt;</span>&gt;</span><br><span class="line"><span class="params">&lt;&lt;include etc/housekeeping.conf&gt;</span>&gt;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p><strong>circos配置的单位概念</strong><br>一共有4种单位：p, r, u, b<br>  p表示像素，1p表示1像素<br>  r表示相对大小，0.95r表示95% ring 大小。<br>    u表示相对chromosomes_unit的长度，如果chromosomes_unit = 1000，则1u就是千分之一的染色体长度。<br>    b表示碱基，如果染色体长1M，那么1b就是百万分之一的长度。</p>
</blockquote>
<h3 id="三、circos运行命令"><a href="#三、circos运行命令" class="headerlink" title="三、circos运行命令"></a>三、circos运行命令</h3><p>对配置文件设置完毕后，使用命令进行画图<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./bin/circos -<span class="keyword">conf</span> circos.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure></p>
<h3 id="四、结果示例"><a href="#四、结果示例" class="headerlink" title="四、结果示例"></a>四、结果示例</h3><p>结果如下：<br><img src="http://www.chenlianfu.com/data/pictures/circos.png" alt="此处输入图片的描述"><br>此图来自陈连福：<a href="http://www.chenlianfu.com/?p=2342" target="_blank" rel="external">《Circos的安装和简单使用》</a><br>这里也展示下，我第一次绘图，主要是统计分析了SNP，InDel在染色体上的分布情况：<br><img src="http://7xubqr.com1.z0.glb.clouddn.com/circos.jpg" alt="此处输入图片的描述"><br>其中的一些文字名和右下角的图色块显示说明为PS添加。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Diary-2016-06-14]]></title>
      <url>http://starsyi.github.io/2016/06/14/Diary-2016-06-14/</url>
      <content type="html"><![CDATA[<p>It has been many days that I update my Blogs and keep English diary. </p>
<p>Review this week, first took a look at my work. I still kept remembering the words and listening English like TED and Open Class. most of my time spent on website design for our Soybean and oil painting. Here is my oil painting, will be completed. I was a green hand, but I just want to develop my interest, thought number oil painting may be a good choice, simple, easy to paint for a new bird. I enjoy this process, always appear many ideas and ties on memory sometimes during painting. </p>
<hr>
<p><img src="http://7xubqr.com1.z0.glb.clouddn.com/IMG_3132.JPG" alt="my painting"></p>
<hr>
<p>And then, To approve the contract I have been running again and again, but the contract was still on the way. Before Dragon Boat Festival, I saw a movie that I long-expected, Warcraft. It mainly because the game, World of Warcraft, it gave me much beautiful memory, I loved the story design and beautiful game screen. maybe I didn’t spend much time on it, but I love this World.</p>
<p>Next is Dragon Boat Festival. there are many manners and customs, but I know it is mainly for in commemoration of Qu Yuan. We eat zongzi, a traditional Chinese rice-pudding, and Dragon boat racing. but for me, I join Chen research group’s dinner, in her house. here has a picture that recorded our dinner, but it’s after the meal, delicious food was eaten up, just odds and ends of a meal on the table.</p>
<hr>
<p><img src="http://7xubqr.com1.z0.glb.clouddn.com/IMG_3134.JPG" alt="dinner"></p>
<hr>
<p>On the last day of  Dragon Boat Festival, I went to Luoyan island, but I really want to go is Luoyan area in fact. I mistakenly think that they are in the same place, I’m far wrong. I went the long way, so tired and exhausted. except this, I got cold, tends to badly, and start fever after ate an ice-cream cone. I thought I must be seeking for death at that time. here have some pictures on the way to Luoyan island, bad memories.</p>
<hr>
<p><img src="http://7xubqr.com1.z0.glb.clouddn.com/IMG_3133.JPG" alt="Luoyan"></p>
<hr>
<p>Last, I finished a book, 《El coronel no tiene quien le escriba 》/《No One Writes to the Colonel 》. maybe I should give a brief comment, but I thought I should read more literary works to increase my knowledge.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[忘记]]></title>
      <url>http://starsyi.github.io/2016/06/14/%E5%BF%98%E8%AE%B0/</url>
      <content type="html"><![CDATA[<center><br><embed width="870" height="490" src="http://static.hdslb.com/miniloader.swf?aid=4949374&amp;page=1" type="application/x-shockwave-flash" wmode="transparent" quality="high" allowscriptaccess="never"><br></center>

<p>【忘记】</p>
<p>演唱：西瓜JUN</p>
<p>作词：西瓜JUN<br>作曲：西瓜JUN<br>编曲：西瓜JUN<br>小提琴实录：提琴boy<br>和声：提琴boy、西瓜JUN<br>混缩：三鹿<br>曲绘：鱼鱼困<br>PV：栗原</p>
<p>温柔的风 不知在哪里停息<br>难觅踪迹 世界默然沉寂<br>厚重的云 酝酿又一场大雨<br>盘踞天际 阴沉沉的压抑</p>
<p>眼泪不争气的涌出了眼睛<br>所有心情泛滥了我的思绪<br>回忆拎不清 越想越揪心<br>原来太用情 就无所谓忘记</p>
<p>当全世界都以为我会就此放弃<br>以为我从此不再与你联系<br>而每次陷入辗转难眠之际<br>脑海里总会有你的身影</p>
<p>当全世界都以为我会笑对分离<br>以为我依旧洒脱依旧活力<br>又有谁懂深夜里<br>我哭得歇斯底里</p>
<p>music</p>
<p>眼泪不争气的涌出了眼睛<br>所有心情泛滥了我的思绪<br>回忆拎不清 越想越揪心<br>原来太用情 就无所谓忘记</p>
<p>当全世界都以为我会就此放弃<br>以为我从此不再与你联系<br>而每次陷入辗转难眠之际<br>脑海里总会有你的身影</p>
<p>当全世界都以为我会笑对分离<br>以为我依旧洒脱依旧活力<br>又有谁懂深夜里<br>我哭得歇斯底里</p>
<p>当全世界都以为我会选择远离<br>将所有关于你的全部屏蔽<br>对不起我还是不能够忘记<br>不能将你抽离我的生命</p>
<p>当全世界都以为我会彻底忘记<br>以为我不再难受不再沉迷<br>又有谁懂所有记忆<br>越想忘记 越更清晰</p>
<p>你我从此不再会有交集</p>
<p>本歌曲为转载：原作西瓜JUN，链接请看：<a href="http://5sing.kugou.com/XGJUN/default.html" target="_blank" rel="external">http://5sing.kugou.com/XGJUN/default.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Diary 2016-06-04]]></title>
      <url>http://starsyi.github.io/2016/06/04/Diary-2016-06-04/</url>
      <content type="html"><![CDATA[<p><strong>First, Picture!</strong><br><img src="http://7xubqr.com1.z0.glb.clouddn.com/tanhualin5.JPG" alt="Single Journey"></p>
<blockquote>
<p>This is my single journal, first time! A totally different experience, wonderful, fantastic, beautiful, fresh, and so on. I used to though that we’d better travel with someone, at least two people. So we can care for each other, share with each other, and kill the boring time during our travel. Of course, this is the advantage of this travel style. In fact,  when I walk out alone, maybe need a litter courage, I quickly enter my travel state, enjoy it. then I found the fascinating place of single travel. I can stay for a long time in my loved place, whoever long it takes, just because I like. I can have more time and energy to enjoy the sights of around, with more time to think, more sentiment. Calm down and enjoy it.</p>
</blockquote>
<p><strong>A big wave pircture apocalypse!!!</strong></p>
<p><img src="http://7xubqr.com1.z0.glb.clouddn.com/tanhualin1.JPG" alt="Record of the day"></p>
<hr>
<p><img src="http://7xubqr.com1.z0.glb.clouddn.com/tanhualin2.JPG" alt="inside of the Shop"></p>
<hr>
<p><img src="http://7xubqr.com1.z0.glb.clouddn.com/tanhualin3.JPG" alt="Recording"></p>
<hr>
<p><img src="http://7xubqr.com1.z0.glb.clouddn.com/tanhualin4.JPG" alt="street and shop"></p>
<hr>
<blockquote>
<p>if you can overcome yourself, you can pack and set off. I believe you will love it. It makes you improve more fast, not only in your <strong>experience</strong> but also in your <strong>soul</strong>. you’ll find you become an artistic youth at moment.</p>
</blockquote>
<hr>
<p><strong>Last, A bomb</strong></p>
<p><img src="http://7xubqr.com1.z0.glb.clouddn.com/tanhuanlin-myself.JPG" alt="myself"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Diary 2016-06-02]]></title>
      <url>http://starsyi.github.io/2016/06/02/Diary-2016-06-02/</url>
      <content type="html"><![CDATA[<p>Weather: Cloudy with light rain. A bitter cold for me.<br>Mood: better!<br>It’s time to record my whole day’s life.<br>I’m eager to grow, be more knowledge in my major, good at English,  enjoy the reading, not only academic literature but also other literature, want to go around the city, every corner. I have many things want to do and study. Only I insist on my grow up way, and step by step, I will be a person I want to be. I don’t how hard and long, but I’ll struggle on my way.<br>Every word I remembered is my footprint.<br>I started to use an app to remember the word. whether I can insist on down? I hope I can. </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Diary 2016-06-01]]></title>
      <url>http://starsyi.github.io/2016/06/01/Diary-2016-06-01/</url>
      <content type="html"><![CDATA[<p><strong>Weather: Heavy rain, Pouring rain, Rain cats and dogs</strong><br><img src="http://7xubqr.com1.z0.glb.clouddn.com/20160601weather.JPG" alt="weather"><br>Morning, about 7:10 a.m., I just wake up,  also just started to rain outside, but heavily. so I decided to wait for it being lighter. but It lasted for a long time, I still can’t help to go to the lab, because of a phone call with my boss. so I was caught in the rain, even though have the umbrella. Rain dropped from the  umbrella, and  I got wet. so here I can give some pictures about today’s rain from the web.</p>
<hr>
<p><img src="http://7xubqr.com1.z0.glb.clouddn.com/20160601-1.JPG" alt="rain1"><br>We must go to classroom, I want to study.</p>
<hr>
<p><img src="http://7xubqr.com1.z0.glb.clouddn.com/20160601-2.JPG" alt="rain2"><br>You could caught fish in our school.</p>
<hr>
<p><img src="http://7xubqr.com1.z0.glb.clouddn.com/20160601-3.JPG" alt="rain3"><br>This is Huazhong University of Science and Technology.</p>
<hr>
<p><img src="http://7xubqr.com1.z0.glb.clouddn.com/20160601-4.JPG" alt="rain4"><br>you also can pick up fish in our school.</p>
<hr>
<p>Also, you can click <a href="http://mp.weixin.qq.com/s?__biz=MzIxMjA0OTc0OQ==&amp;mid=505039668&amp;idx=1&amp;sn=527700675fa09e72d1290c816678ecf3&amp;scene=2&amp;srcid=0601xRPw9mAcjJfnZ5RIpwuZ&amp;from=timeline&amp;isappinstalled=0#wechat_redirect" target="_blank" rel="external">this link</a> to see the rain in this city.<br>I’m happy I have this unforgettable experience. </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Circos教程(一):安装]]></title>
      <url>http://starsyi.github.io/2016/05/31/Circos%E6%95%99%E7%A8%8B(%E4%B8%80)%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><p>首先，CIRCOS官网：<a href="http://circos.ca/" target="_blank" rel="external">这里</a><br>什么是CIRCOS，简单的说，CIRCOS是一个将数据和信息可视化的工具包，它可以在一个圆形的布局中可视化数据，这就能够使CIRCOS很理想的研究物体或者位置之间的关系。<br>下面是使用Circos绘制的一些图：<br><img src="http://7xubqr.com1.z0.glb.clouddn.com/Circos%E7%AE%80%E4%BB%8B.png" alt="Circos介绍"></p>
<h2 id="二、下载和安装"><a href="#二、下载和安装" class="headerlink" title="二、下载和安装"></a>二、下载和安装</h2><p>首先，下载地址：<a href="http://circos.ca/software/download/" target="_blank" rel="external">这里</a><br>这里面有几个包，根据需要下载：</p>
<table>
<thead>
<tr>
<th style="text-align:left">软件</th>
<th style="text-align:left">介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><a href="http://211.69.141.1/files/5241000000563723/120.52.72.52/circos.ca/c3pr90ntcsf0/distribution/circos-0.69-2.tgz" target="_blank" rel="external">circos-0.69-2.tgz</a></td>
<td style="text-align:left">这是用来绘图的主要的安装包程序文件（版本根据自己需要，一般选择最新的）</td>
</tr>
<tr>
<td style="text-align:left"><a href="http://circos.ca/distribution/circos-tutorials-0.67.tgz" target="_blank" rel="external">circos-tutorials-0.67.tgz</a></td>
<td style="text-align:left">这里面是用户的教程，详细的配置说明，解释，每一个图对应的相应的Circos配置文件和数据文件（个人觉得很重要，我的学习主要来自这里）</td>
</tr>
<tr>
<td style="text-align:left"><a href="http://211.69.141.1/files/31870000005635CC/circos.ca/distribution/circos-tools-0.22.tgz" target="_blank" rel="external">circos-tools-0.22.tgz</a></td>
<td style="text-align:left">这里面是一些工具，根据需要选择</td>
</tr>
</tbody>
</table>
<p>其中Circos是基于perl脚本的程序，所以它的安装难度也主要集中在安装好perl和相应的模块。而Circos的这个安装包，下载下来之后，直接解压就可以使用。</p>
<p>下面是Circos安装最重要，也可能是困难的部分，perl模块的安装。<strong>主要是非root用户的perl使用安</strong>装<br><strong>下面详细讲解一下perl的模块安装。</strong>（我这里以基于Linux的服务器来进行讲解）<br>首先，我们没有root权限，所以我们需要自己安装一个perl（官网下载，source源码编译安装），或者<a href="http://www.activestate.com/activeperl" target="_blank" rel="external">ActiveState Perl</a>，我这里一源码编译安装做讲解。</p>
<blockquote>
<p>其中我也尝试过ActiveState Perl，但是由于它提示报错： perl/bin/perl: /lib64/libc.so.6:<br>version `GLIBC_2.14’ not found (required by perl/bin/perl)<br>解决方法：参考<a href="http://blog.csdn.net/cpplang/article/details/8462768" target="_blank" rel="external">ghui’s world</a> 事先说明，我没有通过他的方法成功解决问题。<br>主要原因是glibc的版本不够，在网上找了一些教程，但是没有解决，最好的方法还是管理员直接升级glibc，但是这可能很麻烦，引起很多问题。所以放弃了，其实要是能够下载到低版本的ActivePerl就可以直接安装了，但是我在官网上没有找到低版本（最好是5.18），就放弃了。</p>
</blockquote>
<p>然后就是perl的本地安装了，这个网上的教程很多，基本上没有什么问题所以就省略了。<br>在本地安装完成之后，然后修改环境变量，然后查看perl安装好了没有：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">which</span> perl</span><br><span class="line">~/bin/perl/bin/perl</span><br><span class="line">$ perl -v</span><br><span class="line">This is perl 5, version 22, subversion 2 (v5.22.2) built <span class="keyword">for</span> x86_64-linux-thread-multi</span><br><span class="line"></span><br><span class="line">Copyright 1987-2015, Larry Wall</span><br><span class="line"></span><br><span class="line">Perl may be copied only under the terms of either the Artistic License or the</span><br><span class="line">GNU General Public License, <span class="built_in">which</span> may be found <span class="keyword">in</span> the Perl 5 <span class="built_in">source</span> kit.</span><br><span class="line"></span><br><span class="line">Complete documentation <span class="keyword">for</span> Perl, including FAQ lists, should be found on</span><br><span class="line">this system using <span class="string">"man perl"</span> or <span class="string">"perldoc perl"</span>.  If you have access to the</span><br><span class="line">Internet, point your browser at http://www.perl.org/, the Perl Home Page.</span><br></pre></td></tr></table></figure></p>
<p>这样，我们就可以进入到模块的安装：<br>首先，我们看一下需要安装安装那些文件：<br>首先进入到我们解压后的circos目录下的bin目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /your/path/circos/bin</span><br><span class="line">$ ls</span><br><span class="line">circos  circos.exe  compile.bat  compile.make  gddiag  list.modules  test.modules</span><br><span class="line">[xxyi@login bin]$ ./list.modules</span><br><span class="line">Carp</span><br><span class="line">Clone</span><br><span class="line">Config::General</span><br><span class="line">Cwd</span><br><span class="line">Data::Dumper</span><br><span class="line">Digest::MD5</span><br><span class="line">File::Basename</span><br><span class="line">File::Spec::Functions</span><br><span class="line">File::Temp</span><br><span class="line">FindB<span class="keyword">in</span></span><br><span class="line">Font::TTF::Font</span><br><span class="line">GD</span><br><span class="line">GD::Image</span><br><span class="line">Getopt::Long</span><br><span class="line">IO::File</span><br><span class="line">List::MoreUtils</span><br><span class="line">List::Util</span><br><span class="line">Math::Round</span><br><span class="line">Math::Trig</span><br><span class="line">Math::VecStat</span><br><span class="line">Memoize</span><br><span class="line">Params::Validate</span><br><span class="line">Pod::Usage</span><br><span class="line">POSIX</span><br><span class="line">Readonly</span><br><span class="line">Regexp::Common</span><br><span class="line">Statistics::Basic</span><br><span class="line">Storable</span><br><span class="line">Sys::Hostname</span><br><span class="line">Text::Balanced</span><br><span class="line">Text::Format</span><br><span class="line">Time::HiRes</span><br></pre></td></tr></table></figure></p>
<p>接下来要做的就是一个个安装这些软件：<br>主要有三种方法：<br><strong>第一种方法：</strong><br>perl -MCPAN -e shell<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ perl -MCPAN <span class="_">-e</span> shell</span><br><span class="line">Redundant argument <span class="keyword">in</span> sprintf at /public/home/xxyi/bin/perl/lib/5.22.2/CPAN.pm line 314.</span><br><span class="line">cpan shell -- CPAN exploration and modules installation (v2.10)</span><br><span class="line">Enter <span class="string">'h'</span> <span class="keyword">for</span> help.</span><br><span class="line"></span><br><span class="line">cpan[1]&gt; install Bundle::CPAN Bundle::LWP</span><br></pre></td></tr></table></figure></p>
<p>建议大家安装以上两个包，这可以解决我们安装时需要的一些安装包的依赖包。</p>
<p>通过同样的方法可以安装其他的安装包：<br>当然对于有些安装的时候 test不通过的模块可以使用force install安装包，强制安装软件，还有一些软件因为依赖包的关系，不能安装，所以可以通过先安装它的依赖包，再安装这个包，同样的不能安装的包可以尝试强制安装。</p>
<p>进入到安装界面：<br>举个例子：<br>Readonly安装失败，就是一个依赖包的安装，在test的时候没有通过，导致安装失败。因此Readonly安装会你首先安装这个依赖包，出错，然后强制安装<br>perl -MCPAN -e shell<br>force install 依赖包<br>再安装Readonly</p>
<p>对于Perl GD 模块的安装，必须先安装ligd:<br>libgd网站：<a href="http://libgd.github.io/" target="_blank" rel="external">http://libgd.github.io/</a><br>下载地址：<a href="https://github.com/libgd/libgd/releases" target="_blank" rel="external">https://github.com/libgd/libgd/releases</a><br>安装方法：见我另一篇博客：<a href="http://starsyi.github.io/2016/05/31/%E9%9D%9Eroot%E7%94%A8%E6%88%B7perl-GD%E6%A8%A1%E5%9D%97%E7%9A%84%E5%AE%89%E8%A3%85/#more">这里</a></p>
<p><strong>第二种方法：</strong><br>举个例子：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cpan -i Config::General</span><br></pre></td></tr></table></figure></p>
<p>这个方法跟第一个方法差不多</p>
<p><strong>第三种方法：</strong><br>对于其中一直安装不上的软件可以尝试手工安装<br>举个例子：<br>就是我在安装Font::TTF::Font，安装一直报错，所以本地安装，在<a href="http://search.cpan.org/下载发现，解压出来不对，可能是这个原因才导致安装出错。报错如下：" target="_blank" rel="external">http://search.cpan.org/下载发现，解压出来不对，可能是这个原因才导致安装出错。报错如下：</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$ cpan -i Font::TTF::Font  </span><br><span class="line">Loading internal null logger. Install Log::Log4perl <span class="keyword">for</span> logging messages</span><br><span class="line">CPAN: Storable loaded ok (v2.53_01)</span><br><span class="line">Reading <span class="string">'/public/home/xxyi/.cpan/Metadata'</span></span><br><span class="line">  Database was generated on Wed, 25 May 2016 11:17:02 GMT</span><br><span class="line">Running install <span class="keyword">for</span> module <span class="string">'Font::TTF::Font'</span></span><br><span class="line">CPAN: Digest::SHA loaded ok (v5.95)</span><br><span class="line">CPAN: Compress::Zlib loaded ok (v2.069)</span><br><span class="line"></span><br><span class="line">Checksum mismatch <span class="keyword">for</span> distribution file. Please investigate.</span><br><span class="line"></span><br><span class="line">Distribution id = M/MH/MHOSKEN/Font-TTF-1.05.tar.gz</span><br><span class="line">    CPAN_USERID  MHOSKEN (Martin Hosken &lt;martin_hosken@sil.org&gt;)</span><br><span class="line">    CALLED_FOR   Font::TTF::Font</span><br><span class="line">    CHECKSUM_STATUS </span><br><span class="line">    CONTAINSMODS Font::TTF Font::TTF::AATKern Font::TTF::AATutils Font::TTF::Anchor Font::TTF::Bsln Font::TTF::Cmap Font::TTF::Coverage Font::TTF::Cvt_ Font::TTF::DSIG Font::TTF::Delta Font::TTF::Dumper Font::TTF::EBDT Font::TTF::EBLC Font::TTF::Fdsc Font::TTF::Feat Font::TTF::Features::Cvar Font::TTF::Features::Size Font::TTF::Features::S<span class="built_in">set</span> Font::TTF::Fmtx Font::TTF::Font Font::TTF::Fpgm Font::TTF::GDEF Font::TTF::GPOS Font::TTF::GSUB Font::TTF::Glat Font::TTF::Gloc Font::TTF::Glyf Font::TTF::Glyph Font::TTF::GrFeat Font::TTF::Hdmx Font::TTF::Head Font::TTF::Hhea Font::TTF::Hmtx Font::TTF::Kern Font::TTF::Kern::ClassArray Font::TTF::Kern::CompactClassArray Font::TTF::Kern::OrderedList Font::TTF::Kern::StateTable Font::TTF::Kern::Subtable Font::TTF::LTSH Font::TTF::Loca Font::TTF::Maxp Font::TTF::Mort Font::TTF::Mort::Chain Font::TTF::Mort::Contextual Font::TTF::Mort::Insertion Font::TTF::Mort::Ligature Font::TTF::Mort::Noncontextual Font::TTF::Mort::Rearrangement Font::TTF::Mort::Subtable Font::TTF::Name Font::TTF::OS_2 Font::TTF::OTTags Font::TTF::OldCmap Font::TTF::OldMort Font::TTF::PCLT Font::TTF::PSNames Font::TTF::Post Font::TTF::Prep Font::TTF::Prop Font::TTF::Segarr Font::TTF::Silf Font::TTF::Sill Font::TTF::Table Font::TTF::Ttc Font::TTF::Ttopen Font::TTF::Utils Font::TTF::Vhea Font::TTF::Vmtx Font::TTF::W<span class="keyword">in</span>32 Font::TTF::Woff Font::TTF::Woff::MetaData Font::TTF::Woff::PrivateData Font::TTF::XMLparse</span><br><span class="line">    UPLOAD_DATE  2015-01-26</span><br><span class="line">    incommandcolor 1</span><br><span class="line">    localfile    /public/home/xxyi/.cpan/sources/authors/id/M/MH/MHOSKEN/Font-TTF-1.05.tar.gz</span><br><span class="line">    mandatory    1</span><br><span class="line">    negative_prefs_cache 0</span><br><span class="line">    prefs        HASH(0xe4a1550)</span><br><span class="line">    reqtype      c</span><br><span class="line"></span><br><span class="line">I<span class="string">'d recommend removing</span><br><span class="line">/public/home/xxyi/.cpan/sources/authors/id/M/MH/MHOSKEN/Font-TTF-1.05.tar.g</span><br><span class="line">z. Its</span><br><span class="line">checksum is incorrect. Maybe you have configured your '</span>urllist<span class="string">' with</span><br><span class="line">a bad URL. Please check this array with '</span>o conf urllist<span class="string">', and</span><br><span class="line">retry.</span></span><br></pre></td></tr></table></figure></p>
<p>所以搜索，在github上找到这个包<br>然后解压安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$perl</span> Makefile.PL PREFIX=/your/<span class="built_in">local</span>/path/to/perl INSTALLDIRS=perl</span><br><span class="line"><span class="variable">$make</span></span><br><span class="line"><span class="variable">$make</span> install</span><br></pre></td></tr></table></figure></p>
<p>这样就OK了，其他的安装包也可以这样</p>
<p>就使用如上的方法，一直到所有的模块安装成功：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">$ ./test.modules </span><br><span class="line">Circos can now list its own modules.</span><br><span class="line"></span><br><span class="line">&gt; circos -modules</span><br><span class="line">$ circos -modules</span><br><span class="line">ok       1.38 Carp</span><br><span class="line">ok       0.38 Clone</span><br><span class="line">ok       2.61 Config::General</span><br><span class="line">ok       3.62 Cwd</span><br><span class="line">ok      2.154 Data::Dumper</span><br><span class="line">ok       2.55 Digest::MD5</span><br><span class="line">ok       2.85 File::Basename</span><br><span class="line">ok       3.62 File::Spec::Functions</span><br><span class="line">ok     0.2304 File::Temp</span><br><span class="line">ok       1.51 FindB<span class="keyword">in</span></span><br><span class="line">ok       0.39 Font::TTF::Font</span><br><span class="line">ok       2.56 GD</span><br><span class="line">ok        0.2 GD::Polyline</span><br><span class="line">ok       2.48 Getopt::Long</span><br><span class="line">ok       1.16 IO::File</span><br><span class="line">ok      0.415 List::MoreUtils</span><br><span class="line">ok       1.45 List::Util</span><br><span class="line">ok       0.01 Math::Bezier</span><br><span class="line">ok   1.999722 Math::BigFloat</span><br><span class="line">ok       0.07 Math::Round</span><br><span class="line">ok       0.08 Math::VecStat</span><br><span class="line">ok       1.03 Memoize</span><br><span class="line">ok    1.53_01 POSIX</span><br><span class="line">ok       1.24 Params::Validate</span><br><span class="line">ok       1.69 Pod::Usage</span><br><span class="line">ok       2.04 Readonly</span><br><span class="line">ok 2016020301 Regexp::Common</span><br><span class="line">ok       2.64 SVG</span><br><span class="line">ok       1.19 Set::IntSpan</span><br><span class="line">ok     1.6611 Statistics::Basic</span><br><span class="line">ok    2.53_01 Storable</span><br><span class="line">ok       1.20 Sys::Hostname</span><br><span class="line">ok       2.03 Text::Balanced</span><br><span class="line">ok       0.59 Text::Format</span><br><span class="line">ok     1.9733 Time::HiRes</span><br><span class="line">$</span><br></pre></td></tr></table></figure></p>
<p>成功之后,运行命令,如果显示如下的信息，则你成功的安装了Circos。<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">$ circos -man</span><br><span class="line">NAME</span><br><span class="line">                                        ____ <span class="symbol">_</span></span><br><span class="line">                                       / ___(<span class="symbol">_</span>)<span class="symbol">_</span> <span class="symbol">__</span> ___ ___  ___</span><br><span class="line">                                      | |   | | '<span class="symbol">__</span>/ <span class="symbol">__</span>/ <span class="symbol">_</span> \/ <span class="symbol">__</span>|</span><br><span class="line">                                      | |___| | | | (<span class="symbol">_</span>| (<span class="symbol">_</span>) \<span class="symbol">__</span> \</span><br><span class="line">                                       \____|<span class="symbol">_</span>|<span class="symbol">_</span>|  \___\___/|___/</span><br><span class="line"></span><br><span class="line">                                                    <span class="built_in">round</span> <span class="built_in">is</span> good</span><br><span class="line"></span><br><span class="line">    circos - generate circular data visualizations</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">      # without -conf Circos will search <span class="keyword">for</span> configuration</span><br><span class="line">      circos</span><br><span class="line"></span><br><span class="line">      # use specific configuration file</span><br><span class="line">      circos -conf circos.conf </span><br><span class="line"></span><br><span class="line">      # diagnose required modules</span><br><span class="line">      circos -modules</span><br><span class="line"></span><br><span class="line">      # detailed debugging <span class="keyword">for</span> code <span class="built_in">components</span></span><br><span class="line">      # see http://www.circos.ca/documentation/tutorials/configuration/debugging</span><br><span class="line">      circos -debug_group GROUP1,[GROUP2,...]</span><br><span class="line"></span><br><span class="line">      # full debugging</span><br><span class="line">      circos -debug_group _all</span><br><span class="line"></span><br><span class="line">      # absolutely no reporting</span><br><span class="line">      circos ... [-silent]</span><br><span class="line"></span><br><span class="line">      # configuration dump of a <span class="built_in">block</span> (<span class="keyword">or</span> <span class="built_in">block</span> tree) of</span><br><span class="line">      # any parameters that match REGEXP (optional)</span><br><span class="line">      circos -cdump [BLOCK1/[BLOCK2/...]]&#123;:REGEXP&#125;</span><br><span class="line">      circos -cdump ideogram</span><br><span class="line">      circos -cdump ideogram:<span class="built_in">label</span></span><br><span class="line">      circos -cdump ideogram/spacing</span><br><span class="line"></span><br><span class="line">      # override configuration parameters</span><br><span class="line">      circos -param <span class="built_in">image</span>/<span class="built_in">radius</span>=2000p -param ideogram/<span class="built_in">show</span>=no</span><br><span class="line"></span><br><span class="line">      # <span class="keyword">for</span> fun - randomize all colors <span class="keyword">in</span> the <span class="built_in">image</span> except <span class="keyword">for</span></span><br><span class="line">      # COLOR1, COLOR2,...</span><br><span class="line">      circos -randomcolor COLOR1,[COLOR2,...]</span><br><span class="line">      circos -randomcolor white,black</span><br></pre></td></tr></table></figure></p>
<p>到这里，恭喜你，你的circos安装成功，你可以开始你的绘图工作了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[非root用户perl GD模块的安装]]></title>
      <url>http://starsyi.github.io/2016/05/31/%E9%9D%9Eroot%E7%94%A8%E6%88%B7perl-GD%E6%A8%A1%E5%9D%97%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h2 id="一、-简介"><a href="#一、-简介" class="headerlink" title="一、 简介"></a>一、 简介</h2><p>使用perl的我们都知道，很多模块的都依赖于GD模块，所以把GD模块安装好很重要。<br>首先我们要认识，GD模块是干什么的：<br>GD模块是一个用来动态创建图像的开放源码库。他是用C语言编写的，它能够读写很多不同的图像文件，GD也通常用于生成图表、图形、缩略图和许多其他的。这样大家知道他是干嘛用的了</p>
<h2 id="二、-下载安装"><a href="#二、-下载安装" class="headerlink" title="二、 下载安装"></a>二、 下载安装</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>然后，他的官网：<a href="http://libgd.github.io/" target="_blank" rel="external">LibGD</a><br>下载地址也可以在里面找到。</p>
<p>###安装###<br>在安装GD模块之前，你一定要安装好libgd这个安装包，libgd的安装也可能需要其他的很多软件，所以你的系统如果没有这些包的话，你可能要一个个安装：<br><strong>1. 安装freetype：</strong><br>官网地址：<a href="https://www.freetype.org/download.html" target="_blank" rel="external">这里</a><br>下载地址：<a href="http://ftp.twaren.net/Unix/NonGNU//freetype/freetype-2.6.3.tar.bz2" target="_blank" rel="external">这里</a>（V2.6.3）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ wget </span><br><span class="line">$ tar jxf freetype-2.6.3.tar.bz2</span><br><span class="line">$ <span class="built_in">cd</span> freetype-2.6.3/</span><br><span class="line">./configure --prefix=/your/<span class="built_in">local</span>/path/freetype --enable-shared</span><br><span class="line">$ make &amp;&amp; make install</span><br></pre></td></tr></table></figure></p>
<p><strong>2. 安装libpng：</strong><br>官网地址：<a href="http://www.libpng.org/" target="_blank" rel="external">这里</a><br>下载地址：<a href="http://jaist.dl.sourceforge.net/project/libpng/libpng16/1.6.21/libpng-1.6.21.tar.gz" target="_blank" rel="external">这里</a>（v1.6.21）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ tar zxf libpng-1.6.21.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> libpng-1.6.21/</span><br><span class="line">$ ./configure --prefix=/your/<span class="built_in">local</span>/path/png --enable-shared</span><br><span class="line">$ make  &amp;&amp; make  install</span><br></pre></td></tr></table></figure></p>
<p><strong>3. 安装jpeg：</strong><br>官网地址：<a href="http://www.ijg.org/" target="_blank" rel="external">这里</a><br>下载地址：<a href="http://www.ijg.org/files/jpegsrc.v9b.tar.gz" target="_blank" rel="external">这里</a>（v9b）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ tar zxf jpegsrc.v9b.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> jpeg-9b/</span><br><span class="line">$ ./configure --prefix=/your/<span class="built_in">local</span>/path/jpeg --enable-shared</span><br><span class="line">$ make  &amp;&amp; make install</span><br></pre></td></tr></table></figure></p>
<p><strong>4. 安装zlib：</strong><br>官网地址：<a href="http://zlib.net/" target="_blank" rel="external">这里</a><br>下载地址：<a href="http://ufpr.dl.sourceforge.net/project/libpng/zlib/1.2.8/zlib-1.2.8.tar.gz" target="_blank" rel="external">这里</a>（v1.2.8）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ tar xf zlib-1.2.8.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> zlib-1.2.8/</span><br><span class="line">$ ./configure --prefix=/your/<span class="built_in">local</span>/path/zlib</span><br><span class="line">$  make &amp;&amp; make install</span><br></pre></td></tr></table></figure></p>
<p><strong>5. 安装libgd：</strong><br>官网地址：<a href="http://libgd.github.io/" target="_blank" rel="external">这里</a><br>下载地址：<a href="https://github.com/libgd/libgd/releases/download/gd-2.2.1/libgd-2.2.1.tar.gz" target="_blank" rel="external">这里</a>（v2.2.1）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ tar jxf libgd-2.2.1.tar.gz</span><br><span class="line"><span class="variable">$cd</span> libgd-2.2.1/</span><br><span class="line">$./configure --prefix=/your/<span class="built_in">local</span>/path/gd --enable-shared --with-jpeg=/your/<span class="built_in">local</span>/path/jpeg --with-freetype=/your/<span class="built_in">local</span>/path/freetype --with-png=/your/<span class="built_in">local</span>/path/png --with-zlib=/your/<span class="built_in">local</span>/path/zlib</span><br><span class="line">$ make &amp;&amp; make install</span><br></pre></td></tr></table></figure></p>
<p><strong>当然最重要的事，就是将他们加入你的环境变量中。</strong></p>
<p>接下里你就可以轻松安装GD了，这你可以通过cpanan安装GD模块了，通过cpan就可以安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cpan -i GD</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Diary 2016-05-31]]></title>
      <url>http://starsyi.github.io/2016/05/31/Diary-2016-05-31/</url>
      <content type="html"><![CDATA[<p>This is my first diary in my Blogs. I’ll continue to write my diary in English.<br>To improve my English level, I must keep remembering the words, listen to TED or speech and write the diary.</p>
<p>Today morning, I got up at 7:00 a.m. After a simple wash gargle, then I got out.   It’s really a bad thing that I ate a bowl of Wuhan hot-dry noodles, due to the  aunt of mensa haven’t  caught my words. It’s so dry that I ate hardly. But during I went to the lab, I saw a piece of micro garden, very beautiful. May I haven’t seen the campus for a long time, many changes is going, But I missed. Here are some pictures I took when I passed by.<br><img src="http://7xubqr.com1.z0.glb.clouddn.com/PIC_20160531_075025_731.jpg" alt="Beside Shaw building"><br>From here We can see a green lawn, flowers, small trees, and Animal science Building.<br><img src="http://7xubqr.com1.z0.glb.clouddn.com/PIC_20160531_074856_219.jpg" alt="此处输入图片的描述"></p>
<p><img src="http://7xubqr.com1.z0.glb.clouddn.com/PIC_20160531_074821_B6F.jpg" alt="此处输入图片的描述"></p>
<p><img src="http://7xubqr.com1.z0.glb.clouddn.com/PIC_20160531_074932_66B.jpg" alt="此处输入图片的描述"><br>Of course, more than these micro garden, maybe I need to take more pictures of them and do a project.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[变异检测（BWA+SAMtools+picard+GATK）]]></title>
      <url>http://starsyi.github.io/2016/05/25/%E5%8F%98%E5%BC%82%E6%A3%80%E6%B5%8B%EF%BC%88BWA-SAMtools-picard-GATK%EF%BC%89/</url>
      <content type="html"><![CDATA[<h2 id="一、-简介"><a href="#一、-简介" class="headerlink" title="一、 简介"></a>一、 简介</h2><p>首先说说GATK可以做什么。它主要用于从sequencing 数据中进行variant calling，包括SNP、INDEL。比如现在风行的exome sequencing找variant，一般通过BWA+GATK的pipeline进行数据分析。<br>要run GATK，首先得了解它的网站(<a href="http://www.broadinstitute.org/gatk/)。" target="_blank" rel="external">http://www.broadinstitute.org/gatk/)。</a></p>
<hr>
<p>使用GATK前须知事项：<br>（1）对GATK的测试主要使用的是人类全基因组和外显子组的测序数据，而且全部是基于illumina数据格式，目前还没有提供其他格式文件（如Ion Torrent）或者实验设计（RNA-Seq）的分析方法。<br>（2）GATK是一个应用于前沿科学研究的软件，不断在更新和修正，因此，在使用GATK进行变异检测时，最好是下载最新的版本，目前的版本是3.5（2016-05）。下载网站：<a href="https://www.broadinstitute.org/gatk/download/auth?package=GATK，" target="_blank" rel="external">https://www.broadinstitute.org/gatk/download/auth?package=GATK，</a> 下载可能会需要注册！</p>
<hr>
<h2 id="二、GATK的使用流程"><a href="#二、GATK的使用流程" class="headerlink" title="二、GATK的使用流程"></a>二、GATK的使用流程</h2><p><strong>GATK最佳使用方案：</strong>共3大步骤。原始数据的处理—变异检测—初步分析。<br><strong>方案一：</strong>使用GATK检测变异，<a href="https://www.broadinstitute.org/gatk/guide/bp_step.php?p=1" target="_blank" rel="external">官方推荐的流程</a>：<br><img src="http://7xubqr.com1.z0.glb.clouddn.com/GATK_workflows.png" alt="GATK SNP Calling"></p>
<p><strong>方案二：</strong>在这里我们使用的流程可能更复杂一点，这也是目前很多科研团队使用的流程，即在官方流程上结合SAMtools工具的一套流程。<br><img src="http://7xubqr.com1.z0.glb.clouddn.com/GATK3.png" alt="GATK SNP Calling combine SAMtools"></p>
<h2 id="三、-准备工作"><a href="#三、-准备工作" class="headerlink" title="三、 准备工作"></a>三、 准备工作</h2><h3 id="3-1-软件下载安装"><a href="#3-1-软件下载安装" class="headerlink" title="3.1 软件下载安装"></a>3.1 软件下载安装</h3><ol>
<li>bwa：<a href="http://iweb.dl.sourceforge.net/project/bio-bwa/bwa-0.7.12.tar.bz2" target="_blank" rel="external">http://iweb.dl.sourceforge.net/project/bio-bwa/bwa-0.7.12.tar.bz2</a></li>
<li>picard：<a href="http://broadinstitute.github.io/picard/" target="_blank" rel="external">http://broadinstitute.github.io/picard/</a></li>
<li>samtools：<a href="https://github.com/samtools/samtools/archive/0.1.19.tar.gz（这里使用0.1.19版本）" target="_blank" rel="external">https://github.com/samtools/samtools/archive/0.1.19.tar.gz（这里使用0.1.19版本）</a></li>
<li>GATK：<a href="https://www.broadinstitute.org/gatk/download/auth?package=GATK（需要注册登录）" target="_blank" rel="external">https://www.broadinstitute.org/gatk/download/auth?package=GATK（需要注册登录）</a></li>
<li>R语言；</li>
<li>java；<h3 id="3-2-软件安装"><a href="#3-2-软件安装" class="headerlink" title="3.2 软件安装"></a>3.2 软件安装</h3>其中picard tools和GATK，解压到某个目录即可，无需安装。打开解压缩后的目录，会发现GenomeAnalysisTK.jar这个文件。我们要用的各种工具都在这个包里。务必下载最新版（当然只是建议）。<br>BWA、SAMtools、R、java的安装我就不再这里说了，我前面的博文已经讲过BWA、和SAMtools可以参考，还有R和java参考网上，也许我以后会加进来。<h3 id="3-3-参考基因组和annotation下载"><a href="#3-3-参考基因组和annotation下载" class="headerlink" title="3.3 参考基因组和annotation下载"></a>3.3 参考基因组和annotation下载</h3>这里主要是针对需要用到已知变异信息的情况。对于这些已知变异，GATK只提供了人类的已知变异信息，可以在GATK的FTP站点下载（GATK resource bundle）。<br>GATK resource bundle介绍：<strong><a href="http://gatkforums.broadinstitute.org/discussion/1213/whats-in-the-resource-bundle-and-how-can-i-get-it" target="_blank" rel="external">这里</a></strong><br>GATK resource bundle FTP地址：<strong><a href="http://gatkforums.broadinstitute.org/discussion/1215/how-can-i-access-the-gsa-public-ftp-server" target="_blank" rel="external">这里</a></strong><br>例如呢，以hg19(human genome build 19.此外，b37也很常用)为参考序列,<br>输入如下命令： lftp ftp.broadinstitute.org -u gsapubftp-anonymous<br>回车后键入空格，便可进入resource bundle。进入其中名为bundle的目录，找到最新版的hg19目录。<br>要下载的文件包括：<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ucsc<span class="selector-class">.hg19</span><span class="selector-class">.fasta</span></span><br><span class="line">ucsc<span class="selector-class">.hg19</span><span class="selector-class">.fasta</span><span class="selector-class">.fai</span></span><br><span class="line"><span class="number">1000</span>G_omni2.<span class="number">5</span><span class="selector-class">.hg19</span><span class="selector-class">.vcf</span></span><br><span class="line"><span class="number">1000</span>G_omni2.<span class="number">5</span><span class="selector-class">.hg19</span><span class="selector-class">.vcf</span><span class="selector-class">.idx</span></span><br><span class="line"><span class="number">1000</span>G_phase1<span class="selector-class">.indels</span><span class="selector-class">.hg19</span><span class="selector-class">.vcf</span></span><br><span class="line"><span class="number">1000</span>G_phase1<span class="selector-class">.indels</span><span class="selector-class">.hg19</span><span class="selector-class">.vcf</span><span class="selector-class">.idx</span></span><br><span class="line">dbsnp_137<span class="selector-class">.hg19</span><span class="selector-class">.vcf</span></span><br><span class="line">dbsnp_137<span class="selector-class">.hg19</span><span class="selector-class">.vcf</span><span class="selector-class">.idx</span></span><br><span class="line">hapmap_3.<span class="number">3</span><span class="selector-class">.hg19</span><span class="selector-class">.vcf</span></span><br><span class="line">hapmap_3.<span class="number">3</span><span class="selector-class">.hg19</span><span class="selector-class">.vcf</span><span class="selector-class">.idx</span></span><br><span class="line">Mills_and_1000G_gold_standard<span class="selector-class">.indels</span><span class="selector-class">.hg19</span><span class="selector-class">.vcf</span></span><br><span class="line">Mills_and_1000G_gold_standard<span class="selector-class">.indels</span><span class="selector-class">.hg19</span><span class="selector-class">.vcf</span><span class="selector-class">.idx</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>当然，如果要研究的不是人类基因组，在这里我们要研究的物种，并没有vcf注释信息，这时可以自己去找一些该物种已有的vcf注释文件，如果没有的话，需要自行构建已知变异，GATK提供了详细的构建方法。</p>
<h3 id="3-4-R设置"><a href="#3-4-R设置" class="headerlink" title="3.4 R设置"></a>3.4 R设置</h3><p>GATK在进行BQSR和VQSR的过程中会使用到R软件绘制一些图，因此，在运行GATK之前最好先检查一下是否正确安装了R和所需要的包，所需要的包大概包括ggplot2、gplots、bitops、caTools、colorspace、gdata、gsalib、reshape、RColorBrewer等。如果画图时出现错误，会提示需要安装的包的名称。</p>
<p>如何check这些packages有没有安装？以ggplot2为例，进入R，输入library(ggplot2)，如果没有error信息，就表明安装了ggplot2；如果没有安装，输入命令install.packages(“ggplot2”)，按照提示操作便可安装ggplot2。如果package安装不成功，很可能是权限问题：默认使用的R是系统管理员安装的，而你在/usr等目录下没有write权限。这是可以选择直接在自己目录下安装了R，然后install各种packages。也可以在 install.packages时指定将packages安装到自己的目录。</p>
<p>将R packages安装到自己目录的方法：<br> install.packages(“ggplot2”, lib=”/your/own/R-packages/“)<br>然后将指定的路径添加到R_LIBS变量即可。</p>
<p>gsalib的安装有点不一样。<br>从该网站下载gsalib：<a href="https://github.com/broadgsa/gatk" target="_blank" rel="external">https://github.com/broadgsa/gatk</a><br>解压缩后，进入build.xml文件所在的目录，输入命令ant gsalib。这样就可以安装gsalib 了。如果该gsalib仍然无法load，可能需要将gsllib的path告诉R。<br><strong><a href="http://gatkforums.broadinstitute.org/discussion/1244/what-is-a-gatkreport" target="_blank" rel="external">这里</a></strong>有较详细的步骤。（奇怪的是我没有~/.Rprofle文件，ant完后也没有add path，仍然work了）<br>此外，gaslib安装要求java的版本为1.6。</p>
<p>设置路径：<br>export R_HOME=/your/R/install/path<br>export R_LIBS=/your/R-packages/path</p>
<p>如何查看当前使用的R的路径？输入 which R即可。</p>
<h2 id="四、GATK使用"><a href="#四、GATK使用" class="headerlink" title="四、GATK使用"></a>四、GATK使用</h2><h3 id="4-1-原始数据处理"><a href="#4-1-原始数据处理" class="headerlink" title="4.1 原始数据处理"></a>4.1 原始数据处理</h3><h4 id="1-对原始下机fastq文件进行过滤和比对（mapping"><a href="#1-对原始下机fastq文件进行过滤和比对（mapping" class="headerlink" title="(1). 对原始下机fastq文件进行过滤和比对（mapping)"></a>(1). 对原始下机fastq文件进行过滤和比对（mapping)</h4><p>对于Illumina下机数据推荐使用bwa进行mapping。<br>Bwa比对步骤大致如下：</p>
<p><strong>(a) 对参考基因建立索引</strong><br>eg:<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bwa index <span class="keyword">ref</span>.fa</span><br></pre></td></tr></table></figure></p>
<p>构建索引时需要注意的问题：bwa构建索引有两种算法，两种算法都是基于BWT的，这两种算法通过参数-a is 和-a bwtsw进行选择。其中-a bwtsw对于短的参考序列是不工作的，必须要大于等于10Mb；-a is是默认参数，这个参数不适用于大的参考序列，必须要小于等于2G。</p>
<p><strong>(b) BWA Alignment</strong><br>详细的命令参数，参考我的博文：<a href="http://starsyi.github.io/2016/05/24/BWA-%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/">BWA命令详解</a>  其中bwa以及后面使用的一系列tools都能直接读取gzip压缩文件。为了节省硬盘空间，以及减少压缩/解压缩过程的read/write时间，最好直接用*.gz文件作为input。output也最好先在管道里使用gzip压缩一下再输出。<br>eg:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bwa mem -t <span class="number">20</span> ref<span class="selector-class">.fa</span> read1<span class="selector-class">.fq</span> read2<span class="selector-class">.fq</span> &gt; sample.sam</span><br></pre></td></tr></table></figure></p>
<h4 id="2-对sam文件进行进行重新排序（reorder）"><a href="#2-对sam文件进行进行重新排序（reorder）" class="headerlink" title="(2). 对sam文件进行进行重新排序（reorder）"></a>(2). 对sam文件进行进行重新排序（reorder）</h4><p>由BWA生成的sam文件时按字典式排序法进行的排序（lexicographically）进行排序的（chr10，chr11…chr19，chr1，chr20…chr22，chr2，chr3…chrM，chrX，chrY），但是GATK在进行callsnp的时候是按照染色体组型（karyotypic）进行的（chrM，chr1，chr2…chr22，chrX，chrY），因此要对原始sam文件进行reorder。可以使用picard-tools中的ReorderSam完成。<br>Picard的SortSam需指定一个tmp目录，用于存放中间文件，中间文件会很大，above 10G.注意指定目录的空间大小。<br>eg:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar <span class="variable">$PICARD</span>/SortSam.jar \</span><br><span class="line">        REFERENCE=ref.fa \</span><br><span class="line">        INPUT=sample.sam \</span><br><span class="line">        OUTPUT=sample.reorder.sam \</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>注意：</p>
<ol>
<li>这一步的头文件可以人工加上，同时要确保头文件中有的序号在下面序列中也有对应的。虽然在GATK网站上的说明chrM可以在最前也可以在最后，但是当把chrM放在最后时可能会出错。</li>
<li>在进行排序之前，要先构建参考序列的索引。<br>e.g：samtools faidx hg19.fa ;<br>最后生成的索引文件：hg19.fa.fai。</li>
<li>如果在上一步想把大文件切分成小文件的时候，头文件可以自己手工加上，之后运行这一步就好了。</li>
</ol>
</blockquote>
<h4 id="3-将sam文件转换成bam文件（bam是二进制文件，运算速度快）"><a href="#3-将sam文件转换成bam文件（bam是二进制文件，运算速度快）" class="headerlink" title="(3). 将sam文件转换成bam文件（bam是二进制文件，运算速度快）"></a>(3). 将sam文件转换成bam文件（bam是二进制文件，运算速度快）</h4><p>这一步可使用samtools view完成。如果上一步直接使用的bam后缀，则不需要再转换。<br>e.g:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ samtools view -bS sample<span class="selector-class">.reorder</span><span class="selector-class">.sam</span> -o sample<span class="selector-class">.reorder</span><span class="selector-class">.bam</span></span><br></pre></td></tr></table></figure></p>
<h4 id="4-对bam文件进行sort排序处理"><a href="#4-对bam文件进行sort排序处理" class="headerlink" title="(4). 对bam文件进行sort排序处理"></a>(4). 对bam文件进行sort排序处理</h4><p>这一步是将sam文件中同一染色体对应的条目按照坐标顺序从小到大进行排序。可以使用picard-tools中SortSam完成。<br>e.g:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar picard-tools/SortSam<span class="selector-class">.jar</span> \</span><br><span class="line">        INPUT=sample<span class="selector-class">.reorder</span><span class="selector-class">.bam</span> \ #这里也可以直接用sample<span class="selector-class">.sort</span><span class="selector-class">.sam</span>,则输出为bam格式，可以省去前面samtools的转换步骤</span><br><span class="line">        OUTPUT=sample<span class="selector-class">.sort</span><span class="selector-class">.bam</span> \ </span><br><span class="line">        SORT_ORDER=coordinate</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>注意：<br>SAMtools也提供了工具进行sam file的sort和bam file的生成，并且不会生成大的中间文件。但是不建议在GATK做SNP calling等步骤的时候使用samtools的排序方式进行sort。</p>
</blockquote>
<h4 id="5-对bam文件进行加头（head）处理"><a href="#5-对bam文件进行加头（head）处理" class="headerlink" title="(5). 对bam文件进行加头（head）处理"></a>(5). 对bam文件进行加头（head）处理</h4><p>GATK2.0以上版本将不再支持无头文件的变异检测。加头这一步可以在BWA比对的时候进行，通过-R参数的选择可以完成。如果在BWA比对期间没有选择-R参数，可以增加这一步骤。可使用picard-tools中AddOrReplaceReadGroups完成。<br>e.g:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar picard-tools/AddOrReplaceReadGroups.jar \</span><br><span class="line">        I=sample.sort.bam \</span><br><span class="line">        O=sample.sort.addhead.bam \</span><br><span class="line">        ID=sampleID \</span><br><span class="line">        LB=sampleID \</span><br><span class="line">        PL=illumina \</span><br><span class="line">        PU=samplePU \</span><br><span class="line">        SM=sample</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>ID str：输入reads集ID号；LB：read集文库名；PL：测序平台（illunima或solid）；PU：测序平台下级单位名称（run的名称）；SM：样本名称。<br>注意：这一步尽量不要手动加头，本人尝试过多次手工加头，虽然看起来与软件加的头是一样的，但是程序却无法运行.</p>
</blockquote>
<h4 id="6-Merge"><a href="#6-Merge" class="headerlink" title="(6). Merge"></a>(6). Merge</h4><p>如果一个样本分为多个lane进行测序，那么在进行下一步之前可以将每个lane的bam文件合并。<br>e.g:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ java -jar  picard-tools-1.70/MergeSamFiles.jar \</span><br><span class="line">    INPUT=lane1.bam \</span><br><span class="line">    INPUT=lane2.bam \</span><br><span class="line">    INPUT=lane3.bam \</span><br><span class="line">    INPUT=lane4.bam \</span><br><span class="line">    ……</span><br><span class="line">    INPUT=lane8.bam \</span><br><span class="line">    OUTPUT=sample_all.bam</span><br></pre></td></tr></table></figure></p>
<h4 id="7-Duplicates-Marking"><a href="#7-Duplicates-Marking" class="headerlink" title="(7). Duplicates Marking"></a>(7). Duplicates Marking</h4><p>在制备文库的过程中，由于PCR扩增过程中会存在一些偏差，也就是说有的序列会被过量扩增。这样，在比对的时候，这些过量扩增出来的完全相同的序列就会比对到基因组的相同位置。而这些过量扩增的reads并不是基因组自身固有序列，不能作为变异检测的证据，因此，要尽量去除这些由PCR扩增所形成的duplicates，这一步可以使用picard-tools来完成。去重复的过程是给这些序列设置一个flag以标志它们，方便GATK的识别。还可以设置 REMOVE_DUPLICATES=true 来丢弃duplicated序列。对于是否选择标记或者删除，对结果应该没有什么影响，GATK官方流程里面给出的例子是仅做标记不删除。这里定义的重复序列是这样的：如果两条reads具有相同的长度而且比对到了基因组的同一位置，那么就认为这样的reads是由PCR扩增而来，就会被GATK标记。<br>e.g:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ java  -Xmx10g -jar <span class="variable">$PICARD</span>/MarkDuplicates<span class="selector-class">.jar</span> \</span><br><span class="line">        I=sample<span class="selector-class">.sort</span><span class="selector-class">.addhead</span><span class="selector-class">.bam</span> \</span><br><span class="line">        O=sample<span class="selector-class">.rmdup</span><span class="selector-class">.bam</span> \</span><br><span class="line">        VALIDATION_STRINGENCY=LENIENT \</span><br><span class="line">        MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=<span class="number">1000</span> \</span><br><span class="line">        REMOVE_DUPLICATES= false \</span><br><span class="line">        M=sample<span class="selector-class">.sort</span><span class="selector-class">.addhead</span><span class="selector-class">.rmdup</span><span class="selector-class">.metric</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p><strong>注意：</strong><br>dedup这一步只要在library层面上进行就可以了，例如一个sample如果建了多个库的话，对每个库进行dedup即可，不需要把所有库合成一个sample再进行dedup操作。其实并不能准确的定义被mask的reads到底是不是duplicates，重复序列的程度与测序深度和文库类型都有关系。最主要目的就是尽量减小文库构建时引入文库的PCR bias。</p>
</blockquote>
<h4 id="8-要对上一步得到的结果生成索引文件"><a href="#8-要对上一步得到的结果生成索引文件" class="headerlink" title="(8). 要对上一步得到的结果生成索引文件"></a>(8). 要对上一步得到的结果生成索引文件</h4><p>可以用samtools完成，生成的索引后缀是bai。<br>e.g:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ samtools index sample<span class="selector-class">.rmdup</span><span class="selector-class">.bam</span></span><br></pre></td></tr></table></figure></p>
<h4 id="9-Local-realignment-around-indels"><a href="#9-Local-realignment-around-indels" class="headerlink" title="(9). Local realignment around indels"></a>(9). Local realignment around indels</h4><p>这一步的目的就是将比对到indel附近的reads进行局部重新比对，将比对的错误率降到最低。一般来说，绝大部分需要进行重新比对的基因组区域，都是因为插入/缺失的存在，因为在indel附近的比对会出现大量的碱基错配，这些碱基的错配很容易被误认为SNP。还有，在比对过程中，比对算法对于每一条read的处理都是独立的，不可能同时把多条reads与参考基因组比对来排错。因此，即使有一些reads能够正确的比对到indel，但那些恰恰比对到indel开始或者结束位置的read也会有很高的比对错误率，这都是需要重新比对的。Local realignment就是将由indel导致错配的区域进行重新比对，将indel附近的比对错误率降到最低。<br>主要分为两步：<br>第一步，通过运行RealignerTargetCreator来确定要进行重新比对的区域。<br>e.g:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK<span class="selector-class">.jar</span> \</span><br><span class="line">        -R ref<span class="selector-class">.fa</span> \</span><br><span class="line">        -T RealignerTargetCreator \</span><br><span class="line">        -I sample<span class="selector-class">.rmdup</span><span class="selector-class">.bam</span> \</span><br><span class="line">        -o sample<span class="selector-class">.realign</span><span class="selector-class">.intervals</span> \</span><br><span class="line">        -known known<span class="selector-class">.indels</span><span class="selector-class">.vcf</span> #如果没有已知变异位点的信息，暂时可以不用，那么这一步的结果用来后面自己构建know sites</span><br></pre></td></tr></table></figure></p>
<p>参数说明：<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"><span class="symbol">R:</span>             参考基因组；</span><br><span class="line"></span>-<span class="ruby"><span class="symbol">T:</span>             选择的GATK工具；</span><br><span class="line"></span>-<span class="ruby"><span class="symbol">I:</span>             输入上一步所得bam文件；</span><br><span class="line"></span>-<span class="ruby"><span class="symbol">o:</span>             输出的需要重新比对的基因组区域结果；</span><br><span class="line"></span>-<span class="ruby"><span class="symbol">maxInterval:</span>   允许进行重新比对的基因组区域的最大值，不能太大，太大耗费会很长时间，默认值<span class="number">500</span>；</span><br><span class="line"></span>-<span class="ruby"><span class="symbol">known:</span>         已知的可靠的indel位点，指定已知的可靠的indel位点，重比对将主要围绕这些位点进行，对于人类基因组数据而言，可以直接指定GATK resource bundle里面的indel文件（必须是vcf文件）。</span></span><br></pre></td></tr></table></figure></p>
<p>对于known sites的选择很重要，GATK中每一个用到known sites的工具对于known sites的使用都是不一样的，但是所有的都有一个共同目的，那就是分辨真实的变异位点和不可信的变异位点。如果不提供这些known sites的话，这些统计工具就会产生偏差，最后会严重影响结果的可信度。在这些需要知道known sites的工具里面，只有UnifiedGenotyper和HaplotypeCaller对known sites没有太严格的要求。</p>
<p>如果你所研究的对象是人类基因组的话，那就简单多了，因为GATK网站上对如何使用人类基因组的known sites做出了详细的说明，具体的选择方法如下表，这些文件都可以在GATK resource bundle中下载。</p>
<table>
<thead>
<tr>
<th>Tool</th>
<th style="text-align:center">dbSNP 129</th>
<th style="text-align:center">dbSNP &gt;132</th>
<th style="text-align:center">Mills indels</th>
<th style="text-align:center">1KG indels</th>
<th style="text-align:center">HapMap</th>
<th style="text-align:center">Omni</th>
</tr>
</thead>
<tbody>
<tr>
<td>RealignerTargetCreator</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center">X</td>
<td style="text-align:center">X</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td>IndelRealigner</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center">X</td>
<td style="text-align:center">X</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td>BaseRecalibrator</td>
<td style="text-align:center"></td>
<td style="text-align:center">X</td>
<td style="text-align:center">X</td>
<td style="text-align:center">X</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td>(UnifiedGenotyper/ HaplotypeCaller)</td>
<td style="text-align:center"></td>
<td style="text-align:center">X</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td>VariantRecalibrator</td>
<td style="text-align:center"></td>
<td style="text-align:center">X</td>
<td style="text-align:center">X</td>
<td style="text-align:center"></td>
<td style="text-align:center">X</td>
<td style="text-align:center">X</td>
</tr>
<tr>
<td>VariantEval</td>
<td style="text-align:center">X</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<p><strong>第二步</strong>，通过运行IndelRealigner在这些区域内进行重新比对。<br>e.g:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK<span class="selector-class">.jar</span> \</span><br><span class="line">        -R ref<span class="selector-class">.fa</span> \</span><br><span class="line">        -T IndelRealigner \</span><br><span class="line">        -targetIntervals sample<span class="selector-class">.realign</span><span class="selector-class">.intervals</span> \</span><br><span class="line">        -I sample<span class="selector-class">.rmdup</span><span class="selector-class">.bam</span> \</span><br><span class="line">        -o sample<span class="selector-class">.realign</span><span class="selector-class">.bam</span> \</span><br><span class="line">        -known known<span class="selector-class">.indels</span><span class="selector-class">.vcf</span> #如果没有已知变异位点的信息，暂时可以不用，那么这一步的结果用来后面自己构建know sites</span><br></pre></td></tr></table></figure></p>
<p>运行结束后，生成的sample.realign.bam即为最后重比对后的文件。</p>
<blockquote>
<p><strong>注意：</strong></p>
<ol>
<li>第一步和第二步中使用的输入文件（bam文件）、参考基因组和已知indel文件必须是相同的文件。</li>
<li>当在相同的基因组区域发现多个indel存在时，这个工具会从其中选择一个最有可能存在比对错误的indel进行重新比对，剩余的其他indel不予考虑。</li>
<li>对于454下机数据，本工具不支持。此外，这一步还会忽略bwa比对中质量值为0的read以及在CIGAR信息中存在连续indel的reads。</li>
</ol>
</blockquote>
<hr>
<p><strong>GATK+samtools构建know sites</strong><br>但是如果你要研究的不是人类基因组的话，那就有点麻烦了，<strong><a href="http://www.broadinstitute.org/gatk/guide/article?id=1243" target="_blank" rel="external">这个网站</a></strong>上是做非人类基因组时，大家分享的经验，可以参考一下。这个known sites如果实在没有的话，也是可以自己构建的：首先，先使用没有经过矫正的数据进行一轮SNP calling；然后，挑选最可信的SNP位点进行BQSR分析；最后，在使用这些经过BQSR的数据进行一次真正的SNP calling。这几步可能要重复好多次才能得到可靠的结果。<br><strong>第一步：</strong><br>使用GATK检测变异：<br>eg:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK<span class="selector-class">.jar</span> \</span><br><span class="line">        -R ref<span class="selector-class">.fa</span> \</span><br><span class="line">        -T UnifiedGenotyper \</span><br><span class="line">        -I sample<span class="selector-class">.realign</span><span class="selector-class">.bam</span> \</span><br><span class="line">        -o sample<span class="selector-class">.gatk</span><span class="selector-class">.raw</span><span class="selector-class">.vcf</span> \</span><br><span class="line">        -dcov <span class="number">200</span> -A QualByDepth -A FisherStrand -A AlleleBalance -A Coverage -A MappingQualityZero -A TandemRepeatAnnotator -baq CALCULATE_AS_NECESSARY -stand_call_conf <span class="number">30.0</span> -stand_emit_conf <span class="number">10.0</span> \</span><br><span class="line">        -glm BOTH -rf BadCigar \</span><br><span class="line">        -log ./log/sample<span class="selector-class">.gatk</span><span class="selector-class">.raw</span><span class="selector-class">.vcf</span><span class="selector-class">.log</span></span><br></pre></td></tr></table></figure></p>
<p><strong>第二步:</strong><br>使用Samtools检测变异：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ samtools index <span class="keyword">sample</span>.realign.bam </span><br><span class="line">$ samtools mpileup -DSugf <span class="variable">$SOYBEAN_REF</span> <span class="keyword">sample</span>.realign.bam | bcftools <span class="keyword">view</span> -cvg - &gt; <span class="keyword">sample</span>.samtools.raw.vcf</span><br></pre></td></tr></table></figure></p>
<p><strong>第三步:</strong><br>结合GATK和SAMtools的vcf结果：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK<span class="selector-class">.jar</span> \</span><br><span class="line">        -R ref<span class="selector-class">.fa</span> \</span><br><span class="line">        -T SelectVariants \</span><br><span class="line">        --variant sample<span class="selector-class">.gatk</span><span class="selector-class">.raw</span><span class="selector-class">.vcf</span> \</span><br><span class="line">        --concordance sample<span class="selector-class">.samtools</span><span class="selector-class">.raw</span><span class="selector-class">.vcf</span> \</span><br><span class="line">        -o sample<span class="selector-class">.concordance</span><span class="selector-class">.raw</span><span class="selector-class">.vcf</span> \</span><br><span class="line">        -log ./log/sample<span class="selector-class">.concordance</span><span class="selector-class">.raw</span><span class="selector-class">.vcf</span><span class="selector-class">.log</span></span><br></pre></td></tr></table></figure></p>
<p><strong>第四步：</strong><br>过滤，挑选最可信的SNP位点：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ MEANQUAL=$(awk <span class="string">'&#123; if ($1 !~ /#/) &#123; total += $6; count++  &#125;  &#125; END &#123; print total/count  &#125;'</span> sample<span class="selector-class">.concordance</span><span class="selector-class">.raw</span><span class="selector-class">.vcf</span>)</span><br><span class="line">$ java  -jar GenomeAnalysisTK<span class="selector-class">.jar</span> \</span><br><span class="line">        -R ref<span class="selector-class">.fa</span> \</span><br><span class="line">        -T VariantFiltration \</span><br><span class="line">        --filterExpression <span class="string">"QD &lt; 20.0 || ReadPosRankSum &lt; -8.0 || FS &gt; 10.0 || QUAL &lt; $MEANQUAL"</span> --filterName LowQualFilter \</span><br><span class="line">        --missingValuesInExpressionsShouldEvaluateAsFailing \</span><br><span class="line">        --variant sample<span class="selector-class">.concordance</span><span class="selector-class">.raw</span><span class="selector-class">.vcf</span> \</span><br><span class="line">        --logging_level ERROR -o sample<span class="selector-class">.concordance</span><span class="selector-class">.flt</span><span class="selector-class">.vcf</span> \</span><br><span class="line">        -log ./log/sample<span class="selector-class">.concordance</span><span class="selector-class">.flt</span><span class="selector-class">.vcf</span><span class="selector-class">.log</span></span><br><span class="line">$ grep -v <span class="string">"Filter"</span> sample<span class="selector-class">.concordance</span><span class="selector-class">.flt</span><span class="selector-class">.vcf</span> &gt; sample<span class="selector-class">.concordance</span><span class="selector-class">.flt</span><span class="selector-class">.knowsites</span><span class="selector-class">.vcf</span></span><br></pre></td></tr></table></figure></p>
<p>这样我们就得到了可信度比较高的<strong>know sites</strong>。</p>
<hr>
<h4 id="10-Base-quality-score-recalibration"><a href="#10-Base-quality-score-recalibration" class="headerlink" title="(10). Base quality score recalibration"></a>(10). Base quality score recalibration</h4><p>这一步是对bam文件里reads的碱基质量值进行重新校正，使最后输出的bam文件中reads中碱基的质量值能够更加接近真实的与参考基因组之间错配的概率。这一步适用于多种数据类型，包括illunima、solid、454、CG等数据格式。在GATK2.0以上版本中还可以对indel的质量值进行校正，这一步对indel calling非常有帮助。<br>举例说明，在reads碱基质量值被校正之前，我们要保留质量值在Q25以上的碱基，但是实际上质量值在Q25的这些碱基的错误率在1%，也就是说质量值只有Q20，这样就会对后续的变异检测的可信度造成影响。还有，在边合成边测序的测序过程中，在reads末端碱基的错误率往往要比起始部位更高。另外，AC的质量值往往要低于TG。BQSR的就是要对这些质量值进行校正。<br>BQSR主要有三步：<br><strong>第一步：</strong><br>利用工具BaseRecalibrator，根据一些known sites，生成一个校正质量值所需要的数据文件，GATK网站以“.grp”为后缀命名。<br>eg:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK<span class="selector-class">.jar</span> \</span><br><span class="line">        -T BaseRecalibrator \</span><br><span class="line">        -R ref<span class="selector-class">.fa</span> \</span><br><span class="line">        -I sample<span class="selector-class">.realign</span><span class="selector-class">.bam</span> \</span><br><span class="line">        -knownSites sample<span class="selector-class">.concordance</span><span class="selector-class">.flt</span><span class="selector-class">.knowsites</span><span class="selector-class">.vcf</span> \</span><br><span class="line">        -o sample<span class="selector-class">.recal_data</span><span class="selector-class">.grp</span> \</span><br><span class="line">        -log ./log/sample<span class="selector-class">.recal_data_1</span><span class="selector-class">.grp</span><span class="selector-class">.log</span></span><br></pre></td></tr></table></figure></p>
<p><strong>第二步：</strong><br>利用第一步生成的ChrALL.100.sam.recal.08-1.grp来生成校正后的数据文件，也是以“.grp”命名，这一步主要是为了与校正之前的数据进行比较，最后生成碱基质量值校正前后的比较图，如果不想生成最后BQSR比较图，这一步<strong>可以省略</strong>。<br>eg:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK<span class="selector-class">.jar</span> \</span><br><span class="line">        -T BaseRecalibrator \</span><br><span class="line">        -R ref<span class="selector-class">.fa</span> \</span><br><span class="line">        -I sample<span class="selector-class">.realign</span><span class="selector-class">.bam</span> \</span><br><span class="line">        -BQSR sample<span class="selector-class">.recal_data</span><span class="selector-class">.grp</span> \</span><br><span class="line">        -o sample<span class="selector-class">.recal_data_2</span><span class="selector-class">.grp</span> \</span><br><span class="line">        -knownSites sample<span class="selector-class">.concordance</span><span class="selector-class">.flt</span><span class="selector-class">.knowsites</span><span class="selector-class">.vcf</span></span><br></pre></td></tr></table></figure></p>
<p><strong>第三步：</strong><br>利用工具PrintReads将经过质量值校正的数据输出到新的bam文件中，用于后续的变异检测。<br>eg:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK<span class="selector-class">.jar</span> \</span><br><span class="line">        -R ref<span class="selector-class">.fa</span> \</span><br><span class="line">        -T PrintReads \</span><br><span class="line">        -I sample<span class="selector-class">.realign</span><span class="selector-class">.bam</span> \</span><br><span class="line">        -o sample<span class="selector-class">.recal</span><span class="selector-class">.bam</span> \</span><br><span class="line">        -BQSR sample<span class="selector-class">.recal_data_1</span><span class="selector-class">.grp</span> \</span><br><span class="line">        -log ./log/sample<span class="selector-class">.recal</span><span class="selector-class">.bam</span><span class="selector-class">.log</span></span><br></pre></td></tr></table></figure></p>
<p>主要参数说明：<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-<span class="keyword">bqsrBAQGOP: </span>   <span class="keyword">BQSR </span><span class="keyword">BAQ </span>gap open 罚值，默认值是<span class="number">40</span>，如果是对全基因组数据进行<span class="keyword">BQSR分析，设置为30会更好。</span><br><span class="line"></span>-lqt:           在计算过程中，该算法所能考虑的reads两端的最小质量值。如果质量值小于该值，计算过程中将不予考虑，默认值是<span class="number">2</span>。</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p><strong>注意：</strong> </p>
<ol>
<li>当bam文件中的reads数量过少时，BQSR可能不会正常工作，GATK网站建议base数量要大于100M才能得到比较好的结果。</li>
<li>除非你所研究的样本所得到的reads数实在太少，或者比对结果中的mismatch基本上都是实际存在的变异，否则必须要进行BQSR这一步。对于人类基因组，即使有了dbSNP和千人基因组的数据，还有很多mismatch是错误的。因此，这一步能做一定要做。</li>
</ol>
</blockquote>
<h4 id="11-分析和评估BQSR结果"><a href="#11-分析和评估BQSR结果" class="headerlink" title="(11). 分析和评估BQSR结果"></a>(11). 分析和评估BQSR结果</h4><p>这一步会生成评估前后碱基质量值的比较结果，可以选择使用图片和表格的形式展示。<br>eg:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK<span class="selector-class">.jar</span> \</span><br><span class="line">        -T AnalyzeCovariates \</span><br><span class="line">        -R ref<span class="selector-class">.fa</span> \</span><br><span class="line">        -before sample<span class="selector-class">.recal_data_1</span><span class="selector-class">.grp</span> \</span><br><span class="line">        -after sample<span class="selector-class">.recal_data_2</span><span class="selector-class">.grp</span> \</span><br><span class="line">        -csv sample<span class="selector-class">.recal</span><span class="selector-class">.grp</span><span class="selector-class">.csv</span> \</span><br><span class="line">        -plots sample<span class="selector-class">.recal</span><span class="selector-class">.grp</span><span class="selector-class">.pdf</span></span><br></pre></td></tr></table></figure></p>
<p>参数解释：<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">before：   基于原始比对结果生成的第一次校对表格。</span><br><span class="line"></span>-<span class="ruby">after：    基于第一次校对表格生成的第二次校对表格。</span><br><span class="line"></span>-<span class="ruby">plots：    评估BQSR结果的报告文件。</span><br><span class="line"></span>-<span class="ruby">csv：      生成报告中图标所需要的所有数据。</span></span><br></pre></td></tr></table></figure></p>
<h4 id="12-Reduce-bam-file"><a href="#12-Reduce-bam-file" class="headerlink" title="(12).Reduce bam file"></a>(12).Reduce bam file</h4><p>这一步是使用ReduceReads这个工具将bam文件进行压缩，生成新的bam文件，新的bam文件仍然保持bam文件的格式和所有进行变异检测所需要的信息。这样不仅能够节省存储空间，也方便后续变异检测过程中对数据的处理。<br>eg:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK<span class="selector-class">.jar</span> \</span><br><span class="line">        -T ReduceReads \</span><br><span class="line">        -R hg19<span class="selector-class">.fa</span> \</span><br><span class="line">        -I sample<span class="selector-class">.recal</span><span class="selector-class">.bam</span> \</span><br><span class="line">        -o sample<span class="selector-class">.recal</span><span class="selector-class">.reduce</span><span class="selector-class">.bam</span></span><br></pre></td></tr></table></figure></p>
<p>到此为止，GATK流程中的第一大步骤就结束了，完成了variants calling所需要的所有准备工作，生成了用于下一步变异检测的bam文件。</p>
<h3 id="4-2-变异检测"><a href="#4-2-变异检测" class="headerlink" title="4.2 变异检测"></a>4.2 变异检测</h3><h4 id="1-SNP-Calling"><a href="#1-SNP-Calling" class="headerlink" title="(1). SNP Calling"></a>(1). SNP Calling</h4><p>e.g:<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK.jar \</span><br><span class="line">        -<span class="ruby">R ref.fa \</span><br><span class="line"></span>        -<span class="ruby">T UnifiedGenotyper \</span><br><span class="line"></span>        -<span class="ruby">I sample.recal.bam \</span><br><span class="line"></span>        -<span class="ruby">o sample.snp.raw.vcf \</span><br><span class="line"></span>        -<span class="ruby">dcov <span class="number">200</span> \</span><br><span class="line"></span>        -<span class="ruby">A QualByDepth -A FisherStrand -A AlleleBalance -A Coverage -A MappingQualityZero -A TandemRepeatAnnotator \</span><br><span class="line"></span>        -<span class="ruby">baq CALCULATE_AS_NECESSARY \</span><br><span class="line"></span>        -<span class="ruby">stand_call_conf <span class="number">30.0</span> \</span><br><span class="line"></span>        -<span class="ruby">stand_emit_conf <span class="number">10.0</span> \</span><br><span class="line"></span>        -<span class="ruby">glm SNP \</span><br><span class="line"></span>        -<span class="ruby">log ./log/sample.snp.raw.vcf.log</span></span><br></pre></td></tr></table></figure></p>
<p>主要参数解释：<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">A：                指定一个或者多个注释信息，最后输出到vcf文件中。</span><br><span class="line"></span>-<span class="ruby">XA：               指定不做哪些注释，最后不会输出到vcf文件中。</span><br><span class="line"></span>-<span class="ruby">D：                已知的snp文件。</span><br><span class="line"></span>-<span class="ruby">glm：              选择检测变异的类型。SNP表示只进行snp检测；INDEL表示只对indel进行检测；BOTH表示同时检测snp和indel。默认值是SNP。</span><br><span class="line"></span>-<span class="ruby">hets：             杂合度的值，用于计算先验概率。默认值是<span class="number">0</span>.<span class="number">001</span>。</span><br><span class="line"></span>-<span class="ruby"><span class="symbol">maxAltAlleles:</span>     容许存在的最大alt allele的数目，默认值是<span class="number">6</span>。**这个参数要特别注意，不要轻易修改默认值**，程序设置的默认值几乎可以满足所有的分析，如果修改了可能会导致程序无法运行。</span><br><span class="line"></span>-<span class="ruby">mbq：              变异检测时，碱基的最小质量值。如果小于这个值，将不会对其进行变异检测。这个参数不适用于indel检测，默认值是<span class="number">17</span>。</span><br><span class="line"></span>-<span class="ruby"><span class="symbol">minIndelCnt:</span>       在做indel calling的时候，支持一个indel的最少read数量。也就是说，如果同时有多少条reads同时支持一个候选indel时，软件才开始进行indel calling。降低这个值可以增加indel calling的敏感度，但是会增加耗费的时间和假阳性。</span><br><span class="line"></span>-<span class="ruby"><span class="symbol">minIndelFrac:</span>      在做indel calling的时候，支持一个indel的reads数量占比对到该indel位置的所有reads数量的百分比。也就是说，只有同时满足-minIndelCnt和-minIndelFrac两个参数条件时，才会进行indel calling。</span><br><span class="line"></span>-<span class="ruby">onlyEmitSamples：  当指定这个参数时，只有指定的样本的变异检测结果会输出到vcf文件中。</span><br><span class="line"></span>-<span class="ruby"><span class="symbol">stand_emit_conf:</span>   在变异检测过程中，所容许的最小质量值。只有大于等于这个设定值的变异位点会被输出到结果中。</span><br><span class="line"></span>-<span class="ruby"><span class="symbol">stand_call_conf:</span>   在变异检测过程中，用于区分低质量变异位点和高质量变异位点的阈值。只有质量值高于这个阈值的位点才会被视为高质量的。低于这个质量值的变异位点会在输出结果中标注LowQual。在千人基因组计划第二阶段的变异检测时，利用<span class="number">35</span>x的数据进行snp calling的时候，当设置成<span class="number">50</span>时，有大概<span class="number">10</span>%的假阳性。</span><br><span class="line"></span>-<span class="ruby"><span class="symbol">dcov:</span>              这个参数用于控制检测变异数据的coverage(X)，<span class="number">4</span>X的数据可以设置为<span class="number">40</span>，大于<span class="number">30</span>X的数据可以设置为<span class="number">200</span>。</span></span><br></pre></td></tr></table></figure></p>
<h4 id="2-InDel-calling"><a href="#2-InDel-calling" class="headerlink" title="(2). InDel calling"></a>(2). InDel calling</h4><p>eg:<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK.jar \</span><br><span class="line">        -<span class="ruby">R ref.fa \</span><br><span class="line"></span>        -<span class="ruby">T UnifiedGenotyper \</span><br><span class="line"></span>        -<span class="ruby">I sample.recal.bam \</span><br><span class="line"></span>        -<span class="ruby">o sample.indel.raw.vcf \</span><br><span class="line"></span>        -<span class="ruby">dcov <span class="number">200</span> \</span><br><span class="line"></span>        -<span class="ruby">A QualByDepth -A FisherStrand -A AlleleBalance -A Coverage -A MappingQualityZero -A TandemRepeatAnnotator \</span><br><span class="line"></span>        -<span class="ruby">baq CALCULATE_AS_NECESSARY \</span><br><span class="line"></span>        -<span class="ruby">stand_call_conf <span class="number">30.0</span> \</span><br><span class="line"></span>        -<span class="ruby">stand_emit_conf <span class="number">10.0</span> \</span><br><span class="line"></span>        -<span class="ruby">glm INDEL \</span><br><span class="line"></span>        -<span class="ruby">log ./log/sample.indel.raw.vcf.log</span></span><br></pre></td></tr></table></figure></p>
<hr>
<p>###附：###<br>以下均参考<a href="http://blog.sina.com.cn/s/blog_12d5e3d3c0101qu6r.html" target="_blank" rel="external">葡萄糖的博客</a>，自己没有测试：<br>转接上面的4.2变异检测<br><strong>变异检测</strong><br><strong>（1）Variant Calling</strong><br>GATK在这一步里面提供了两个工具进行变异检测——UnifiedGenotyper和HaplotypeCaller。其中HaplotypeCaller一直还在开发之中，包括生成的结果以及计算模型和命令行参数一直在变动，因此，目前使用比较多的还是UnifiedGenotyper。此外，HaplotypeCaller不支持Reduce之后的bam文件，因此，当选择使用HaplotypeCaller进行变异检测时，不需要进行Reduce reads。</p>
<p>UnifiedGenotyper是集合多种变异检测方法而成的一种Variants Caller，既可以用于单个样本的变异检测，也可以用于群体的变异检测。UnifiedGenotyper使用贝叶斯最大似然模型，同时估计基因型和基因频率，最后对每一个样本的每一个变异位点和基因型都会给出一个精确的后验概率。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">java -jar GenomeAnalysisTK<span class="selector-class">.jar</span></span><br><span class="line">-glm BOTH</span><br><span class="line">-l INFO</span><br><span class="line">-R hg19<span class="selector-class">.fa</span></span><br><span class="line">-T UnifiedGenotyper</span><br><span class="line">-I ChrALL.<span class="number">100</span><span class="selector-class">.sam</span><span class="selector-class">.recal</span>.<span class="number">08</span>-<span class="number">3</span><span class="selector-class">.grp</span><span class="selector-class">.reduce</span><span class="selector-class">.bam</span></span><br><span class="line">-D dbsnp_137<span class="selector-class">.hg19</span><span class="selector-class">.vcf</span></span><br><span class="line">-o ChrALL.<span class="number">100</span><span class="selector-class">.sam</span><span class="selector-class">.recal</span>.<span class="number">10</span><span class="selector-class">.vcf</span></span><br><span class="line">-metrics ChrALL.<span class="number">100</span><span class="selector-class">.sam</span><span class="selector-class">.recal</span>.<span class="number">10</span><span class="selector-class">.metrics</span></span><br><span class="line">-stand_call_conf  <span class="number">10</span></span><br><span class="line">-stand_emit_conf  <span class="number">30</span></span><br></pre></td></tr></table></figure></p>
<p>上述命令将对输入的bam文件中的所有样本进行变异检测，最后生成一个vcf文件，vcf文件中会包含所有样本的变异位点和基因型信息。但是现在所得到的结果是最原始的、没有经过任何过滤和校正的Variants集合。这一步产生的变异位点会有很高的假阳性，尤其是indel，因此，必须要进行进一步的筛选过滤。这一步还可以指定对基因组的某一区域进行变异检测，只需要增加一个参数 -L：target_interval.list，格式是bed格式文件。</p>
<blockquote>
<p><strong>注意：</strong><br>GATK进行变异检测的时候，是按照染色体排序顺序进行的（先call chr1，然后chr2，然后chr3…最后chrY），并非多条染色体并行检测的，因此，如果数据量比较大的话，建议分染色体分别进行，对性染色体的变异检测可以同常染色体方法。<br>大多数参数的默认值可以满足大多数研究的需求，因此，在做变异检测过程中，如果对参数意义不是很明确，不建议修改。</p>
</blockquote>
<p><strong>（2）对原始变异检测结果进行过滤（hard filter and VQSR）</strong><br>这一步的目的就是对上一步call出来的变异位点进行过滤，去掉不可信的位点。这一步可以有两种方法，一种是通过GATK的VariantFiltration，另一种是通过GATK的VQSR（变异位点质量值重新校正）进行过滤。</p>
<p>通过GATK网站上提供的最佳方案可以看出，GATK是推荐使用VASR的，但使用VQSR数据量一定要达到要求，数据量太小无法使用高斯模型。还有，在使用VAQR时，indel和snp要分别进行。</p>
<pre><code>VQSR原理介绍：
这个模型是根据已有的真实变异位点（人类基因组一般使用HapMap3中的位点，以及这些位点在Omni 2.5M SNP芯片中出现的多态位点）来训练，最后得到一个训练好的能够很好的评估真伪的错误评估模型，可以叫他适应性错误评估模型。这个适应性的错误评估模型可以应用到call出来的原始变异集合中已知的变异位点和新发现的变异位点，进而去评估每一个变异位点发生错误的概率，最终会给出一个得分。这个得分最后会被写入vcf文件的INFO信息里，叫做VQSLOD，就是在训练好的混合高斯模型下，一个位点是真实的概率比上这个位点可能是假阳性的概率的log odds ratio（对数差异比），因此，可以定性的认为，这个值越大就越好。
</code></pre><p>VQSR主要分两个步骤，这两个步骤会使用两个不同的工具：<strong>VariantRecalibrator</strong>和<strong>ApplyRecalibration</strong>。</p>
<blockquote>
<p> <strong>VariantRecalibrator:</strong>通过大量的高质量的已知变异集合的各个注释（包括很多种，后面介绍）的值来创建一个高斯混合模型，然后用于评估所有的变异位点。这个文件最后将生成一个recalibration文件。<br><strong>原理简单介绍:</strong> 这个模型首先要拿到真实变异数据集和上一步骤中得到的原始变异数据集的交集，然后对这些SNP值相对于具体注释信息的分布情况进行模拟，将这些变异位点进行聚类，最后根据聚类结果赋予所有变异位点相应的VQSLOD值。越接近聚类核心的变异位点得到的VQSLOD值越高。</p>
<p><strong>ApplyRecalibration:</strong>这一步将模型的各个参数应用于原始vcf文件中的每一个变异位点，这时，每一个变异位点的注释信息列中都会出现一个VQSLOD值，然后模型会根据这个值对变异位点进行过滤，过滤后的信息会写在vcf文件的filter一列中。<br><strong>原理简单介绍:</strong>在VariantRecalibrator这一步中，每个变异位点已经得到了一个VQSLOD值了，同时，这些LOD值在训练集里也进行了排序。当你在这一步中设置一个tranche sensitivity的阈值（这个阈值一般是一个百分数，如设置成99%），那么，如果LOD值从大到小排序的话，这个程序就会认为在这个训练集中，LOD值在前99%的是可信的，当这个值低于这个阈值，就认为是错误的。最后，程序就会用这个标准来过滤上一步call出来的原始变异集合。如果LOD值超过这个阈值，在filter那一列就会显示PASS，如果低于这个值就会被过滤掉，但是这些位点仍然会显示在结果里面，只不过会在filter那一列标示出他所属于的tranche sensitivity 的名称。在设置tranche sensitivity 的阈值时，要兼顾敏感度和质量值。</p>
</blockquote>
<p><strong>对高斯混合模型生成图片的解释：</strong><br><img src="http://7xubqr.com1.z0.glb.clouddn.com/%E9%AB%98%E6%96%AF%E6%B7%B7%E5%90%88%E6%A8%A1%E5%9E%8B%E7%94%9F%E6%88%90%E5%9B%BE%E7%89%87.jpg" alt="此处输入图片的描述"><br>在VariantRecalibrator这一步，程序会通过已知位点来训练概率模型，训练完成后会生成一组图片，而且每对注释信息都对应一组图片（上图），这组图片能够帮助我们理解一个概率模型是否与我们的数据相匹配，也就是说这个模型能不能很好的区分假阳性和真实位点。</p>
<p>上图是第一步完成后生成的一个报告的一部分，图中只表示了一对注释所对应的图。左上角的图表示的是适合当前数据的概率密度图，绿色区域表示高质量变异位点所在位置，红色区域表示低质量概率分布区域。如果变异位点分布在红色区域，则会被过滤掉。右上角图中红色的点表示在经过VQSR之后被过滤掉的变异位点，黑色的表示的是留下来的。红色的表示的都是没有达到所设定的tranche sensitivity 阈值的点。左下角的图表示的是用来训练模型的点，绿色的点表示通过训练进入到ApplyRecalibration的变异位点，紫色的点则表示质量值很低的，没有达到质量要求的点。右下角的图表示的是已知的和新发现的变异位点的分布，红色的点表示新发现的变异位点，而蓝色的点表示的是已知的变异位点，看这幅图就是看这两个注释信息能不能很好的区分已知的点（大部分是真实的）和未知的点（大部分是假阳性）。</p>
<p>从图中可以看出，这个模拟结果可以很好的将真实的变异位点和假阳性变异位点分开（左下图），形成了明显的界限，也就是说，如果一个变异位点的这两个注释值，只要有一个落在了界限之外，就会被过滤掉。最主要的是要看右边两个图片，只要能很好的区分开novel和known以及filtered和retained就可以。其实在如何选择注释值存在一定得主观性，因此，在做VariantRecalibrator时可以做两次，第一次尽可能的多的选择这些注释值，第一遍跑完之后，选择几个区分好的，再做一次VariantRecalibrator，然后再做ApplyRecalibration。具体每个注释值得意义可以参考：<strong><a href="http://www.broadinstitute.org/gatk/guide/tagged?tag=annotation" target="_blank" rel="external">这个网址</a></strong>中的内容，有每个注释的详细信息的链接。</p>
<p><strong>tranche值的设定</strong><br>前面提到了，这个值得设定是用来在后续的ApplyRecalibration中如何根据这个阈值来过滤变异位点的，也就是说，如果这个值设定的比较高的话，那么最后留下来的变异位点就会多，但同时假阳性的位点也会相应增加；如果设定的低的话，虽然假阳性会减少，但是会丢失很多真实的位点。因此，跟选择注释时一样，可以run两遍VariantRecalibrator，第一遍的时候多写几个阈值，第一遍跑完之后看结果，看那个阈值好，选择一个最好的阈值，再run一遍VariantRecalibrator。至于说怎么区分好坏，有几个标准：</p>
<pre><code>1. 看结果中已知变异位点与新发现变异位点之间的比例，这个比例不要太大，因为大多数新发现的变异都是假阳性，如果太多的话，可能假阳性的比例就比较大；
2. 看保留的变异数目，这个就要根据具体的需求进行选择了。
3. 看TI/TV值，对于人类全基因组，这个值应该在2.15左右，对于外显子组，这个值应该在3.2左右，不要太小或太大，越接近这个数值越好，这个值如果太小，说明可能存在比较多的假阳性。
</code></pre><p>千人中所选择的tranche值是99，仅供参考。</p>
<blockquote>
<p><strong>注意：</strong><br>Indel不支持tranche值的选择，另外，一部分注释类型在做indel的校正时也不支持，具体信息可以详查GATK网站。<br>当数据量太小时，可能高斯模型不会运行，因为变异位点数满足不了模型的统计需求。这时候可以通过降低–maxGaussian的值，让程序运行。这个值表示的是程序将变异位点分成的最大的组数，降低这个值让程序把变异位点聚类到更少的组里面，使每个组中的变异位点数增加来满足统计需求，但是这样做降低程序分辨真伪的能力。因此，在运行程序的时候，要对各方面进行权衡。</p>
</blockquote>
<p>eg:<br><strong>对SNP结果进行校正</strong><br><strong>第一步：</strong><br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK.jar \</span><br><span class="line">        -<span class="ruby">R ref.fa \</span><br><span class="line"></span>        -<span class="ruby">-maxGaussians <span class="number">4</span> \</span><br><span class="line"></span>        -<span class="ruby">numBad <span class="number">10000</span> (这个参数在最新的GATK版本里面已经没有了，用的时候注意版本，<span class="number">2.8</span>.<span class="number">1</span>里面不用自己设置这个参数)</span><br><span class="line"></span>        -<span class="ruby">T VariantRecalibrator \</span><br><span class="line"></span>        -<span class="ruby">mode SNP \</span><br><span class="line"></span>        -<span class="ruby">input ChrALL.<span class="number">100</span>.sam.recal.<span class="number">10</span>.vcf \</span><br><span class="line"></span>        -<span class="ruby"><span class="symbol">resource:</span>hapmap,known=<span class="literal">false</span>,training=<span class="literal">true</span>,truth=<span class="literal">true</span>,prior=<span class="number">15.0</span> hapmap_3.<span class="number">3</span>.hg19.vcf</span><br><span class="line"></span>        -<span class="ruby"><span class="symbol">resource:</span>omni,known=<span class="literal">false</span>,training=<span class="literal">true</span>,truth=<span class="literal">false</span>,prior=<span class="number">12.0</span> <span class="number">1000</span>G_omni2.<span class="number">5</span>.hg19.vcf</span><br><span class="line"></span>        -<span class="ruby"><span class="symbol">resource:</span><span class="number">1000</span>G,known=<span class="literal">false</span>,training=<span class="literal">true</span>,truth=<span class="literal">false</span>,prior=<span class="number">10.0</span> <span class="number">1000</span>G_phase1.snps.high_confidence.hg19.vcf</span><br><span class="line"></span>        -<span class="ruby"><span class="symbol">resource:</span>dbsnp,known=<span class="literal">true</span>,training=<span class="literal">false</span>,truth=<span class="literal">false</span>,prior=<span class="number">2.0</span> dbsnp_137.hg19.vcf</span><br><span class="line"></span>        -<span class="ruby">an QD</span><br><span class="line"></span>        -<span class="ruby">an HaplotypeScore</span><br><span class="line"></span>        -<span class="ruby">an MQRankSum</span><br><span class="line"></span>        -<span class="ruby">an ReadPosRankSum</span><br><span class="line"></span>        -<span class="ruby">an FS</span><br><span class="line"></span>        -<span class="ruby">an MQ</span><br><span class="line"></span>        -<span class="ruby">an InbreedingCoeff</span><br><span class="line"></span>        -<span class="ruby">recalFile hg19.vcf.snp_11_Q1<span class="number">0</span>.recal</span><br><span class="line"></span>        -<span class="ruby">tranchesFile hg19.vcf.snp_11_Q1<span class="number">0</span>.tranches</span><br><span class="line"></span>        -<span class="ruby">rscriptFile hg19.vcf.snp_11.plot_Q1<span class="number">0</span>.R</span><br><span class="line"></span>        -<span class="ruby">nt <span class="number">4</span></span><br><span class="line"></span>        -<span class="ruby">-TStranche <span class="number">90.0</span></span><br><span class="line"></span>        -<span class="ruby">-TStranche <span class="number">93.0</span></span><br><span class="line"></span>        -<span class="ruby">-TStranche <span class="number">95.0</span></span><br><span class="line"></span>        -<span class="ruby">-TStranche <span class="number">97.0</span></span><br><span class="line"></span>        -<span class="ruby">-TStranche <span class="number">99.0</span></span><br><span class="line"></span>        -<span class="ruby">-TStranche <span class="number">99.9</span></span></span><br></pre></td></tr></table></figure></p>
<p>先run一下上面的代码，这一步可以尽可能多的设置注释类型和tranche的值，然后根据这次跑出来的结果选择出最好的注释类型和tranche值之后，再次运行VariantRecalibrator。<br><strong>第二步：</strong><br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK.jar \</span><br><span class="line">        -<span class="ruby">R hg19.fa \</span><br><span class="line"></span>        -<span class="ruby">-maxGaussians <span class="number">4</span> \</span><br><span class="line"></span>        -<span class="ruby">numBad <span class="number">10000</span> \</span><br><span class="line"></span>        -<span class="ruby">T VariantRecalibrator \</span><br><span class="line"></span>        -<span class="ruby">mode SNP \</span><br><span class="line"></span>        -<span class="ruby">input ChrALL.<span class="number">100</span>.sam.recal.<span class="number">10</span>.vcf \</span><br><span class="line"></span>        -<span class="ruby"><span class="symbol">resource:</span>hapmap,known=<span class="literal">false</span>,training=<span class="literal">true</span>,truth=<span class="literal">true</span>,prior=<span class="number">15.0</span> hapmap_3.<span class="number">3</span>.hg19.vcf \</span><br><span class="line"></span>        -<span class="ruby"><span class="symbol">resource:</span>omni,known=<span class="literal">false</span>,training=<span class="literal">true</span>,truth=<span class="literal">false</span>,prior=<span class="number">12.0</span> <span class="number">1000</span>G_omni2.<span class="number">5</span>.hg19.vcf \</span><br><span class="line"></span>        -<span class="ruby"><span class="symbol">resource:</span><span class="number">1000</span>G,known=<span class="literal">false</span>,training=<span class="literal">true</span>,truth=<span class="literal">false</span>,prior=<span class="number">10.0</span> <span class="number">1000</span>G_phase1.snps.high_confidence.hg19.vcf \</span><br><span class="line"></span>        -<span class="ruby"><span class="symbol">resource:</span>dbsnp,known=<span class="literal">true</span>,training=<span class="literal">false</span>,truth=<span class="literal">false</span>,prior=<span class="number">2.0</span> dbsnp_137.hg19.vcf \</span><br><span class="line"></span>        -<span class="ruby">an HaplotypeScore \</span><br><span class="line"></span>        -<span class="ruby">an MQRankSum \</span><br><span class="line"></span>        -<span class="ruby">-TStranche <span class="number">97.0</span> \</span><br><span class="line"></span>        -<span class="ruby">recalFile hg19.vcf.snp_11_Q1<span class="number">0</span>.recal \</span><br><span class="line"></span>        -<span class="ruby">tranchesFile hg19.vcf.snp_11_Q1<span class="number">0</span>.tranches \</span><br><span class="line"></span>        -<span class="ruby">rscriptFile hg19.vcf.snp_11.plot_Q1<span class="number">0</span>.R \</span><br><span class="line"></span>        -<span class="ruby">nt <span class="number">4</span></span></span><br></pre></td></tr></table></figure></p>
<p>这一步run出来的结果可以直接用于下一步的ApplyRecalibration。<br><strong>第三步</strong><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK<span class="selector-class">.jar</span> \</span><br><span class="line">        -R hg19<span class="selector-class">.fa</span> \</span><br><span class="line">        -T ApplyRecalibration \</span><br><span class="line">        -mode SNP \</span><br><span class="line">        -<span class="selector-tag">input</span> hg19<span class="selector-class">.recal_10_Q10</span><span class="selector-class">.vcf</span> \</span><br><span class="line">        -tranchesFile hg19<span class="selector-class">.vcf</span><span class="selector-class">.snp_12_Q10-2</span><span class="selector-class">.tranches</span> \</span><br><span class="line">        -recalFile hg19<span class="selector-class">.vcf</span><span class="selector-class">.snp_12_Q10-2</span><span class="selector-class">.recal</span> \</span><br><span class="line">        -o hg19<span class="selector-class">.snp</span><span class="selector-class">.filter</span><span class="selector-class">.t97</span><span class="selector-class">.Q10_13</span><span class="selector-class">.snp</span><span class="selector-class">.vcf</span> \</span><br><span class="line">        --ts_filter_level <span class="number">97</span></span><br></pre></td></tr></table></figure></p>
<p>最终生成的hg19.snp.filter.t97.Q10_13.snp.vcf这个文件中的SNP位点已经全部经过校正过滤，INDEL位点还是原始数据，需要对INDEL再进行一次校正过滤。</p>
<p><strong>对INDEL结果进行校正，与SNP基本一致，只不过INDEL需要使用的known resource不一样</strong><br><strong>第一步：</strong></p>
<pre><code>同SNP 多选择一些注释类型，但是不用选择tranche值,tranche值是专门为SNP设定的，即使设定了这个值（2.4版本是可以计算这个的，以后就不计算了），计算出来也都是错的，这个在indel里不需要考虑。
</code></pre><p><strong>第二步：</strong><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK<span class="selector-class">.jar</span> \</span><br><span class="line">        -T VariantRecalibrator \</span><br><span class="line">        -R hg19<span class="selector-class">.fa</span> \</span><br><span class="line">        -mode INDEL \</span><br><span class="line">        --maxGaussians <span class="number">4</span> \</span><br><span class="line">        -std <span class="number">10.0</span> \</span><br><span class="line">        -percentBad <span class="number">0.12</span> \</span><br><span class="line">        -<span class="selector-tag">input</span> ChrALL.<span class="number">100</span><span class="selector-class">.sam</span><span class="selector-class">.recal</span>.<span class="number">10</span><span class="selector-class">.vcf</span> \</span><br><span class="line">        -resource:mills,known=true,training=true,truth=true,prior=<span class="number">12.0</span> Mills_and_1000G_gold_standard<span class="selector-class">.indels</span><span class="selector-class">.hg19</span> \</span><br><span class="line">        -an MQ \</span><br><span class="line">        -an FS \</span><br><span class="line">        -an InbreedingCoeff \</span><br><span class="line">        -recalFile ChrALL.<span class="number">100</span><span class="selector-class">.sam</span><span class="selector-class">.recal</span>.<span class="number">10</span><span class="selector-class">.indel</span><span class="selector-class">.recal</span> \</span><br><span class="line">        -tranchesFile ChrALL.<span class="number">100</span><span class="selector-class">.sam</span><span class="selector-class">.recal</span>.<span class="number">10</span><span class="selector-class">.indel</span><span class="selector-class">.tranche</span> \</span><br><span class="line">        -rscriptFile ChrALL.<span class="number">100</span><span class="selector-class">.sam</span><span class="selector-class">.recal</span>.<span class="number">10</span><span class="selector-class">.indel</span><span class="selector-class">.R</span></span><br></pre></td></tr></table></figure></p>
<p><strong>第三步：</strong><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK<span class="selector-class">.jar</span> \</span><br><span class="line">        -T ApplyRecalibration \</span><br><span class="line">        -R hg19<span class="selector-class">.fa</span> \</span><br><span class="line">        -mode INDEL \</span><br><span class="line">        -<span class="selector-tag">input</span> hg19<span class="selector-class">.snp</span><span class="selector-class">.filter</span><span class="selector-class">.t97</span><span class="selector-class">.Q10_13</span><span class="selector-class">.snp</span><span class="selector-class">.vcf</span> \</span><br><span class="line">        -recalFile ChrALL.<span class="number">100</span><span class="selector-class">.sam</span><span class="selector-class">.recal</span>.<span class="number">11</span><span class="selector-class">.indel</span><span class="selector-class">.recal</span> \</span><br><span class="line">        -tranchesFile ChrALL.<span class="number">100</span><span class="selector-class">.sam</span><span class="selector-class">.recal</span>.<span class="number">11</span><span class="selector-class">.indel</span><span class="selector-class">.tranche</span> \</span><br><span class="line">        -o hg19<span class="selector-class">.snp</span><span class="selector-class">.filter</span><span class="selector-class">.t97</span><span class="selector-class">.Q10_13</span><span class="selector-class">.both</span><span class="selector-class">.vcf</span></span><br></pre></td></tr></table></figure></p>
<p>最后得到的hg19.snp.filter.t97.Q10_13.both.vcf文件，就是我们最终想得到的过滤好的变异集合。</p>
<p>主要参数解释：</p>
<p><strong>VariantRecalibrator</strong><br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">badLodCutoff           当LOD得分低于这个值的时候，就用于构建高斯混合模型的bad variants。默认值是-<span class="number">5</span>。</span><br><span class="line"></span>-<span class="ruby">maxNumTrainingData     构建高斯模型过程中，用于训练的最大位点数目。如果超过这个数目，将被随机删除。默认值是<span class="number">2500000</span>。</span><br><span class="line"></span>-<span class="ruby">minNumBad              构建高斯模型的bad variants时的最少低质量值得位点数。</span><br><span class="line"></span>-<span class="ruby">recalFile              用于ApplyRecalibration的输出文件。</span><br><span class="line"></span>-<span class="ruby">resource               已知的变异信息。</span><br><span class="line"></span>-<span class="ruby">rscriptFile            结果中生成图片的脚本。</span><br><span class="line"></span>-<span class="ruby">tranchesFile           用于ApplyRecalibration的tranche结果输出文件。</span><br><span class="line"></span>-<span class="ruby">tranche                设置tranche阈值。</span><br><span class="line"></span>-<span class="ruby">an                     选择填加注释信息。</span></span><br></pre></td></tr></table></figure></p>
<p>更多其他参数参考：<strong><a href="http://www.broadinstitute.org/gatk/gatkdocs/org_broadinstitute_sting_gatk_walkers_variantrecalibration_VariantRecalibrator.html" target="_blank" rel="external">这里</a></strong></p>
<p><strong>ApplyRecalibration</strong><br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">ef                     输出结果中不显示被过滤掉的位点。</span><br><span class="line"></span>-<span class="ruby">lodCutoff              VQSLOD值低于这个值就过滤掉。</span><br><span class="line"></span>-<span class="ruby">recalFile              上一步生成的recalFile。</span><br><span class="line"></span>-<span class="ruby">tranchesFile           上一步生成的tranchesFile。</span><br><span class="line"></span>-<span class="ruby">ts_filter_level        上一步中确定的tranche值。</span></span><br></pre></td></tr></table></figure></p>
<p>更多其他参数请参考：<strong><a href="http://www.broadinstitute.org/gatk/gatkdocs/org_broadinstitute_sting_gatk_walkers_variantrecalibration_ApplyRecalibration.html" target="_blank" rel="external">这里</a></strong></p>
<p>另外，关于如何选择resource data可以参考：<strong><a href="http://www.broadinstitute.org/gatk/guide/article?id=1259" target="_blank" rel="external">这里</a></strong></p>
<p>如果要分析的数据集不符合进行VQSR的标准，可以进行hard filter，这一步将使用GATK中的VariantFiltration工具来完成。具体使用方法参考：<strong><a href="http://www.broadinstitute.org/gatk/gatkdocs/org_broadinstitute_sting_gatk_walkers_filters_VariantFiltration.html" target="_blank" rel="external">这里</a></strong></p>
<p>最后生成的vcf文件的格式说明，即每一列所代表的的内容，可参考下面的网站，有详细的说明：<strong><a href="http://www.broadinstitute.org/gatk/guide/article?id=1268" target="_blank" rel="external">这里</a></strong></p>
<p>其实到这里就已经完成了变异检测的所有步骤，最后生成的hg19.snp.filter.t97.Q10_13.both.vcf文件就可以用于你的下游分析了。</p>
<hr>
<h3 id="4-4-初步分析"><a href="#4-4-初步分析" class="headerlink" title="4.4 初步分析"></a>4.4 初步分析</h3><p>这一步主要是对上面所得到的最终vcf中的结果进行一些初步的分析，比如计算这些变异位点在dbsnp中的比例、Ti/Tv的比例、每个样本中的snp数量……。此外，还可以对变异位点的同义/非同义突变进行统计，识别是否为CpG位点以及氨基酸的简并信息等。这一步主要是利用GATK中的VariantEval来完成。<br>需要注意的是，有些计算内容不能同时进行，例如AlleleCount和VariantSummary或者Sample和VariantSummary。如果选择了这样的组合方式，程序就会报错。但是GATK并没有告诉我们到底哪些不能同时运行，所以当选择计算内容的时候可以先做一下测试。<br>e.g.<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ java  -jar GenomeAnalysisTK<span class="selector-class">.jar</span> \</span><br><span class="line">        -R hg19<span class="selector-class">.fa</span> \</span><br><span class="line">        -T VariantEval \</span><br><span class="line">        --eval hg19<span class="selector-class">.snp</span><span class="selector-class">.filter</span><span class="selector-class">.t97</span><span class="selector-class">.Q10_13</span><span class="selector-class">.both</span><span class="selector-class">.vcf</span> \</span><br><span class="line">        -D dbsnp_137<span class="selector-class">.hg19</span><span class="selector-class">.vcf</span> \</span><br><span class="line">        -o hg19<span class="selector-class">.PASS</span><span class="selector-class">.Eval_15_Final</span><span class="selector-class">.gatkreport</span></span><br></pre></td></tr></table></figure></p>
<p>主要参数解释：<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">-eval          输入要进行summary的文件，也就是hg19.snp.filter.t97.Q10_13.both.vcf。</span><br><span class="line"></span>-<span class="ruby">EV             选择模块计算相应的分析内容，。</span><br><span class="line"></span>-<span class="ruby">-list          列出可供选择的计算模块。</span><br><span class="line"></span>-<span class="ruby">noEV           不是用默认的模块，只计算用-EV选定的模块。</span></span><br></pre></td></tr></table></figure></p>
<p>更多其他参数请参考：<strong><a href="http://www.broadinstitute.org/gatk/gatkdocs/org_broadinstitute_sting_gatk_walkers_varianteval_VariantEval.html" target="_blank" rel="external">这里</a></strong></p>
<p>参考：<br>糗世界：<a href="http://blog.qiubio.com:8080/archives/3207" target="_blank" rel="external">http://blog.qiubio.com:8080/archives/3207</a><br>葡萄糖的博客：<a href="http://blog.sina.com.cn/s/blog_12d5e3d3c0101qu6e.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_12d5e3d3c0101qu6e.html</a><br>imitosis的博客：<a href="http://blog.sina.com.cn/s/blog_681aaa550101bhdc.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_681aaa550101bhdc.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SAMtools和BCFtools工具详解]]></title>
      <url>http://starsyi.github.io/2016/05/24/SAMtools%E5%92%8CBCFtools%E5%B7%A5%E5%85%B7%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<blockquote>
<p>主要是对前面的文章，<a href="http://starsyi.github.io/2016/05/21/Samtools%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/">“Samtools命令详解”</a>博文的一个补充，整理，更全面，有一些新版本的东西！其实把前面全包含进来了。</p>
</blockquote>
<h2 id="一、-SAMtools和BCFtools简介"><a href="#一、-SAMtools和BCFtools简介" class="headerlink" title="一、 SAMtools和BCFtools简介"></a>一、 SAMtools和BCFtools简介</h2><p>SAMtools是一个用于操作sam和bam文件的工具合集，包含有许多命令。<br>BCFtools主要是用来操作vcf和BCF文件的工具合集，包含有许多命令。</p>
<h2 id="二、-SAMtools和BCFtools的安装"><a href="#二、-SAMtools和BCFtools的安装" class="headerlink" title="二、 SAMtools和BCFtools的安装"></a>二、 SAMtools和BCFtools的安装</h2><h3 id="2-1-对于老版本"><a href="#2-1-对于老版本" class="headerlink" title="2.1 对于老版本"></a>2.1 对于老版本</h3><p>在0.1.19这个版本及以前版本中samtools和bcftools是整合到一起的，下载链接：<a href="https://github.com/samtools/samtools/archive/0.1.19.tar.gz" target="_blank" rel="external">https://github.com/samtools/samtools/archive/0.1.19.tar.gz</a><br>在下载之后解压，直接make，然后将Samtools和bcftools直接添加到环境变量中就可以使用；<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span> wget https:<span class="comment">//github.com/samtools/samtools/archive/0.1.19.tar.gz</span></span><br><span class="line"><span class="symbol">$</span> tar zxf samtools<span class="number">-0.1</span><span class="number">.19</span>.tar.gz</span><br><span class="line"><span class="symbol">$</span> cd samtools<span class="number">-0.1</span><span class="number">.19</span></span><br><span class="line"><span class="symbol">$</span> make </span><br><span class="line"><span class="symbol">$</span> echo <span class="string">'PATH=$PATH:/your/samtools/path'</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="symbol">$</span> echo <span class="string">'PATH=$PATH:/your/bcftools/path'</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="symbol">$</span> source ~/.bashrc</span><br></pre></td></tr></table></figure></p>
<h3 id="2-2-对于新版本"><a href="#2-2-对于新版本" class="headerlink" title="2.2 对于新版本"></a>2.2 对于新版本</h3><p>对于最新版本的下载：<a href="www.htslib.org">www.htslib.org</a>，SAMtools 新的 1.0 版本改进比较大。 SAMtools 包含 3 部分：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Samtools :</span> 对 SAM<span class="regexp">/BAM/</span>CRAM 格式文件进行读、写、索引和查看操作。</span><br><span class="line"><span class="string">BCFtools :</span> 对 BCF2<span class="regexp">/VCF/</span>gVCF 格式文件进行读写操作； 对 SNP 和 <span class="keyword">short</span> indel 进行 calling<span class="regexp">/filtering/</span>summarising</span><br><span class="line"><span class="string">HTSlib :</span> 用于高通量数据读写操作的 C library</span><br></pre></td></tr></table></figure></p>
<p>老版本(0.1.19)的概要：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">samtools view -bt ref_list<span class="selector-class">.txt</span> -o aln<span class="selector-class">.bam</span> aln<span class="selector-class">.sam</span><span class="selector-class">.gz</span></span><br><span class="line">samtools sort aln<span class="selector-class">.bam</span> aln<span class="selector-class">.sorted</span></span><br><span class="line">samtools index aln<span class="selector-class">.sorted</span><span class="selector-class">.bam</span></span><br><span class="line">samtools idxstats aln<span class="selector-class">.sorted</span><span class="selector-class">.bam</span></span><br><span class="line">samtools view aln<span class="selector-class">.sorted</span><span class="selector-class">.bam</span> chr2:<span class="number">20</span>,<span class="number">100</span>,<span class="number">000</span>-<span class="number">20</span>,<span class="number">200</span>,<span class="number">000</span></span><br><span class="line">samtools merge out<span class="selector-class">.bam</span> in1<span class="selector-class">.bam</span> in2<span class="selector-class">.bam</span> in3<span class="selector-class">.bam</span></span><br><span class="line">samtools faidx ref<span class="selector-class">.fasta</span></span><br><span class="line">samtools pileup -vcf ref<span class="selector-class">.fasta</span> aln<span class="selector-class">.sorted</span><span class="selector-class">.bam</span></span><br><span class="line">samtools mpileup -C50 -gf ref<span class="selector-class">.fasta</span> -r chr3:<span class="number">1</span>,<span class="number">000</span>-<span class="number">2</span>,<span class="number">000</span> in1<span class="selector-class">.bam</span> in2<span class="selector-class">.bam</span></span><br><span class="line">samtools tview aln<span class="selector-class">.sorted</span><span class="selector-class">.bam</span> ref<span class="selector-class">.fasta</span></span><br><span class="line">bcftools index <span class="keyword">in</span><span class="selector-class">.bcf</span></span><br><span class="line">bcftools view <span class="keyword">in</span><span class="selector-class">.bcf</span> chr2:<span class="number">100</span>-<span class="number">200</span> &gt; out<span class="selector-class">.vcf</span></span><br><span class="line">bcftools view -Nvm0.<span class="number">99</span> <span class="keyword">in</span><span class="selector-class">.bcf</span> &gt; out<span class="selector-class">.vcf</span> <span class="number">2</span>&gt; out.afs</span><br></pre></td></tr></table></figure></p>
<p>新版的 SAMtools 将 SAMtools 和 BCFtool 分离开，成为 2 个独立的软件包。 这 2 个都运用了 HTSlib，并且其软件包中都包含了 HTSlib 。<br>最新版的BCFtools和SAMtools也可以通过Github下载：<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span> git clone --branch=develop git:<span class="comment">//github.com/samtools/htslib.git</span></span><br><span class="line"><span class="symbol">$</span> git clone --branch=develop </span><br><span class="line"><span class="symbol">$</span> git:<span class="comment">//github.com/samtools/bcftools.git</span></span><br><span class="line"><span class="symbol">$</span> git clone --branch=develop </span><br><span class="line"><span class="symbol">$</span> git:<span class="comment">//github.com/samtools/samtools.git</span></span><br><span class="line"><span class="symbol">$</span> cd bcftools &amp;&amp; make</span><br><span class="line"><span class="symbol">$</span> cd ../samtools &amp;&amp; make</span><br></pre></td></tr></table></figure></p>
<p>当然你也可以把它安装到自己想安装的目录下,即在上面两次make的时候，使用一下命令：<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ make prefix=/<span class="built_in">path</span>/to/<span class="built_in">dir</span> install</span><br></pre></td></tr></table></figure></p>
<p>最后再将你你的路径添加到环境变量中：<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> '<span class="built_in">PATH</span>=$<span class="built_in">PATH</span>:/your/samtools/bin/<span class="built_in">path</span>' &gt;&gt; ~/.bashrc</span><br><span class="line">$ <span class="built_in">echo</span> '<span class="built_in">PATH</span>=$<span class="built_in">PATH</span>:/your/bcftools/bin/<span class="built_in">path</span>' &gt;&gt; ~/.bashrc</span><br><span class="line">$ source ~/.bashrc</span><br></pre></td></tr></table></figure></p>
<p>新版本(1.3.1)的概要：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">samtools view -bt ref_list<span class="selector-class">.txt</span> -o aln<span class="selector-class">.bam</span> aln<span class="selector-class">.sam</span><span class="selector-class">.gz</span></span><br><span class="line">samtools sort -T /tmp/aln<span class="selector-class">.sorted</span> -o aln<span class="selector-class">.sorted</span><span class="selector-class">.bam</span> aln<span class="selector-class">.bam</span></span><br><span class="line">samtools index aln<span class="selector-class">.sorted</span><span class="selector-class">.bam</span></span><br><span class="line">samtools idxstats aln<span class="selector-class">.sorted</span><span class="selector-class">.bam</span></span><br><span class="line">samtools flagstat aln<span class="selector-class">.sorted</span><span class="selector-class">.bam</span></span><br><span class="line">samtools stats aln<span class="selector-class">.sorted</span><span class="selector-class">.bam</span></span><br><span class="line">samtools bedcov aln<span class="selector-class">.sorted</span><span class="selector-class">.bam</span></span><br><span class="line">samtools depth aln<span class="selector-class">.sorted</span><span class="selector-class">.bam</span></span><br><span class="line">samtools view aln<span class="selector-class">.sorted</span><span class="selector-class">.bam</span> chr2:<span class="number">20</span>,<span class="number">100</span>,<span class="number">000</span>-<span class="number">20</span>,<span class="number">200</span>,<span class="number">000</span></span><br><span class="line">samtools merge out<span class="selector-class">.bam</span> in1<span class="selector-class">.bam</span> in2<span class="selector-class">.bam</span> in3<span class="selector-class">.bam</span></span><br><span class="line">samtools faidx ref<span class="selector-class">.fasta</span></span><br><span class="line">samtools tview aln<span class="selector-class">.sorted</span><span class="selector-class">.bam</span> ref<span class="selector-class">.fasta</span></span><br><span class="line">samtools split merged<span class="selector-class">.bam</span></span><br><span class="line">samtools quickcheck in1<span class="selector-class">.bam</span> in2<span class="selector-class">.cram</span></span><br><span class="line">samtools dict -<span class="selector-tag">a</span> GRCh38 -s <span class="string">"Homo sapiens"</span> ref<span class="selector-class">.fasta</span></span><br><span class="line">samtools fixmate <span class="keyword">in</span><span class="selector-class">.namesorted</span><span class="selector-class">.sam</span> out<span class="selector-class">.bam</span></span><br><span class="line">samtools mpileup -C50 -gf ref<span class="selector-class">.fasta</span> -r chr3:<span class="number">1</span>,<span class="number">000</span>-<span class="number">2</span>,<span class="number">000</span> in1<span class="selector-class">.bam</span> in2<span class="selector-class">.bam</span></span><br><span class="line">samtools flags PAIRED,UNMAP,MUNMAP</span><br><span class="line">samtools fastq <span class="selector-tag">input</span><span class="selector-class">.bam</span> &gt; output<span class="selector-class">.fastq</span></span><br><span class="line">samtools fasta <span class="selector-tag">input</span><span class="selector-class">.bam</span> &gt; output<span class="selector-class">.fasta</span></span><br><span class="line">samtools addreplacerg -r <span class="string">'ID:fish'</span> -r <span class="string">'LB:1334'</span> -r <span class="string">'SM:alpha'</span> -o output<span class="selector-class">.bam</span> <span class="selector-tag">input</span><span class="selector-class">.bam</span></span><br><span class="line">samtools collate aln<span class="selector-class">.sorted</span><span class="selector-class">.bam</span> aln<span class="selector-class">.name_collated</span><span class="selector-class">.bam</span></span><br><span class="line">samtools depad <span class="selector-tag">input</span>.bam</span><br></pre></td></tr></table></figure></p>
<h2 id="三、-SAMtools参数详解"><a href="#三、-SAMtools参数详解" class="headerlink" title="三、 SAMtools参数详解"></a>三、 SAMtools参数详解</h2><p>以下主要是针对samtools-0.1.19的说明文档：<a href="http://www.htslib.org/doc/samtools-0.1.19.html" target="_blank" rel="external">http://www.htslib.org/doc/samtools-0.1.19.html</a></p>
<blockquote>
<p>对于最新版的Samtools， 指1.0之后，有大的改动，可能一下命令介绍有些不适用新版本，所以新版参考：<br>SAMtools：<a href="http://www.htslib.org/doc/samtools.html" target="_blank" rel="external">http://www.htslib.org/doc/samtools.html</a><br>BCFtools：<a href="http://www.htslib.org/doc/bcftools.html" target="_blank" rel="external">http://www.htslib.org/doc/bcftools.html</a></p>
</blockquote>
<h3 id="3-1-view"><a href="#3-1-view" class="headerlink" title="3.1 view"></a>3.1 view</h3><p>view命令的主要功能是：将sam文件转换成bam文件；然后对bam文件进行各种操作，比如数据的排序(不属于本命令的功能)和提取(这些操作是对bam文件进行的，因而当输入为sam文件的时候，不能进行该操作)；最后将排序或提取得到的数据输出为bam或sam（默认的）格式。</p>
<p>bam文件优点：bam文件为二进制文件，占用的磁盘空间比sam文本文件小；利用bam二进制文件的运算速度快。</p>
<p>view命令中，对sam文件头部的输入(-t或-T）和输出(-h)是单独的一些参数来控制的</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">Usage: samtools view [options] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]</span><br><span class="line">默认情况下不加 region，则是输出所有的 region.</span><br><span class="line"></span><br><span class="line">Options: -b       output BAM</span><br><span class="line">                  默认下输出是 SAM 格式文件，该参数设置输出 BAM 格式</span><br><span class="line">         -<span class="ruby">h       print header <span class="keyword">for</span> the SAM output</span><br><span class="line"></span>                  默认下输出的 sam 格式文件不带 header，该参数设定输出sam文件时带 header 信息</span><br><span class="line">         -<span class="ruby">H       print header only (no alignments)</span><br><span class="line"></span>         -<span class="ruby">S       input is SAM</span><br><span class="line"></span>                  默认下输入是 BAM 文件，若是输入是 SAM 文件，则最好加该参数，否则有时候会报错。</span><br><span class="line">         -<span class="ruby">u       uncompressed BAM output (force -b)</span><br><span class="line"></span>                  该参数的使用需要有-b参数，能节约时间，但是需要更多磁盘空间。</span><br><span class="line">         -<span class="ruby">c       Instead of printing the alignments, only count them <span class="keyword">and</span> print the </span><br><span class="line"></span>                  total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , </span><br><span class="line">                  are taken into account.</span><br><span class="line">         -<span class="ruby"><span class="number">1</span>       fast compression (force -b)</span><br><span class="line"></span>         -<span class="ruby">x       output FLAG <span class="keyword">in</span> HEX (samtools-C specific)</span><br><span class="line"></span>         -<span class="ruby">X       output FLAG <span class="keyword">in</span> string (samtools-C specific)</span><br><span class="line"></span>         -<span class="ruby">c       print only the count of matching records</span><br><span class="line"></span>         -<span class="ruby">L FILE  output alignments overlapping the input BED FILE [null]</span><br><span class="line"></span>         -<span class="ruby">t FILE  list of reference names <span class="keyword">and</span> lengths (force -S) [null]</span><br><span class="line"></span>                  使用一个list文件来作为header的输入</span><br><span class="line">         -<span class="ruby">T FILE  reference sequence file (force -S) [null]</span><br><span class="line"></span>                  使用序列fasta文件作为header的输入</span><br><span class="line">         -<span class="ruby">o FILE  output file name [stdout]</span><br><span class="line"></span>         -<span class="ruby">R FILE  list of read groups to be outputted [null]</span><br><span class="line"></span>         -<span class="ruby">f INT   required flag, <span class="number">0</span> <span class="keyword">for</span> unset [<span class="number">0</span>]</span><br><span class="line"></span>         -<span class="ruby">F INT   filtering flag, <span class="number">0</span> <span class="keyword">for</span> unset [<span class="number">0</span>] </span><br><span class="line"></span>                  Skip alignments with bits present in INT [0]</span><br><span class="line">                  数字4代表该序列没有比对到参考序列上</span><br><span class="line">                  数字8代表该序列的mate序列没有比对到参考序列上</span><br><span class="line">         -<span class="ruby">q INT   minimum mapping quality [<span class="number">0</span>]</span><br><span class="line"></span>         -<span class="ruby">l STR   only output reads <span class="keyword">in</span> library STR [null]</span><br><span class="line"></span>         -<span class="ruby">r STR   only output reads <span class="keyword">in</span> read group STR [null]</span><br><span class="line"></span>         -<span class="ruby">s FLOAT fraction of templates to subsample; integer part as seed [-<span class="number">1</span>]</span><br><span class="line"></span>         -<span class="ruby">?       longer help</span></span><br></pre></td></tr></table></figure>
<p>例子：</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">将sam文件转换成<span class="keyword">bam文件</span><br><span class="line"></span>$ samtools view -<span class="keyword">bS </span>abc.sam &gt; abc.<span class="keyword">bam</span><br><span class="line"></span>$ samtools view -<span class="keyword">b </span>-S abc.sam -o abc.<span class="keyword">bam</span><br><span class="line"></span></span><br><span class="line">提取比对到参考序列上的比对结果</span><br><span class="line">$ samtools view -<span class="keyword">bF </span><span class="number">4</span> abc.<span class="keyword">bam </span>&gt; abc.F.<span class="keyword">bam</span><br><span class="line"></span></span><br><span class="line">提取paired reads中两条reads都比对到参考序列上的比对结果，只需要把两个<span class="number">4</span>+<span class="number">8</span>的值<span class="number">12</span>作为过滤参数即可</span><br><span class="line">$ samtools view -<span class="keyword">bF </span><span class="number">12</span> abc.<span class="keyword">bam </span>&gt; abc.F12.<span class="keyword">bam</span><br><span class="line"></span></span><br><span class="line">提取没有比对到参考序列上的比对结果</span><br><span class="line">$ samtools view -<span class="keyword">bf </span><span class="number">4</span> abc.<span class="keyword">bam </span>&gt; abc.f.<span class="keyword">bam</span><br><span class="line"></span></span><br><span class="line">提取<span class="keyword">bam文件中比对到caffold1上的比对结果，并保存到sam文件格式</span><br><span class="line"></span>$ samtools view abc.<span class="keyword">bam </span><span class="keyword">scaffold1 </span>&gt; <span class="keyword">scaffold1.sam</span><br><span class="line"></span></span><br><span class="line">提取<span class="keyword">scaffold1上能比对到30k到100k区域的比对结果</span><br><span class="line"></span>$ samtools view abc.<span class="keyword">bam </span><span class="keyword">scaffold1:30000-100000 </span>$gt<span class="comment">; scaffold1_30k-100k.sam</span></span><br><span class="line"></span><br><span class="line">根据fasta文件，将 header 加入到 sam 或 <span class="keyword">bam </span>文件中</span><br><span class="line">$ samtools view -T genome.fasta -h <span class="keyword">scaffold1.sam </span>&gt; <span class="keyword">scaffold1.h.sam</span></span><br></pre></td></tr></table></figure>
<h3 id="3-2-sort"><a href="#3-2-sort" class="headerlink" title="3.2 sort"></a>3.2 sort</h3><p>sort对bam文件进行排序<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Usage</span>: <span class="selector-tag">samtools</span> <span class="selector-tag">sort</span> <span class="selector-attr">[-n]</span> <span class="selector-attr">[-m &lt;maxMem&gt;]</span> &lt;<span class="selector-tag">in</span><span class="selector-class">.bam</span>&gt; &lt;<span class="selector-tag">out</span><span class="selector-class">.prefix</span>&gt;  </span><br><span class="line"><span class="selector-tag">-m</span> 参数默认下是 500,000,000 即500<span class="selector-tag">M</span>（不支持<span class="selector-tag">K</span>，<span class="selector-tag">M</span>，<span class="selector-tag">G</span>等缩写）。对于处理大数据时，如果内存够用，则设置大点的值，以节约时间。</span><br><span class="line"><span class="selector-tag">-n</span> 设定排序方式按<span class="selector-tag">short</span> <span class="selector-tag">reads</span>的<span class="selector-tag">ID</span>排序。默认下是按序列在<span class="selector-tag">fasta</span>文件中的顺序（即<span class="selector-tag">header</span>）和序列从左往右的位点排序。</span><br></pre></td></tr></table></figure></p>
<h3 id="3-3-merge"><a href="#3-3-merge" class="headerlink" title="3.3 merge"></a>3.3 merge</h3><p>将2个或2个以上的已经sort了的bam文件融合成一个bam文件。融合后的文件不需要则是已经sort过了的。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Usage:   samtools <span class="keyword">merge</span> [-nr] [-h inh.sam] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt;[...]</span><br><span class="line"></span><br><span class="line">Options: -n       <span class="keyword">sort</span> <span class="keyword">by</span> <span class="keyword">read</span> <span class="keyword">names</span></span><br><span class="line">         -r       attach RG tag (inferred <span class="keyword">from</span> <span class="keyword">file</span> <span class="keyword">names</span>)</span><br><span class="line">         -u       uncompressed BAM <span class="keyword">output</span></span><br><span class="line">         -f       overwrite the <span class="keyword">output</span> BAM <span class="keyword">if</span> exist</span><br><span class="line">         <span class="number">-1</span>       <span class="keyword">compress</span> <span class="keyword">level</span> <span class="number">1</span></span><br><span class="line">         -R <span class="keyword">STR</span>   <span class="keyword">merge</span> <span class="keyword">file</span> <span class="keyword">in</span> the specified region <span class="keyword">STR</span> [all]</span><br><span class="line">         -h <span class="keyword">FILE</span>  copy the header <span class="keyword">in</span> <span class="keyword">FILE</span> <span class="keyword">to</span> &lt;out.bam&gt; [in1.bam]</span><br><span class="line"></span><br><span class="line">Note: Samtools<span class="string">' merge does not reconstruct the @RG dictionary in the header. Users</span><br><span class="line">      must provide the correct header with -h, or uses Picard which properly maintains</span><br><span class="line">      the header dictionary in merging.</span></span><br></pre></td></tr></table></figure></p>
<h3 id="3-4-index"><a href="#3-4-index" class="headerlink" title="3.4 index"></a>3.4 index</h3><p>必须对bam文件进行默认情况下的排序后，才能进行index。否则会报错。</p>
<p>建立索引后将产生后缀为.bai的文件，用于快速的随机处理。很多情况下需要有bai文件的存在，特别是显示序列比对情况下。比如samtool的tview命令就需要；gbrowse2显示reads的比对图形的时候也需要。<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Usage: samtools <span class="keyword">index</span> &lt;<span class="keyword">in</span>.bam&gt; [<span class="keyword">out</span>.<span class="keyword">index</span>]</span><br></pre></td></tr></table></figure></p>
<p>例子：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">以下两种命令结果一样</span><br><span class="line">$ samtools index abc<span class="selector-class">.sort</span><span class="selector-class">.bam</span></span><br><span class="line">$ samtools index abc<span class="selector-class">.sort</span><span class="selector-class">.bam</span> abc<span class="selector-class">.sort</span><span class="selector-class">.bam</span><span class="selector-class">.bai</span></span><br></pre></td></tr></table></figure></p>
<h3 id="3-5-faidx"><a href="#3-5-faidx" class="headerlink" title="3.5 faidx"></a>3.5 faidx</h3><p>对fasta文件建立索引,生成的索引文件以.fai后缀结尾。该命令也能依据索引文件快速提取fasta文件中的某一条（子）序列<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Usage</span>: samtools faidx &lt;in.bam&gt; [ [...]]</span><br><span class="line"></span><br><span class="line"><span class="stylus">对基因组文件建立索引</span><br><span class="line">$ samtools faidx genome<span class="selector-class">.fasta</span></span><br><span class="line">生成了索引文件genome<span class="selector-class">.fasta</span><span class="selector-class">.fai</span>,是一个文本文件，分成了<span class="number">5</span>列。第一列是子序列的名称；</span><br><span class="line">第二列是子序列的长度；个人认为“第三列是序列所在的位置”，因为该数字从上往下逐渐变大，</span><br><span class="line">最后的数字是genome.fasta文件的大小；第<span class="number">4</span>和<span class="number">5</span>列不知是啥意思。于是通过此文件，可以定</span><br><span class="line">位子序列在fasta文件在磁盘上的存放位置，直接快速调出子序列。</span><br><span class="line"></span><br><span class="line">由于有索引文件，可以使用以下命令很快从基因组中提取到fasta格式的子序列</span><br><span class="line">$ samtools faidx genome<span class="selector-class">.fasta</span> scffold_10 &gt; scaffold_10.fasta</span></span><br></pre></td></tr></table></figure></p>
<h3 id="3-6-tview"><a href="#3-6-tview" class="headerlink" title="3.6 tview"></a>3.6 tview</h3><p>tview能直观的显示出reads比对基因组的情况，和基因组浏览器有点类似。<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Usage</span>: samtools tview &lt;aln.bam&gt; [ref.fasta]</span><br><span class="line"></span><br><span class="line"><span class="mipsasm">当给出参考基因组的时候，会在第一排显示参考基因组的序列，否则，第一排全用N表示。</span><br><span class="line">按下 g ，则提示输入要到达基因组的某一个位点。例子“<span class="keyword">scaffold_10:1000"表示到达第</span><br><span class="line"></span><span class="number">10</span>号<span class="keyword">scaffold的第1000个碱基位点处。</span><br><span class="line"></span>使用H(左）<span class="keyword">J（上）K（下）L（右）移动显示界面。大写字母移动快，小写字母移动慢。</span><br><span class="line"></span>使用空格建向左快速移动（和 L 类似），使用<span class="keyword">Backspace键向左快速移动（和 </span>H 类似）。</span><br><span class="line">Ctrl+H 向左移动<span class="number">1</span>kb碱基距离； Ctrl+L 向右移动<span class="number">1</span>kb碱基距离</span><br><span class="line">可以用颜色标注比对质量，碱基质量，核苷酸等。<span class="number">30</span>～<span class="number">40</span>的碱基质量或比对质量使用白色表示；</span><br><span class="line"><span class="number">20</span>～<span class="number">30</span>黄色；<span class="number">10</span>～<span class="number">20</span>绿色；<span class="number">0</span>～<span class="number">10</span>蓝色。</span><br><span class="line">使用点号<span class="string">'.'</span>切换显示碱基和点号；使用r切换显示read name等</span><br><span class="line">还有很多其它的使用说明，具体按 ？ 键来查看。</span></span><br></pre></td></tr></table></figure></p>
<h3 id="3-7-flagstat"><a href="#3-7-flagstat" class="headerlink" title="3.7 flagstat"></a>3.7 flagstat</h3><p>给出BAM文件的比对结果<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Usage</span>: samtools flagstat &lt;in.bam&gt;</span><br><span class="line"></span><br><span class="line"><span class="elixir"><span class="variable">$ </span>samtools flagstat example.bam</span><br><span class="line"><span class="number">11945742</span> + <span class="number">0</span> <span class="keyword">in</span> total (QC-passed reads + QC-failed reads)</span><br><span class="line"><span class="comment">#总共的reads数</span></span><br><span class="line"><span class="number">0</span> + <span class="number">0</span> duplicates</span><br><span class="line"><span class="number">7536364</span> + <span class="number">0</span> mapped (<span class="number">63.09</span>%<span class="symbol">:-nan%</span>)</span><br><span class="line"><span class="comment">#总体上reads的匹配率</span></span><br><span class="line"><span class="number">11945742</span> + <span class="number">0</span> paired <span class="keyword">in</span> sequencing</span><br><span class="line"><span class="comment">#有多少reads是属于paired reads</span></span><br><span class="line"><span class="number">5972871</span> + <span class="number">0</span> read1</span><br><span class="line"><span class="comment">#reads1中的reads数</span></span><br><span class="line"><span class="number">5972871</span> + <span class="number">0</span> read2</span><br><span class="line"><span class="comment">#reads2中的reads数</span></span><br><span class="line"><span class="number">6412042</span> + <span class="number">0</span> properly paired (<span class="number">53.68</span>%<span class="symbol">:-nan%</span>)</span><br><span class="line"><span class="comment">#完美匹配的reads数：比对到同一条参考序列，并且两条reads之间的距离符合设置的阈值</span></span><br><span class="line"><span class="number">6899708</span> + <span class="number">0</span> with itself <span class="keyword">and</span> mate mapped</span><br><span class="line"><span class="comment">#paired reads中两条都比对到参考序列上的reads数</span></span><br><span class="line"><span class="number">636656</span> + <span class="number">0</span> singletons (<span class="number">5.33</span>%<span class="symbol">:-nan%</span>)</span><br><span class="line"><span class="comment">#单独一条匹配到参考序列上的reads数，和上一个相加，则是总的匹配上的reads数。</span></span><br><span class="line"><span class="number">469868</span> + <span class="number">0</span> with mate mapped to a different chr</span><br><span class="line"><span class="comment">#paired reads中两条分别比对到两条不同的参考序列的reads数</span></span><br><span class="line"><span class="number">243047</span> + <span class="number">0</span> with mate mapped to a different chr (mapQ&gt;=<span class="number">5</span>)</span></span><br></pre></td></tr></table></figure></p>
<p>同上一个，只是其中比对质量&gt;=5的reads的数量</p>
<h3 id="3-8-depth"><a href="#3-8-depth" class="headerlink" title="3.8 depth"></a>3.8 depth</h3><p>得到每个碱基位点的测序深度,并输出到标准输出。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Usage</span>: <span class="selector-tag">bam2depth</span> <span class="selector-attr">[-r reg]</span> <span class="selector-attr">[-q baseQthres]</span> <span class="selector-attr">[-Q mapQthres]</span> <span class="selector-attr">[-b in.bed]</span> &lt;<span class="selector-tag">in1</span><span class="selector-class">.bam</span>&gt; <span class="selector-attr">[...]</span></span><br></pre></td></tr></table></figure></p>
<h3 id="3-9-其他有用的命令"><a href="#3-9-其他有用的命令" class="headerlink" title="3.9 其他有用的命令"></a>3.9 其他有用的命令</h3><p>reheader 替换bam文件的头<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ samtools reheader &lt;<span class="keyword">in</span><span class="selector-class">.header</span><span class="selector-class">.sam</span>&gt; &lt;<span class="keyword">in</span>.bam&gt;</span><br></pre></td></tr></table></figure></p>
<p>cat 连接多个bam文件，适用于非sorted的bam文件<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ samtools cat <span class="string">[-h header.sam]</span> <span class="string">[-o out.bam]</span> &lt;in1.bam&gt; &lt;in2.bam&gt; <span class="string">[ ... ]</span></span><br></pre></td></tr></table></figure></p>
<p>idxstats 统计一个表格，4列，分别为”序列名，序列长度，比对上的reads数，unmapped reads number”。第4列应该是paired reads中有一端能匹配到该scaffold上，而另外一端不匹配到任何scaffolds上的reads数。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ samtools idxstats <span class="tag">&lt;<span class="name">aln.bam</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="3-10-将bam文件转换为fastq文件"><a href="#3-10-将bam文件转换为fastq文件" class="headerlink" title="3.10 将bam文件转换为fastq文件"></a>3.10 将bam文件转换为fastq文件</h3><p>有时候，我们需要提取出比对到一段参考序列的reads，进行小范围的分析，以利于debug等。这时需要将bam或sam文件转换为fastq格式。<br>该网站提供了一个bam转换为fastq的程序：<a href="http://www.hudsonalpha.org/gsl/information/software/bam2fastq" target="_blank" rel="external">http://www.hudsonalpha.org/gsl/information/software/bam2fastq</a><br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span> wget http:<span class="comment">//www.hudsonalpha.org/gsl/static/software/bam2fastq-1.1.0.tgz</span></span><br><span class="line"><span class="symbol">$</span> tar zxf bam2fastq<span class="number">-1.1</span><span class="number">.0</span>.tgz</span><br><span class="line"><span class="symbol">$</span> cd bam2fastq<span class="number">-1.1</span><span class="number">.0</span></span><br><span class="line"><span class="symbol">$</span> make</span><br><span class="line"><span class="symbol">$</span> ./bam2fastq &lt;in.bam&gt;</span><br></pre></td></tr></table></figure></p>
<h3 id="3-11-mpileup"><a href="#3-11-mpileup" class="headerlink" title="3.11 mpileup"></a>3.11 mpileup</h3><p>samtools还有个非常重要的命令mpileup，以前为pileup。该命令用于生成bcf文件，再使用bcftools进行SNP和Indel的分析。bcftools是samtool中附带的软件，在samtools的安装文件夹中可以找到。</p>
<p>最常用的参数有2： -f 来输入有索引文件的fasta参考序列； -g 输出到bcf格式。用法和最简单的例子如下<br><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Usage: samtools mpileup <span class="comment">[-EBug]</span> <span class="comment">[-C capQcoef]</span> <span class="comment">[-r reg]</span> <span class="comment">[-f in.fa]</span> <span class="comment">[-l list]</span> <span class="comment">[-M capMapQ]</span> <span class="comment">[-Q minBaseQ]</span> <span class="comment">[-q minMapQ]</span> in.bam <span class="comment">[in2.bam <span class="comment">[...]</span>]</span></span><br><span class="line"></span><br><span class="line">$ samtools mpileup -f genome.fasta abc.bam &gt; abc.txt</span><br><span class="line">$ samtools mpileup -gSDf genome.fasta abc.bam &gt; abc.bcf</span><br><span class="line">$ samtools mpileup -guSDf genome.fasta abc.bam | \</span><br><span class="line">           bcftools view -cvNg - &gt; abc.vcf</span><br></pre></td></tr></table></figure></p>
<p>mpileup不使用-u或-g参数时，则不生成二进制的bcf文件，而生成一个文本文件(输出到标准输出)。该文本文件统计了参考序列中每个碱基位点的比对情况；该文件每一行代表了参考序列中某一个碱基位点的比对结果。比如：<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">scaffold_1</span></span>      <span class="number">2841</span>    A       <span class="number">11</span>      ,,,...,....     BHIGDGIJ?FF</span><br><span class="line"><span class="function"><span class="title">scaffold_1</span></span>      <span class="number">2842</span>    C       <span class="number">12</span>      ,<span class="symbol">$</span>,,...,....^I. CFGEGEGGCFF+</span><br><span class="line"><span class="function"><span class="title">scaffold_1</span></span>      <span class="number">2843</span>    G       <span class="number">11</span>      ,,...,.....     FDDDDCD?DD+</span><br><span class="line"><span class="function"><span class="title">scaffold_1</span></span>      <span class="number">2844</span>    G       <span class="number">11</span>      ,,...,.....     FA?AAAA&lt;AA+</span><br><span class="line"><span class="function"><span class="title">scaffold_1</span></span>      <span class="number">2845</span>    G       <span class="number">11</span>      ,,...,.....     F656666166*</span><br><span class="line"><span class="function"><span class="title">scaffold_1</span></span>      <span class="number">2846</span>    A       <span class="number">11</span>      ,,...,.....     (<span class="number">1.1111</span>)<span class="number">11</span>*</span><br><span class="line">scaffold_1      <span class="number">2847</span>    A       <span class="number">11</span>      ,,+<span class="number">9</span>acggtgaag.+<span class="number">9</span>ACGGTGAAT.+<span class="number">9</span>ACGGTGAAG.+<span class="number">9</span>ACGGTGAAG,+<span class="number">9</span>acggtgaag.+<span class="number">9</span>ACGGTGAAG.+<span class="number">9</span>ACGGTGAAG.+<span class="number">9</span>ACGGTGAAG.+<span class="number">9</span>ACGGTGAAG.+<span class="number">9</span>ACGGTGAAG       %.+....-..)</span><br><span class="line">scaffold_1      <span class="number">2848</span>    N       <span class="number">11</span>      agGGGgGGGGG     !!<span class="symbol">$</span>!!!!!!!!</span><br><span class="line"><span class="function"><span class="title">scaffold_1</span></span>      <span class="number">2849</span>    A       <span class="number">11</span>      c<span class="symbol">$</span>,...,.....    !<span class="number">0000000000</span></span><br><span class="line"><span class="function"><span class="title">scaffold_1</span></span>      <span class="number">2850</span>    A       <span class="number">10</span>      ,...,.....      <span class="number">353333333</span></span><br></pre></td></tr></table></figure></p>
<p>mpileup生成的结果包含6行：参考序列名；位置；参考碱基；比对上的reads数；比对情况；比对上的碱基的质量。其中第5列比较复杂,解释如下：</p>
<p>1 ‘.’代表与参考序列正链匹配。<br>2 ‘,’代表与参考序列负链匹配。<br>3 ‘ATCGN’代表在正链上的不匹配。<br>4 ‘atcgn’代表在负链上的不匹配。<br>5 ‘*’代表模糊碱基<br>6 ‘^’代表匹配的碱基是一个read的开始；’^’后面紧跟的ascii码减去33代表比对质量；这两个符号修饰的是后面的碱基，其后紧跟的碱基(.,ATCGatcgNn)代表该read的第一个碱基。<br>7 ‘$’代表一个read的结束，该符号修饰的是其前面的碱基。<br>8 正则式’+[0-9]+[ACGTNacgtn]+’代表在该位点后插入的碱基；比如上例中在scaffold_1的2847后插入了9个长度的碱基acggtgaag。表明此处极可能是indel。<br>9 正则式’-[0-9]+[ACGTNacgtn]+’代表在该位点后缺失的碱基；</p>
<p>pileup具体的参数如下：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">输入参数</span><br><span class="line"><span class="number">-6</span>       Assume <span class="keyword">the</span> quality is <span class="keyword">in</span> <span class="keyword">the</span> Illumina <span class="number">1.3</span>+ encoding. -A Do <span class="keyword">not</span> skip anomalous <span class="built_in">read</span> pairs <span class="keyword">in</span> variant calling. </span><br><span class="line">-B       Disable probabilistic realignment <span class="keyword">for</span> <span class="keyword">the</span> computation <span class="keyword">of</span> base alignment quality (BAQ). BAQ is <span class="keyword">the</span> Phred-scaled probability <span class="keyword">of</span> <span class="keyword">a</span> <span class="built_in">read</span> base being misaligned. Applying this option greatly helps <span class="built_in">to</span> reduce <span class="literal">false</span> SNPs caused <span class="keyword">by</span> misalignments. </span><br><span class="line">-b FILE  List <span class="keyword">of</span> input BAM <span class="built_in">files</span>, <span class="literal">one</span> <span class="built_in">file</span> per <span class="built_in">line</span> [<span class="literal">null</span>]</span><br><span class="line">-C INT   Coefficient <span class="keyword">for</span> downgrading mapping quality <span class="keyword">for</span> reads containing excessive mismatches. Given <span class="keyword">a</span> <span class="built_in">read</span> <span class="keyword">with</span> <span class="keyword">a</span> phred-scaled probability q <span class="keyword">of</span> being generated <span class="built_in">from</span> <span class="keyword">the</span> mapped position, <span class="keyword">the</span> <span class="built_in">new</span> mapping quality is about <span class="built_in">sqrt</span>((INT-q)/INT)*INT. A <span class="literal">zero</span> <span class="built_in">value</span> disables this functionality; <span class="keyword">if</span> enabled, <span class="keyword">the</span> recommended <span class="built_in">value</span> <span class="keyword">for</span> BWA is <span class="number">50.</span> [<span class="number">0</span>] </span><br><span class="line">-d INT   At <span class="keyword">a</span> position, <span class="built_in">read</span> maximally INT reads per input BAM. [<span class="number">250</span>] </span><br><span class="line">-E       Extended BAQ computation. This option helps sensitivity especially <span class="keyword">for</span> MNPs, but may hurt specificity <span class="keyword">a</span> little bit. </span><br><span class="line">-f FILE  The faidx-indexed reference <span class="built_in">file</span> <span class="keyword">in</span> <span class="keyword">the</span> FASTA <span class="built_in">format</span>. The <span class="built_in">file</span> can be optionally compressed <span class="keyword">by</span> razip. [<span class="literal">null</span>] </span><br><span class="line">-l FILE  BED <span class="keyword">or</span> position list <span class="built_in">file</span> containing <span class="keyword">a</span> list <span class="keyword">of</span> regions <span class="keyword">or</span> sites where pileup <span class="keyword">or</span> BCF should be generated [<span class="literal">null</span>] </span><br><span class="line">-M INT       cap mapping quality <span class="keyword">at</span> INT [<span class="number">60</span>]</span><br><span class="line">-q INT 	Minimum mapping quality <span class="keyword">for</span> <span class="keyword">an</span> alignment <span class="built_in">to</span> be used [<span class="number">0</span>] </span><br><span class="line">-Q INT 	Minimum base quality <span class="keyword">for</span> <span class="keyword">a</span> base <span class="built_in">to</span> be considered [<span class="number">13</span>]</span><br><span class="line">-r STR 	Only generate pileup <span class="keyword">in</span> region STR [all sites] </span><br><span class="line"></span><br><span class="line">输出参数</span><br><span class="line">-D 	Output per-sample <span class="built_in">read</span> depth (<span class="built_in">require</span> -g/-u)</span><br><span class="line">-g 	Compute genotype likelihoods <span class="keyword">and</span> output them <span class="keyword">in</span> <span class="keyword">the</span> binary call <span class="built_in">format</span> (BCF). </span><br><span class="line">-S 	Output per-sample Phred-scaled strand bias P-<span class="built_in">value</span> (<span class="built_in">require</span> -g/-u) </span><br><span class="line">-u 	Similar <span class="built_in">to</span> -g except that <span class="keyword">the</span> output is uncompressed BCF, which is preferred <span class="keyword">for</span> piping. </span><br><span class="line"></span><br><span class="line">Options <span class="keyword">for</span> Genotype Likelihood Computation (<span class="keyword">for</span> -g <span class="keyword">or</span> -u):</span><br><span class="line">-e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads <span class="built_in">to</span> longer indels. [<span class="number">20</span>] </span><br><span class="line">-h INT 	Coefficient <span class="keyword">for</span> modeling homopolymer errors. Given <span class="keyword">an</span> l-<span class="keyword">long</span> homopolymer run, <span class="keyword">the</span> sequencing error <span class="keyword">of</span> <span class="keyword">an</span> indel <span class="keyword">of</span> size s is modeled <span class="keyword">as</span> INT*s/l. [<span class="number">100</span>] </span><br><span class="line">-I 	Do <span class="keyword">not</span> perform INDEL calling </span><br><span class="line">-L INT 	Skip INDEL calling <span class="keyword">if</span> <span class="keyword">the</span> <span class="built_in">average</span> per-sample depth is above INT. [<span class="number">250</span>] </span><br><span class="line">-o INT 	Phred-scaled gap <span class="built_in">open</span> sequencing error probability. Reducing INT leads <span class="built_in">to</span> more indel calls. [<span class="number">40</span>] </span><br><span class="line">-P STR 	Comma dilimited list <span class="keyword">of</span> platforms (determined <span class="keyword">by</span> @RG-PL) <span class="built_in">from</span> which indel candidates are obtained. It is recommended <span class="built_in">to</span> collect indel candidates <span class="built_in">from</span> sequencing technologies that have low indel error rate such <span class="keyword">as</span> ILLUMINA. [all]</span><br></pre></td></tr></table></figure></p>
<h2 id="四、-bcftools命令详解"><a href="#四、-bcftools命令详解" class="headerlink" title="四、 bcftools命令详解"></a>四、 bcftools命令详解</h2><p>bcftools和samtools类似，用于处理vcf(variant call format)文件和bcf(binary call format)文件。前者为文本文件，后者为其二进制文件。</p>
<p>bcftools使用简单，最主要的命令是view命令，其次还有index和cat等命令。index和cat命令和samtools中类似。此处主讲使用view命令来进行SNP和Indel calling。该命令的使用方法和例子为：</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ bcftools view <span class="string">[-AbFGNQSucgv]</span> <span class="string">[-D seqDict]</span> <span class="string">[-l listLoci]</span> <span class="string">[-s listSample]</span> </span><br><span class="line">          <span class="string">[-i gapSNPratio]</span> <span class="string">[-t mutRate]</span> <span class="string">[-p varThres]</span> <span class="string">[-P prior]</span> </span><br><span class="line">          <span class="string">[-1 nGroup1]</span> <span class="string">[-d minFrac]</span> <span class="string">[-U nPerm]</span> <span class="string">[-X permThres]</span> </span><br><span class="line">          <span class="string">[-T trioType]</span> in.bcf <span class="string">[region]</span></span><br><span class="line"></span><br><span class="line">$ bcftools view -cvNg abc.bcf &gt; snp_indel.vcf</span><br></pre></td></tr></table></figure>
<p>生成的结果文件为vcf格式，有10列，分别是：1 参考序列名；2 varianti所在的left-most位置；3 variant的ID（默认未设置，用’.’表示)；4 参考序列的allele；5 variant的allele(有多个alleles，则用’,’分隔);6 variant/reference QUALity;7 FILTers applied;8 variant的信息，使用分号隔开；9 FORMAT of the genotype fields, separated by colon (optional)； 10 SAMPLE genotypes and per-sample information (optional)。<br>例如：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">scaffold_1      <span class="number">2847</span>    .       A       AACGGTGAAG      <span class="number">194</span>     .       INDEL;DP=<span class="number">11</span>;VDB=<span class="number">0.0401</span>;AF1=<span class="number">1</span>;AC1=<span class="number">2</span>;DP4=<span class="number">0</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">3</span>;MQ=<span class="number">35</span>;FQ=<span class="number">-67.5</span>   <span class="string">GT:</span><span class="string">PL:</span>GQ        <span class="number">1</span>/<span class="number">1</span>:<span class="number">235</span>,<span class="number">33</span>,<span class="number">0</span>:<span class="number">63</span></span><br><span class="line">scaffold_1      <span class="number">3908</span>    .       G       A       <span class="number">111</span>     .       DP=<span class="number">13</span>;VDB=<span class="number">0.0085</span>;AF1=<span class="number">1</span>;AC1=<span class="number">2</span>;DP4=<span class="number">0</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">7</span>;MQ=<span class="number">42</span>;FQ=<span class="number">-63</span>   <span class="string">GT:</span><span class="string">PL:</span>GQ        <span class="number">1</span>/<span class="number">1</span>:<span class="number">144</span>,<span class="number">36</span>,<span class="number">0</span>:<span class="number">69</span></span><br><span class="line">scaffold_1      <span class="number">4500</span>    .       A       G       <span class="number">31.5</span>    .       DP=<span class="number">8</span>;VDB=<span class="number">0.0034</span>;AF1=<span class="number">1</span>;AC1=<span class="number">2</span>;DP4=<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>;MQ=<span class="number">42</span>;FQ=<span class="number">-39</span>    <span class="string">GT:</span><span class="string">PL:</span>GQ        <span class="number">1</span>/<span class="number">1</span>:<span class="number">64</span>,<span class="number">12</span>,<span class="number">0</span>:<span class="number">21</span></span><br><span class="line">scaffold_1      <span class="number">4581</span>    .       TGGNGG  TGG     <span class="number">145</span>     .       INDEL;DP=<span class="number">8</span>;VDB=<span class="number">0.0308</span>;AF1=<span class="number">1</span>;AC1=<span class="number">2</span>;DP4=<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">8</span>;MQ=<span class="number">42</span>;FQ=<span class="number">-58.5</span>    <span class="string">GT:</span><span class="string">PL:</span>GQ        <span class="number">1</span>/<span class="number">1</span>:<span class="number">186</span>,<span class="number">24</span>,<span class="number">0</span>:<span class="number">45</span></span><br><span class="line">scaffold_1      <span class="number">4644</span>    .       G       A       <span class="number">195</span>     .       DP=<span class="number">21</span>;VDB=<span class="number">0.0198</span>;AF1=<span class="number">1</span>;AC1=<span class="number">2</span>;DP4=<span class="number">0</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">10</span>;MQ=<span class="number">42</span>;FQ=<span class="number">-87</span> <span class="string">GT:</span><span class="string">PL:</span>GQ        <span class="number">1</span>/<span class="number">1</span>:<span class="number">228</span>,<span class="number">60</span>,<span class="number">0</span>:<span class="number">99</span></span><br><span class="line">scaffold_1      <span class="number">4827</span>    .       NACAAAGA        NA      <span class="number">4.42</span>    .       INDEL;DP=<span class="number">1</span>;AF1=<span class="number">1</span>;AC1=<span class="number">2</span>;DP4=<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>;MQ=<span class="number">40</span>;FQ=<span class="number">-37.5</span>       <span class="string">GT:</span><span class="string">PL:</span>GQ        <span class="number">0</span>/<span class="number">1</span>:<span class="number">40</span>,<span class="number">3</span>,<span class="number">0</span>:<span class="number">3</span></span><br><span class="line">scaffold_1      <span class="number">4854</span>    .       A       G       <span class="number">48</span>      .       DP=<span class="number">6</span>;VDB=<span class="number">0.0085</span>;AF1=<span class="number">1</span>;AC1=<span class="number">2</span>;DP4=<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>;MQ=<span class="number">41</span>;FQ=<span class="number">-36</span>    <span class="string">GT:</span><span class="string">PL:</span>GQ        <span class="number">1</span>/<span class="number">1</span>:<span class="number">80</span>,<span class="number">9</span>,<span class="number">0</span>:<span class="number">16</span></span><br><span class="line">scaffold_1      <span class="number">5120</span>    .       A       G       <span class="number">85</span>      .       DP=<span class="number">8</span>;VDB=<span class="number">0.0355</span>;AF1=<span class="number">1</span>;AC1=<span class="number">2</span>;DP4=<span class="number">0</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">3</span>;MQ=<span class="number">42</span>;FQ=<span class="number">-51</span>    <span class="string">GT:</span><span class="string">PL:</span>GQ        <span class="number">1</span>/<span class="number">1</span>:<span class="number">118</span>,<span class="number">24</span>,<span class="number">0</span>:<span class="number">45</span></span><br></pre></td></tr></table></figure></p>
<p>第8列中显示了对variants的信息描述，比较重要，其中的 Tag 的描述如下：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Tag	Format	Description</span><br><span class="line">AF1	double	Max-likelihood estimate <span class="keyword">of</span> <span class="keyword">the</span> site allele frequency (AF) <span class="keyword">of</span> <span class="keyword">the</span> <span class="keyword">first</span> ALT allele</span><br><span class="line">DP	int	Raw <span class="built_in">read</span> depth (<span class="keyword">without</span> quality filtering)</span><br><span class="line">DP4	int[<span class="number">4</span>]	<span class="comment"># high-quality reference forward bases, ref reverse, alternate for and alt rev bases</span></span><br><span class="line">FQ	int	Consensus quality. Positive: sample genotypes different; negative: otherwise</span><br><span class="line">MQ	int	Root-Mean-Square mapping quality <span class="keyword">of</span> covering reads</span><br><span class="line">PC2	int[<span class="number">2</span>]	Phred probability <span class="keyword">of</span> AF <span class="keyword">in</span> group1 samples being larger (,smaller) than <span class="keyword">in</span> group2</span><br><span class="line">PCHI2	double	Posterior weighted chi^<span class="number">2</span> P-<span class="built_in">value</span> between group1 <span class="keyword">and</span> group2 samples</span><br><span class="line">PV4	double[<span class="number">4</span>]	P-<span class="built_in">value</span> <span class="keyword">for</span> strand bias, baseQ bias, mapQ bias <span class="keyword">and</span> tail distance bias</span><br><span class="line">QCHI2	int	Phred-scaled PCHI2</span><br><span class="line">RP	int	<span class="comment"># permutations yielding a smaller PCHI2</span></span><br><span class="line">CLR	int	Phred <span class="built_in">log</span> ratio <span class="keyword">of</span> genotype likelihoods <span class="keyword">with</span> <span class="keyword">and</span> <span class="keyword">without</span> <span class="keyword">the</span> trio/pair constraint</span><br><span class="line">UGT	<span class="keyword">string</span>	Most probable genotype configuration <span class="keyword">without</span> <span class="keyword">the</span> trio constraint</span><br><span class="line">CGT	<span class="keyword">string</span>	Most probable configuration <span class="keyword">with</span> <span class="keyword">the</span> trio constraint</span><br></pre></td></tr></table></figure></p>
<p>bcftools view 的具体参数如下：</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Input/Output Options:</span><br><span class="line">-A 	Retain all possible alternate alleles <span class="keyword">at</span> variant sites. By default, <span class="keyword">the</span> view <span class="keyword">command</span> <span class="title">discards</span> <span class="title">unlikely</span> <span class="title">alleles</span>.</span><br><span class="line">-b 	Output <span class="keyword">in</span> <span class="keyword">the</span> BCF <span class="built_in">format</span>. The default is VCF.</span><br><span class="line">-D FILE Sequence dictionary (list <span class="keyword">of</span> chromosome names) <span class="keyword">for</span> VCF-&gt;BCF conversion [<span class="literal">null</span>]</span><br><span class="line">-F 	Indicate PL is generated <span class="keyword">by</span> r921 <span class="keyword">or</span> <span class="keyword">before</span> (ordering is different).</span><br><span class="line">-G 	Suppress all individual genotype information.</span><br><span class="line">-l FILE List <span class="keyword">of</span> sites <span class="keyword">at</span> which information are outputted [all sites]</span><br><span class="line">-N 	Skip sites where <span class="keyword">the</span> REF field is <span class="keyword">not</span> A/C/G/T</span><br><span class="line">-Q 	Output <span class="keyword">the</span> QCALL likelihood <span class="built_in">format</span></span><br><span class="line">-s FILE List <span class="keyword">of</span> samples <span class="built_in">to</span> use. The <span class="keyword">first</span> column <span class="keyword">in</span> <span class="keyword">the</span> input gives <span class="keyword">the</span> sample names <span class="keyword">and</span> <span class="keyword">the</span> <span class="keyword">second</span> gives <span class="keyword">the</span> ploidy, which can only be <span class="number">1</span> <span class="keyword">or</span> <span class="number">2.</span> When <span class="keyword">the</span> <span class="number">2</span>nd column is absent, <span class="keyword">the</span> sample ploidy is assumed <span class="built_in">to</span> be <span class="number">2.</span> In <span class="keyword">the</span> output, <span class="keyword">the</span> ordering <span class="keyword">of</span> samples will be identical <span class="built_in">to</span> <span class="keyword">the</span> <span class="literal">one</span> <span class="keyword">in</span> FILE. [<span class="literal">null</span>]</span><br><span class="line">-S 	The input is VCF instead <span class="keyword">of</span> BCF.</span><br><span class="line">-u 	Uncompressed BCF output (force -b). </span><br><span class="line"></span><br><span class="line">Consensus/Variant Calling Options:</span><br><span class="line">-c 	Call variants <span class="keyword">using</span> Bayesian inference. This option automatically invokes option -e.</span><br><span class="line">-d FLOAT When -v is <span class="keyword">in</span> use, skip loci where <span class="keyword">the</span> fraction <span class="keyword">of</span> samples covered <span class="keyword">by</span> reads is below FLOAT. [<span class="number">0</span>]</span><br><span class="line">        当有多个sample用于variants calling时，比如多个转录组数据或多个重测序</span><br><span class="line">        数据需要比对到参考基因组上，设置该值，表明至少有该&lt;float <span class="number">0</span>~<span class="number">1</span>&gt;比例的</span><br><span class="line">        samples在该位点都有覆盖才计算入variant.所以对于只有一个sample的情况</span><br><span class="line">        下，该值设置在<span class="number">0</span>～<span class="number">1</span>之间没有意义，大于<span class="number">1</span>则得不到任何结果。</span><br><span class="line">-e 	Perform <span class="built_in">max</span>-likelihood inference only, including estimating <span class="keyword">the</span> site allele frequency, testing Hardy-Weinberg equlibrium <span class="keyword">and</span> testing associations <span class="keyword">with</span> LRT.</span><br><span class="line">-g 	Call per-sample genotypes <span class="keyword">at</span> variant sites (force -c)</span><br><span class="line">-i FLOAT Ratio <span class="keyword">of</span> INDEL-<span class="built_in">to</span>-SNP mutation rate [<span class="number">0.15</span>]</span><br><span class="line">-p FLOAT A site is considered <span class="built_in">to</span> be <span class="keyword">a</span> variant <span class="keyword">if</span> P(ref|D)</span><br><span class="line">-t FLOAT Scaled muttion rate <span class="keyword">for</span> variant calling [<span class="number">0.001</span>]</span><br><span class="line">-T STR 	Enable pair/trio calling. For trio calling, option -s is usually needed <span class="built_in">to</span> be applied <span class="built_in">to</span> configure <span class="keyword">the</span> trio members <span class="keyword">and</span> their ordering. In <span class="keyword">the</span> <span class="built_in">file</span> supplied <span class="built_in">to</span> <span class="keyword">the</span> option -s, <span class="keyword">the</span> <span class="keyword">first</span> sample must be <span class="keyword">the</span> child, <span class="keyword">the</span> <span class="keyword">second</span> <span class="keyword">the</span> father <span class="keyword">and</span> <span class="keyword">the</span> <span class="keyword">third</span> <span class="keyword">the</span> mother. The valid values <span class="keyword">of</span> STR are ‘pair’, ‘trioauto’, ‘trioxd’ <span class="keyword">and</span> ‘trioxs’, where ‘pair’ calls differences between <span class="literal">two</span> input samples, <span class="keyword">and</span> ‘trioxd’ (‘trioxs’) specifies that <span class="keyword">the</span> input is <span class="built_in">from</span> <span class="keyword">the</span> X chromosome non-PAR regions <span class="keyword">and</span> <span class="keyword">the</span> child is <span class="keyword">a</span> female (male). [<span class="literal">null</span>]</span><br><span class="line">-v 	Output variant sites only (force -c) </span><br><span class="line"></span><br><span class="line">Contrast Calling <span class="keyword">and</span> Association Test Options:</span><br><span class="line"><span class="number">-1</span> INT 	Number <span class="keyword">of</span> group<span class="number">-1</span> samples. This option is used <span class="keyword">for</span> dividing <span class="keyword">the</span> samples <span class="keyword">into</span> <span class="literal">two</span> groups <span class="keyword">for</span> contrast SNP calling <span class="keyword">or</span> association test. When this option is <span class="keyword">in</span> use, <span class="keyword">the</span> following VCF INFO will be outputted: PC2, PCHI2 <span class="keyword">and</span> QCHI2. [<span class="number">0</span>]</span><br><span class="line">-U INT 	Number <span class="keyword">of</span> permutations <span class="keyword">for</span> association test (<span class="keyword">effective</span> only <span class="keyword">with</span> <span class="number">-1</span>) [<span class="number">0</span>]</span><br><span class="line">-X FLOAT Only perform permutations <span class="keyword">for</span> P(chi^<span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p>使用bcftools得到variant calling结果后。需要对结果再次进行过滤。主要依据比对结果中第8列信息。其中的 DP4 一行尤为重要，提供了4个数据：1 比对结果和正链一致的reads数、2 比对结果和负链一致的reads数、3 比对结果在正链的variant上的reads数、4 比对结果在负链的variant上的reads数。可以设定 （value3 + value4）大于某一阈值，才算是variant。比如：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ perl -ne '<span class="keyword">print</span> <span class="variable">$_</span> <span class="keyword">if</span> /DP4=(\<span class="keyword">d</span>+),(\<span class="keyword">d</span>+),(\<span class="keyword">d</span>+),(\<span class="keyword">d</span>+)/ &amp;&amp; (<span class="variable">$3</span>+<span class="variable">$4</span>)&gt;=10 &amp;&amp; (<span class="variable">$3</span>+<span class="variable">$4</span>)/(<span class="variable">$1</span>+<span class="variable">$2</span>+<span class="variable">$3</span>+<span class="variable">$4</span>)&gt;=0.8' snp_indel.vcf &gt; snp_indel.final.vcf</span><br></pre></td></tr></table></figure></p>
<h3 id="3-13-samtools-rmdup"><a href="#3-13-samtools-rmdup" class="headerlink" title="3.13 samtools rmdup"></a>3.13 samtools rmdup</h3><p>NGS上机测序前需要进行PCR一步，使一个模板扩增出一簇，从而在上机测序的时候表现出为1个点，即一个reads。若一个模板扩增出了多簇，结果得到了多个reads，这些reads的坐标(coordinates)是相近的。在进行了reads比对后需要将这些由PCR duplicates获得的reads去掉，并只保留最高比对质量的read。使用rmdup命令即可完成.<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Usage:  samtools rmdup [-sS]  </span><br><span class="line">-<span class="ruby">s 对single-<span class="keyword">end</span> reads。默认情况下，只对paired-<span class="keyword">end</span> reads</span><br><span class="line"></span>-<span class="ruby">S 将Paired-<span class="keyword">end</span> reads作为single-<span class="keyword">end</span> reads处理。</span><br><span class="line"></span></span><br><span class="line">$ samtools input.sorted.bam output.bam</span><br></pre></td></tr></table></figure></p>
<h2 id="五、-SAMtools常用统计命令"><a href="#五、-SAMtools常用统计命令" class="headerlink" title="五、 SAMtools常用统计命令"></a>五、 SAMtools常用统计命令</h2><p>SAMtools不仅仅用来call snp。从samtools的软件名就能看出，是对SAM格式文件进行操作的工作，比如讲sam转成bam格式，index，rmdup等等。samtools结合linux命令比如grep，awk和SAM格式描述的flag，tag，亦是非常非常非常强大，比如根据flag过滤duplicate的reads，根据XA tag过滤multiple hit的reads。本文在此只介绍一下samtools的统计命令，能快速对bam文件进行各种统计。</p>
<h3 id="5-1-idxstats"><a href="#5-1-idxstats" class="headerlink" title="5.1 idxstats"></a>5.1 idxstats</h3><p>检索和打印与输入文件相对应的index file里的统计信息，所以要对输入的bam文件进行index</p>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ samtools idxstats in.sam|in.bam|in.cram</span><br><span class="line">#ref    sequence_length mapped_reads    unmapped_reads</span><br><span class="line">chr1    <span class="number">249250621</span>       <span class="number">4998344</span>         <span class="number">1005</span></span><br><span class="line">chr2    <span class="number">243199373</span>       <span class="number">3020248</span>         <span class="number">595</span></span><br><span class="line">chr3    <span class="number">198022430</span>       <span class="number">2418804</span>         <span class="number">449</span></span><br></pre></td></tr></table></figure>
<h3 id="5-2-bedcov"><a href="#5-2-bedcov" class="headerlink" title="5.2 bedcov"></a>5.2 bedcov</h3><p>计算覆盖到每个区域的总碱基数目<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ samtools bedcov region.bed in1.sam|in1.bam|in1.cram[...]</span><br><span class="line">#chr    start-<span class="number">1</span>     end         totalbase</span><br><span class="line">chr1    <span class="number">100000</span>      <span class="number">1000000</span>     <span class="number">1709228</span></span><br><span class="line">chr2    <span class="number">2000000</span>     <span class="number">65885852</span>    <span class="number">64362582</span></span><br></pre></td></tr></table></figure></p>
<h3 id="5-3-depth"><a href="#5-3-depth" class="headerlink" title="5.3 depth"></a>5.3 depth</h3><p>计算每个位点的深度<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ samtools depth [options] [<span class="keyword">in</span>1.sam|<span class="keyword">in</span>1.bam|<span class="keyword">in</span>1.cram [<span class="keyword">in</span>2.sam|<span class="keyword">in</span>2.bam|<span class="keyword">in</span>2.cram] [...]]</span><br><span class="line"><span class="comment">#chr    pos depth</span></span><br><span class="line">chr1    1   5</span><br><span class="line">chr1    2   5</span><br></pre></td></tr></table></figure></p>
<h3 id="5-4-flagstat"><a href="#5-4-flagstat" class="headerlink" title="5.4 flagstat"></a>5.4 flagstat</h3><p>根据flag统计多少map的reads等信息<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ samtools flagstat <span class="keyword">in</span>.sam<span class="params">|<span class="keyword">in</span>.bam|</span><span class="keyword">in</span>.cram</span><br><span class="line"><span class="number">43444444</span> + <span class="number">0</span> <span class="keyword">in</span> total (QC-passed reads + QC-failed reads)</span><br><span class="line"><span class="number">5863846</span> + <span class="number">0</span> secondary</span><br><span class="line"><span class="number">0</span> + <span class="number">0</span> supplementary</span><br><span class="line"><span class="number">0</span> + <span class="number">0</span> duplicates</span><br><span class="line"><span class="number">43431948</span> + <span class="number">0</span> mapped (<span class="number">99.97</span>%<span class="symbol">:-nan%</span>)</span><br><span class="line"><span class="number">37580598</span> + <span class="number">0</span> paired <span class="keyword">in</span> sequencing</span><br></pre></td></tr></table></figure></p>
<h3 id="5-5-stats"><a href="#5-5-stats" class="headerlink" title="5.5 stats"></a>5.5 stats</h3><p>输出的信息比较多，部分如下<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ samtools stats [options] <span class="keyword">in</span>.sam|<span class="keyword">in</span>.bam|<span class="keyword">in</span>.cram [region...]</span><br><span class="line">Summary Numbers</span><br><span class="line">raw total sequences，filtered sequences, reads <span class="keyword">mapped</span>, reads <span class="keyword">mapped</span> <span class="keyword">and</span> paired,reads properly paired等信息</span><br><span class="line">Fragment Qualitites</span><br><span class="line">根据cycle统计每个位点上的碱基质量分布</span><br><span class="line">Coverage distribution</span><br><span class="line">深度为<span class="number">1</span>，<span class="number">2</span>，<span class="number">3</span>，，，的碱基数目</span><br><span class="line">ACGT content per cycle</span><br><span class="line">ACGT在每个cycle中的比例</span><br><span class="line">Insert sizes</span><br><span class="line">插入长度的统计</span><br><span class="line"><span class="keyword">Read</span> lengths</span><br><span class="line"><span class="keyword">read</span>的长度分布</span><br></pre></td></tr></table></figure></p>
<p>参考内容：</p>
<ol>
<li><a href="http://www.chenlianfu.com/?p=1399" target="_blank" rel="external">宠辱不惊，一心问学！</a></li>
<li><a href="http://wp.zxzyl.com/?p=132" target="_blank" rel="external">Lablueee’s web site</a></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SAM文件格式说明]]></title>
      <url>http://starsyi.github.io/2016/05/24/SAM%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>文件后缀名:.sam</p>
<p>bwa、Bowtie2是现下最流行的短序列比对软件，SAM(Sequence Alignment/Map)格式是一种通用的比对格式，用来存储reads到参考序列的比对信息。<br>SAM是一种序列比对格式标准，由sanger制定，是以TAB为分割符的文本格式。主要应用于测序序列mapping到基因组上的结果表示，当然也可以表示任意的多重比对结果。<br>不同的软件，不同的时期，不同的研究方向，都会创建一种或者多种格式标准，当然根据当时的需要，创建符合需求的标准，也是最容易的事情，而反过来想要真正的理解标准，也必须理解为什么要创建这样的标准，解决什么样的需要。我前面的有篇文章已经对于现有的多重比对的格式进行总结，但其更多的站在比较基因组学的角度。当我们去了解sam标准格式是什么的时候，就要思考既然以及有了这么多得标准，为什么还要定义SAM标准，当然拿所有的格式进行比较也并非易事，但是简单的对比，就可以了解其中一二，比如aln格式，是比对视图化的展示，存储的信息不够结构化，无法方便的作为另外程序的输入；表示信息的有限性，如果100个多重比对序列放到一个文件中，查看维护就会非常困难；还有些格式标准挺强大，但是太繁琐，同时不够灵活。那么反过来就是SAM格式的优点，那么SAM如何做到这一点的呢？</p>
<p>SAM要处理好的问题：</p>
<pre><code>1. 非常多序列（read)，mapping到多个参考基因组（reference）上；
2. 同一条序列，分多段（segment）比对到参考基因组上；
3. 无限量的，结构化信息表示，包括错配、删除、插入等比对信息；
</code></pre><h2 id="行、列、注释说明"><a href="#行、列、注释说明" class="headerlink" title="行、列、注释说明"></a>行、列、注释说明</h2><p>SAM分为两部分，注释信息（header section）和比对结果部分（alignment section）。<br>行：除注释外，每一行是一个read<br>注释信息可有可无，都是以@开头，用不同的tag表示不同的信息，主要有：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@HD</span>，说明符合标准的版本、对比序列的排列顺序；</span><br><span class="line"><span class="variable">@SQ</span>，参考序列说明；</span><br><span class="line"><span class="variable">@RG</span>，比对上的序列（read）说明；</span><br><span class="line"><span class="variable">@PG</span>，使用的程序说明；</span><br><span class="line"><span class="variable">@CO</span>，任意的说明信息。</span><br></pre></td></tr></table></figure></p>
<p>比对结果部分（alignment section），每一行表示一个片段（segment）的比对信息，包括11个必须的字段（mandatory fields）和一个可选的字段，字段之间用tag分割。必须的字段有11个，顺序固定，不可用时，根据字段定义，可以为’0’或者’*’，这是11个字段包括：<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> QNAME    比对片段的（template）的编号；read name，read的名字通常包括测序平台等信息</span><br><span class="line"><span class="meta"># eg.ILLUMINA-379DBF:1:1:3445:946#0/1</span></span><br><span class="line"><span class="number">2.</span> FLAG     位标识，template mapping情况的数字表示，每一个数字代表一种比对情况，这里的值是符合情况的数字相加总和；flag取值见备注(<span class="number">3</span>)</span><br><span class="line"><span class="meta"># eg.16</span></span><br><span class="line"><span class="number">3.</span> RNAME    参考序列的编号，如果注释中对SQ-SN进行了定义，这里必须和其保持一致，另外对于没有mapping上的序列，这里是<span class="string">'*'</span>；</span><br><span class="line"><span class="meta"># eg.chr1</span></span><br><span class="line"><span class="number">4.</span> POS      比对上的位置，注意是从<span class="number">1</span>开始计数，没有比对上，此处为<span class="number">0</span>;</span><br><span class="line"><span class="meta"># eg.36576599</span></span><br><span class="line"><span class="number">5.</span> MAPQ     mappint的质量,，比对的质量分数，越高说明该read比对到参考基因组上的位置越唯一;</span><br><span class="line"><span class="meta"># eg.42</span></span><br><span class="line"><span class="number">6.</span> CIGAR    简要比对信息表达式（Compact Idiosyncratic Gapped Alignment Report），其以参考序列为基础，使用数字加字母表示比对结果，match/mismatch、insertion、deletion 对应字母 M、I、D。比如<span class="number">3</span>S6M1P1I4M，前三个碱基被剪切去除了，然后<span class="number">6</span>个比对上了，然后打开了一个缺口，有一个碱基插入，最后是<span class="number">4</span>个比对上了，是按照顺序的；</span><br><span class="line"><span class="meta"># eg.36M 表示36个碱基在比对时完全匹配</span></span><br><span class="line"></span><br><span class="line"><span class="meta">###注：第七列到第九列是mate(备注1)的信息，若是单末端测序这几列均无意义###</span></span><br><span class="line"></span><br><span class="line"><span class="number">7.</span> RNEXT    下一个片段（即mate）比对上的参考序列的编号，没有另外的片段，这里是<span class="string">'*'</span>，同一个片段，用<span class="string">'='</span>；</span><br><span class="line"><span class="meta"># eg.*</span></span><br><span class="line"><span class="number">8.</span> PNEXT    下一个片段（即mate）比对到参考序列上的第一个碱基位置，若无mate,则为<span class="number">0</span>；</span><br><span class="line"><span class="meta"># eg.0</span></span><br><span class="line"><span class="number">9.</span> TLEN     Template的长度，最左边得为正，最右边的为负，中间的不用定义正负，不分区段（single-segment)的比对上，或者不可用时，此处为<span class="number">0</span>(ISIZE，Inferred fragment size.详见Illumina中paired end sequencing 和 mate pair sequencing，是负数，推测应该是两条read之间的间隔(待查证)，若无mate则为<span class="number">0</span>);</span><br><span class="line"><span class="meta"># eg.0</span></span><br><span class="line"><span class="number">10.</span> SEQ     序列片段的序列信息，如果不存储此类信息，此处为<span class="string">'*'</span>，注意CIGAR中M/I/S/=/X对应数字的和要等于序列长度；</span><br><span class="line"><span class="meta"># eg.CGTTTCTGTGGGTGATGGGCCTGAGGGGCGTTCTCN</span></span><br><span class="line"><span class="number">11.</span> QUAL    序列的质量信息,read质量的ASCII编码。，格式同FASTQ一样。</span><br><span class="line"><span class="meta"># eg.PY[[YY_______________QQQQbILKIGEFGKB</span></span><br><span class="line"><span class="number">12.</span>第十二列之后：Optional fields，以tab建分割。详见备注(<span class="number">2</span>)</span><br><span class="line"><span class="meta"># eg.AS:i:-1 XN:i:0 XM:i:1 XO:i:0 XG:i:0 NM:i:1 MD:Z:35T0 YT:Z:UU</span></span><br></pre></td></tr></table></figure></p>
<p>可选字段（optional fields)，格式如：TAG:TYPE:VALUE，其中TAG有两个大写字母组成，每个TAG代表一类信息，每一行一个TAG只能出现一次，TYPE表示TAG对应值的类型，可以是字符串、整数、字节、数组等。</p>
<p>要注意的几个概念，以及与之对应的模型：<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">·   reference</span><br><span class="line">·   <span class="built_in">read</span></span><br><span class="line">·   segment</span><br><span class="line">·   <span class="keyword">template</span>（参考序列和比对上的序列共同组成的序列为<span class="keyword">template</span>）</span><br><span class="line">·   alignment</span><br><span class="line">·   seq</span><br></pre></td></tr></table></figure></p>
<h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a><strong>扩展</strong></h2><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>(1)mate，在Illuminated中有两种测序技术：paired end sequencing，mate pair sequencing。这两种测序都是测的一个片段的两端，这两端产生的reads被称为mate1，mate2，单末端测序则无mate。</p>
<p>(2)Optional fields：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">AS:</span><span class="string">i:</span>&lt;N&gt;</span><br><span class="line">    Alignment score.可以为负的，在local下可以为正的。 只有当Align≥<span class="number">1</span> time才出现</span><br><span class="line"><span class="string">XS:</span><span class="string">i:</span>&lt;N&gt;</span><br><span class="line">    Alignment score <span class="keyword">for</span> second-best alignment.  当Align&gt;<span class="number">1</span> time出现</span><br><span class="line"><span class="string">YS:</span><span class="string">i:</span>&lt;N&gt;</span><br><span class="line">    Alignment score <span class="keyword">for</span> opposite mate <span class="keyword">in</span> the paired-end alignment.   当该read是双末端测序中的一条时出现</span><br><span class="line"><span class="string">XN:</span><span class="string">i:</span>&lt;N&gt;</span><br><span class="line">    The number of ambiguous bases <span class="keyword">in</span> the reference covering <span class="keyword">this</span> alignment.（推测是指不知道错配发生在哪个位置，推测是针对于插入和缺失，待查证）</span><br><span class="line"><span class="string">XM:</span><span class="string">i:</span>&lt;N&gt;</span><br><span class="line">    错配碱基的数目</span><br><span class="line"><span class="string">XO:</span><span class="string">i:</span>&lt;N&gt;</span><br><span class="line">    The number of gap opens(针对于比对中的插入和缺失)</span><br><span class="line"><span class="string">XG:</span><span class="string">i:</span>&lt;N&gt;</span><br><span class="line">    The number of gap extensions(针对于比对中的插入和缺失)</span><br><span class="line"><span class="string">NM:</span><span class="string">i:</span>&lt;N&gt;</span><br><span class="line">    The edit distance(read string转换成reference string需要的最少核苷酸的<span class="string">edits:</span>插入<span class="regexp">/缺失/</span>替换)</span><br><span class="line"><span class="string">YF:</span><span class="string">Z:</span>&lt;S&gt;</span><br><span class="line">    该reads被过滤掉的原因。可能为LN(错配数太多，待查证)、NS(read中包含N或者．)、SC(match bonus低于设定的阈值)、QC(failing quality control，待证)</span><br><span class="line"><span class="string">YT:</span><span class="string">Z:</span>&lt;S&gt;</span><br><span class="line">    值为UU表示不是pair中一部分(单末端？)、CP(是pair且可以完美匹配)</span><br><span class="line">    DP(是pair但不能很好的匹配)、UP(是pair但是无法比对到参考序列上)</span><br><span class="line"><span class="string">MD:</span><span class="string">Z:</span>&lt;S&gt;</span><br><span class="line">    比对上的错配碱基的字符串表示</span><br></pre></td></tr></table></figure></p>
<p>(3)flag取值<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">0：比对到参考序列的正链上（待求证)</span><br><span class="line">1：是paired-<span class="keyword">end</span>或mate pair中的一条</span><br><span class="line"><span class="number">2</span>：双末端比对的一条</span><br><span class="line"><span class="number">4</span>：没有比对到参考序列上</span><br><span class="line"><span class="number">8</span>：是paired-<span class="keyword">end</span>或mate pair中的一条，且无法比对到参考序列上</span><br><span class="line"><span class="number">16</span>：比对到参考序列的负链上</span><br><span class="line"><span class="number">32</span>：双末端<span class="keyword">reads</span>的另一条（mate）比对到参考序列的负链上</span><br><span class="line"><span class="number">64</span>：这条<span class="keyword">read</span>是mate <span class="number">1</span></span><br><span class="line"><span class="number">128</span>：这条<span class="keyword">read</span>是mate <span class="number">2</span></span><br></pre></td></tr></table></figure></p>
<p>参考：<br>SAM的定义：<br><a href="http://boyun.sh.cn/bio/wp-content/uploads/2012/07/SAM1.pdf" target="_blank" rel="external">SAM1.pdf</a><br>samtools:<br><a href="http://sourceforge.net/projects/samtools/?source=directory" target="_blank" rel="external">samtools</a><br>发表的文献：<br><a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2723002/" target="_blank" rel="external">http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2723002/</a><br>CIGAR的概念<br><a href="http://asia.ensembl.org/common/Help/Glossary?db=core" target="_blank" rel="external">http://asia.ensembl.org/common/Help/Glossary?db=core</a><br>一篇博客对于sam的解释<br><a href="http://boyun.sh.cn/bio/?p=1890" target="_blank" rel="external">博耘生物</a><br><a href="http://www.plob.org/2013/06/03/5870.html" target="_blank" rel="external">SAM格式-Bowtie2</a><br><a href="http://davetang.org/wiki/tiki-index.php?page=SAM" target="_blank" rel="external">http://davetang.org/wiki/tiki-index.php?page=SAM</a><br>perl模块<br><a href="http://search.cpan.org/~lds/Bio-SamTools/lib/Bio/DB/Sam.pm" target="_blank" rel="external">http://search.cpan.org/~lds/Bio-SamTools/lib/Bio/DB/Sam.pm</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[BWA 命令详解]]></title>
      <url>http://starsyi.github.io/2016/05/24/BWA-%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<h2 id="一、BWA-简介"><a href="#一、BWA-简介" class="headerlink" title="一、BWA 简介"></a>一、BWA 简介</h2><p>BWA，即Burrows-Wheeler-Alignment Tool。<br>BWA 的学习主要来自<a href="http://bio-bwa.sourceforge.net/" target="_blank" rel="external">参考网站</a>和<a href="http://bio-bwa.sourceforge.net/bwa.shtml" target="_blank" rel="external">使用手册</a>；BWA 是一种能够将差异度较小的序列比对到一个较大的参考基因组上的软件包。它由三个不同的算法：<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BWA-backtrack: 是用来比对 Illumina 的序列的，reads 长度最长能到 100bp。</span><br><span class="line">BWA-SW: 用于比对<span class="built_in"> long-read </span>，支持的长度为 70bp-1Mbp；同时支持剪接性比对。</span><br><span class="line">BWA-MEM: 都支持较长的read长度，同时都支持剪接性比对（split alignments)，但是BWA-MEM是更新的算法，也更快，更准确，且 BWA-MEM 对于 70bp-100bp 的 Illumina 数据来说，效果也更好些。</span><br></pre></td></tr></table></figure></p>
<h2 id="二、-BWA-下载和安装"><a href="#二、-BWA-下载和安装" class="headerlink" title="二、 BWA 下载和安装"></a>二、 BWA 下载和安装</h2><p>下载地址：<a href="https://sourceforge.net/projects/bio-bwa/files/" target="_blank" rel="external">sourceforge download</a><br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span> wget http:<span class="comment">//superb-sea2.dl.sourceforge.net/project/bio-bwa/bwa-0.7.12.tar.bz2</span></span><br><span class="line"><span class="symbol">$</span> tar jxf bwa<span class="number">-0.7</span><span class="number">.12</span>.tar.bz2</span><br><span class="line"><span class="symbol">$</span> cd bwa<span class="number">-0.7</span><span class="number">.12</span></span><br><span class="line"><span class="symbol">$</span> make</span><br><span class="line"><span class="symbol">$</span> echo <span class="string">'PATH=$PATH:/your/bwa/path'</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="symbol">$</span> source ~/.bashrc</span><br></pre></td></tr></table></figure></p>
<h2 id="三、-BWA-使用"><a href="#三、-BWA-使用" class="headerlink" title="三、 BWA 使用"></a>三、 BWA 使用</h2><p>在运用这三种算法之前，需要利用 BWA 的 index 命令，构建出参考基因组的 FM-index，而对与上述的三种不同的算法而言，又有不同的命令：<br><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">aln</span>/samse/sampe ----&gt;</span> BWA-backtrack   (samse 中的 se 是 single-end 的简写，而 sampe 中的 pe 是 paired-end 的简写）。</span><br><span class="line"><span class="function"><span class="title">bwasw</span> ----&gt;</span> BWA-SW</span><br><span class="line"><span class="function"><span class="title">mem</span> ----&gt;</span> BWA-MEM</span><br></pre></td></tr></table></figure></p>
<h3 id="3-1-建立索引-index"><a href="#3-1-建立索引-index" class="headerlink" title="3.1 建立索引 index"></a>3.1 建立索引 index</h3><p>在进行 reads 的比对前，需要对 fasta 文件构建 FM-index。<br>用法和参数如下：<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">index</span>   Usage：bwa <span class="keyword">index</span> [ –p prefix ] [ –a algoType ] &lt;<span class="keyword">in</span>.db.fasta&gt;</span><br><span class="line">        <span class="keyword">Index</span> database <span class="keyword">sequence</span> <span class="keyword">in</span> the FASTA format.</span><br><span class="line">        OPTIONS:</span><br><span class="line">        -P STR  输出数据库的前缀；【默认和输入的文件名一致，输出的数据库在其输入文件所在的文件夹，并以该文件名为前缀。】</span><br><span class="line">        -a [<span class="keyword">is</span>|bwtsw]   构建<span class="keyword">index</span>的算法，有两个算法：</span><br><span class="line">                        <span class="keyword">is</span>  是默认的算法，虽然相对较快，但是需要较大的内存，当构建的数据库大于<span class="number">2</span>GB的时候就不能正常工作了。</span><br><span class="line">                        bwtsw   对于短的参考序列式不工作的，必须要大于等于<span class="number">10</span>MB, 但能用于较大的基因组数据，比如人的全基因组。</span><br></pre></td></tr></table></figure></p>
<p>根据reference genome data(e.g. ref.fa) 建立 Index File例子：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ bwa index ref<span class="selector-class">.fa</span> -<span class="selector-tag">p</span> genome</span><br><span class="line">###可以不加-<span class="selector-tag">p</span> genome，这样建立索引都是以ref.fa为前缀,以下使用的示例均未使用-<span class="selector-tag">p</span> genome###</span><br></pre></td></tr></table></figure></p>
<h3 id="3-2-mem比对"><a href="#3-2-mem比对" class="headerlink" title="3.2 mem比对"></a>3.2 mem比对</h3><p>该算法先使用 MEM(maximal exact matches) 进行 seeding alignments，再使用 SW(affine-gap Smith-Waterman) 算法进行 seeds 的延伸。<br>BWA–MEM 算法执行局部比对和剪接性。可能会出现 query 序列的多个不同的部位出现各自的最优匹配，导致 reads 有多个最佳匹配位点。这对 long reads 的比对时比较重要的结果。但是却会和 Picard 的 markDuplicates 程序部兼容。<br>使用方法如下：<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mem Usage: bwa mem [options] ref.fa reads.f<span class="string">q [mates.fq]</span></span><br></pre></td></tr></table></figure></p>
<p>简单的来讲，mem 使用的 MEMs(maximal exact matches） 进行seedling alignments, 再使用 SW(affine-gap Smith-Waterman 算法）进行seeding extending.<br>mem 进行局部比对，因此，对于一条序列的不同区域可能会产生多种最优匹配结果， 这对于long reads 来说尤为重要。 有些软件如 Picard’s markDuplicates 跟 mem 的这种剪接性比对不兼容,<br>在这种情况下，可以使用 –M 选项来将 shorter split hits 标记为次优。<br>特别说明：<br>如果 mates.fq 缺省，且参数 –p 未设定，那么 reads.fq 被认为是 single-end;<br>如果 mates.fq 存在，且参数 –p 未设定，那么 mem 命令会认为 read.fq 和 mates.fq 中的  i-th reads 组成一个read对 (a read pair)，这个模式是常用的 paired-end mode。<br>如果参数 –p 被设定，那么， mem 命令会认为 read.fq 中的 第 2i-th 和 第 (2i + 1)-th 的 reads 组成一个 read 对 （a read pair），这种方式也被成为交错式的（interleaved paired-end)。 在这种情况下，即使有 mates.fq，也会被忽略。<br>常用的参数如下：<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">t INT  线程数，默认是<span class="number">1</span>。</span><br><span class="line"></span>-<span class="ruby">M      将 shorter split hits 标记为次优，以兼容 Picard’s markDuplicates 软件。</span><br><span class="line"></span>-<span class="ruby">p      若无此参数：输入文件只有<span class="number">1</span>个，则进行单端比对；若输入文件有<span class="number">2</span>个，则作为paired reads进行比对。若加入此参数：则仅以第<span class="number">1</span>个文件作为输入(输入的文件若有<span class="number">2</span>个，则忽略之)，该文件必须是read1.fq和read2.fa进行reads交叉的数据。</span><br><span class="line"></span>-<span class="ruby">R STR  完整的read group的头部，可以用 <span class="string">'\t'</span> 作为分隔符， 在输出的SAM文件中被解释为制表符TAB. read group 的ID，会被添加到输出文件的每一个read的头部。</span><br><span class="line"></span>-<span class="ruby">T INT  当比对的分值比 INT 小时，不输出该比对结果，这个参数只影响输出的结果，不影响比对的过程。</span><br><span class="line"></span>-<span class="ruby">a      将所有的比对结果都输出，包括 single-<span class="keyword">end</span> 和 unpaired paired-<span class="keyword">end</span>的 reads，但是这些比对的结果会被标记为次优。</span></span><br></pre></td></tr></table></figure></p>
<p>例子：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ bwa mem ref<span class="selector-class">.fa</span> reads<span class="selector-class">.fq</span> &gt; mem-se<span class="selector-class">.sam</span></span><br><span class="line">$ bwa mem ref<span class="selector-class">.fa</span> read1<span class="selector-class">.fq</span> read2<span class="selector-class">.fq</span> &gt; mem-pe<span class="selector-class">.sam</span></span><br><span class="line">$ bwa mem -t <span class="number">4</span> -M -R <span class="string">"\@RG\tID:&#123;library&#125;\tLB:&#123;library&#125;\tPL:Illumina\tPU:&#123;sample&#125;\tSM:&#123;sample&#125;\"  ref.fa read1.fastq read2.fastq &gt; mem-pe.sam 2&gt; ./mem-pe.log</span></span><br></pre></td></tr></table></figure></p>
<h3 id="3-3-align-samse-sampe"><a href="#3-3-align-samse-sampe" class="headerlink" title="3.3 align/samse/sampe"></a>3.3 align/samse/sampe</h3><p>用法如下：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">对于single-read：</span><br><span class="line">bwa aln [options] ref<span class="selector-class">.fa</span> read<span class="selector-class">.fq</span> &gt; aln_sa<span class="selector-class">.sai</span></span><br><span class="line">bwa samse [options] ref<span class="selector-class">.fa</span> aln_sa<span class="selector-class">.sai</span> read<span class="selector-class">.fq</span> &gt; aln-se<span class="selector-class">.sam</span></span><br><span class="line">对于pair-reads：</span><br><span class="line">bwa aln [options] ref<span class="selector-class">.fa</span> read1<span class="selector-class">.fq</span> &gt; aln_sa1<span class="selector-class">.sai</span></span><br><span class="line">bwa aln [options] ref<span class="selector-class">.fa</span> read2<span class="selector-class">.fq</span> &gt; aln_sa2<span class="selector-class">.sai</span></span><br><span class="line">bwa sampe [options] ref<span class="selector-class">.fa</span> aln_sa1<span class="selector-class">.sai</span> aln_sa2<span class="selector-class">.sai</span> read1<span class="selector-class">.fq</span> read2<span class="selector-class">.fq</span> &gt; aln-pe.sam</span><br></pre></td></tr></table></figure></p>
<h3 id="3-4-bwasw"><a href="#3-4-bwasw" class="headerlink" title="3.4 bwasw"></a>3.4 bwasw</h3><p>对输入的第1个文件的所有序列进行比对。如果输如有 2 个文件，则进行 paired-end 比对，此模式仅对 Illumina 的 short-insert 数据进行比对。在 Paired-end 模式下，BWA-SW依然输出剪接性比对结果，但是这些结果会标记为 not properly paired; 同时如果有多个匹配位点，则不会写入 mate 的匹配位置。<br>常用参数如下：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bwasw   </span><br><span class="line">Usage: bwa bwasw [ options ] ref<span class="selector-class">.fasta</span> reads<span class="selector-class">.fq</span> [mate.fq] &gt; aln<span class="selector-class">.sam</span></span><br><span class="line">-t  INT 使用的线程数</span><br></pre></td></tr></table></figure></p>
<p>例子：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ bwa bwasw genome long_read<span class="selector-class">.fq</span> &gt; aln<span class="selector-class">.sam</span></span><br><span class="line">$ bwa bwasw genome read1<span class="selector-class">.fq</span> read2<span class="selector-class">.fq</span> &gt; aln-pe.sam</span><br></pre></td></tr></table></figure></p>
<h3 id="3-5-backtrack"><a href="#3-5-backtrack" class="headerlink" title="3.5 backtrack"></a>3.5 backtrack</h3><p>经典的 bwa 先使用 aln 命令将单独的 reads 比对到参考序列，再使用 samse 或 sampe 生成 sam 文件。<br>常用例子：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ bwa aln genome read1<span class="selector-class">.fq</span> &gt; aln_sa1<span class="selector-class">.sai</span></span><br><span class="line">$ bwa aln genome read2<span class="selector-class">.fq</span> &gt; aln_sa2<span class="selector-class">.sai</span></span><br><span class="line">$ bwa samse genome aln_sa1<span class="selector-class">.sai</span> read1<span class="selector-class">.fq</span> &gt; aln_se<span class="selector-class">.sam</span></span><br><span class="line">$ bwa sampe genome aln_sa1<span class="selector-class">.sai</span> aln_sa2<span class="selector-class">.sai</span> read1<span class="selector-class">.fq</span> read2<span class="selector-class">.fq</span> &gt; aln_pe.sam</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Jellyfish详解]]></title>
      <url>http://starsyi.github.io/2016/05/22/Jellyfish%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<h2 id="一、Jellyfish简介"><a href="#一、Jellyfish简介" class="headerlink" title="一、Jellyfish简介"></a>一、Jellyfish简介</h2><p><a href="http://www.cbcb.umd.edu/software/jellyfish/" target="_blank" rel="external">JELLYFISH</a>是<a href="http://www.cbcb.umd.edu/" target="_blank" rel="external">CBCB(Center for Bioinformatics and Computational Biology)</a>的Guillaume Marçais 和 <a href="http://www.cs.cmu.edu/~ckingsf/" target="_blank" rel="external">Carl Kingsford</a> 研发的一款计数 DNA 的 k-mers 的软件。该软件运用 Hash 表来存储数据，同时能多线程运行，速度快，内存消耗小。该软件只能运行在64位的Linux系统下。其<a href="http://bioinformatics.oxfordjournals.org/content/27/6/764" target="_blank" rel="external">文章</a>于2011年发表在杂志 <a href="http://bioinformatics.oxfordjournals.org/" target="_blank" rel="external">Bioinformatics</a> 上。</p>
<h2 id="二、Jellyfish安装"><a href="#二、Jellyfish安装" class="headerlink" title="二、Jellyfish安装"></a>二、Jellyfish安装</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>wget <span class="symbol">http:</span>/<span class="regexp">/www.cbcb.umd.edu/software</span><span class="regexp">/jellyfish/jellyfish</span>-<span class="number">1.1</span>.<span class="number">10</span>.tar.gz</span><br><span class="line"><span class="variable">$ </span>tar zxvf jellyfish-<span class="number">1.1</span>.<span class="number">10</span>.tar.gz</span><br><span class="line"><span class="variable">$ </span>mkdir jellyfish</span><br><span class="line"><span class="variable">$ </span>cd jellyfish-<span class="number">1.1</span>.<span class="number">10</span></span><br><span class="line"><span class="variable">$ </span>./configure --prefix=Your/Path/to/jellyfish</span><br><span class="line">如果安装在当前目录中，会报错。</span><br><span class="line"><span class="variable">$ </span>make -j <span class="number">8</span></span><br><span class="line"><span class="variable">$ </span>make install</span><br></pre></td></tr></table></figure>
<h2 id="三、Jellyfish的使用"><a href="#三、Jellyfish的使用" class="headerlink" title="三、Jellyfish的使用"></a>三、Jellyfish的使用</h2><h3 id="1-jellyfish的使用方法"><a href="#1-jellyfish的使用方法" class="headerlink" title="1. jellyfish的使用方法"></a>1. jellyfish的使用方法</h3><p>jellyfish的功能有：kmer计数；融合二进制的Hash结果；统计Hash结果；通过Hash结果来画直方图；将Hash结果输出成文本格式；查询指定k-mer的数目。<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">jellyfish </span><span class="built_in">count</span> [-o <span class="keyword">prefix] </span>[-m merlength] [-t threads] [-s hashsize] [--<span class="keyword">both-strands] </span>fasta [fasta ...]</span><br><span class="line">$ <span class="keyword">jellyfish </span>merge hash1 hash2 ...</span><br><span class="line">$ <span class="keyword">jellyfish </span>dump hash</span><br><span class="line">$ <span class="keyword">jellyfish </span>stats hash</span><br><span class="line">$ <span class="keyword">jellyfish </span>histo [-h high] [-l low] [-i increment] hash</span><br><span class="line">$ <span class="keyword">jellyfish </span>query hash</span><br><span class="line">$ <span class="keyword">jellyfish </span>cite</span><br></pre></td></tr></table></figure></p>
<h3 id="2-k-mer的计数"><a href="#2-k-mer的计数" class="headerlink" title="2. k-mer的计数"></a>2. k-mer的计数</h3><p>使用count的命令来执行计数功能，例子：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ jellyfish count -m <span class="number">16</span> -s <span class="number">100</span>M -t <span class="number">24</span> -o mer_counts -c <span class="number">7</span> <span class="selector-tag">input</span><span class="selector-class">.fastq</span></span><br><span class="line">使用fastq文件在默认参数上和fasta文件没有区别。生成的hash结果为二进制文件。</span><br></pre></td></tr></table></figure></p>
<p>常用参数：<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">m <span class="params">| --mer-len=&lt;num&gt;</span><br><span class="line"></span></span>    使用的k-mer的长度。如果基因组大小为G，则k-mer长度选择为: k ~= log(200G)</span><br><span class="line"><span class="comment">/log(4)。</span></span><br><span class="line">-<span class="ruby"><span class="params">s |</span> --size=&lt;num&gt;</span><br><span class="line"></span>    Hash 的大小。最好设置的值大于总的独特的(distinct)k-mer数,这样生成的文件只</span><br><span class="line">有一个。若该值不够大，则会生成多个hash文件，以数字区分文件名。如果基因组大小为G，每</span><br><span class="line">个reads有一个错误，总共有n条reads，则该值可以设置为『(G + k*n)/0.8』。该值识别 </span><br><span class="line">M 和 G。</span><br><span class="line">-<span class="ruby">t <span class="params">| --threads=&lt;num&gt;  default: 1</span><br><span class="line"></span></span>    使用的CPU线程数</span><br><span class="line">-<span class="ruby"><span class="params">o |</span> --output=&lt;string&gt;  <span class="symbol">default:</span> mer_counts</span><br><span class="line"></span>    输出的结果文件前缀</span><br><span class="line">-<span class="ruby">c <span class="params">| --counter-len=&lt;num&gt;  default:7</span><br><span class="line"></span></span>    k-mer的计数结果所占的比特数,默认支持的最大数字是2^7=128。对于基因组测序覆盖</span><br><span class="line">度为N，则要使设置的该值要大于N。该值越大，消耗内存越大。例如，如果基因组的覆盖度为10X，那么就要选择4(-c 4) 的counter长度，由于2^4 &gt; 10。</span><br><span class="line">-<span class="ruby"><span class="params">out-counter-len=&lt;num&gt;  default:4</span><br><span class="line"></span></span>    输出的二进制hash文件中的计数结果所占的字节数,一个字节是8比特。则默认支持的最大</span><br><span class="line">数字是2^32=4.3G</span><br><span class="line">-<span class="ruby"><span class="params">C |</span> --both-strand  <span class="symbol">default:</span> <span class="literal">false</span></span><br><span class="line"></span>    对正义链和反义链都进行计数</span><br><span class="line">-<span class="ruby">q <span class="params">| --quake  default: <span class="literal">false</span></span><br><span class="line"></span></span>    quake兼容模式</span><br><span class="line">-<span class="ruby"><span class="params">-quality-start=&lt;num&gt;  default: 64</span><br><span class="line"></span></span>    起始碱基质量的ASCII值，默认为PHRED64</span><br><span class="line">-<span class="ruby"><span class="params">-min-quality=&lt;num&gt;  default: 0</span><br><span class="line"></span></span>    支持的最小的碱基质量值，低于此值的碱基将由N代替</span><br><span class="line">-<span class="ruby"><span class="params">L |</span> --lower-count=&lt;num&gt;</span><br><span class="line"></span>    不输出数目低于此值的k-mer</span><br><span class="line">-<span class="ruby">U <span class="params">| --upper-count=&lt;num&gt;</span><br><span class="line"></span></span>    不输出数目高于此值的k-mer</span><br></pre></td></tr></table></figure></p>
<h3 id="3-融合二进制的输出结果"><a href="#3-融合二进制的输出结果" class="headerlink" title="3. 融合二进制的输出结果"></a>3. 融合二进制的输出结果</h3><p>上一步的输出结果为二进制文件，可能输出了多个hash文件，因此需要将这些hash文件合并成一个文件，此时用到 merge 命令。使用方法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ jellyfish merge -o mer_counts_merged.jf <span class="built_in">hash</span>1 <span class="built_in">hash</span>2 ...</span><br></pre></td></tr></table></figure></p>
<p>常用参数：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-<span class="keyword">o</span> | --output=<span class="symbol">&lt;string&gt;</span>  defaul<span class="variable">t:</span> mer_counts_merged.jf</span><br><span class="line">    输出的结果文件</span><br><span class="line">--out-counter-<span class="built_in">len</span>=<span class="symbol">&lt;num&gt;</span>  defaul<span class="variable">t:</span> <span class="number">4</span></span><br><span class="line">输出的二进制hash文件中的计数结果所占的字节数,一个字节是<span class="number">8</span>比特。则默认支持的最大数字</span><br><span class="line">是<span class="number">2</span>^<span class="number">32</span>=<span class="number">4.3</span>G</span><br></pre></td></tr></table></figure></p>
<h3 id="4-对hash结果进行统计"><a href="#4-对hash结果进行统计" class="headerlink" title="4. 对hash结果进行统计"></a>4. 对hash结果进行统计</h3><p>k-mer的结果以hash的二进制文件结果给出，需要统计出k-mer总数，特异的k-mer数目，只出现过一次的kmer数，出现了最多的k-mer的数目等信息。以stats命令来运行。使用方法：<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ jellyfish stats hash</span><br><span class="line">示例结果为：</span><br><span class="line"><span class="symbol">Unique:</span>    <span class="number">32355544</span>    <span class="meta">#只出现过一次的k-mer的数目</span></span><br><span class="line"><span class="symbol">Distinct:</span>  <span class="number">88414020</span>    <span class="meta">#特异性的k-mer数目，包含上一个的数据</span></span><br><span class="line"><span class="symbol">Total:</span>     <span class="number">432232807</span>   <span class="meta">#总的k-mer数目</span></span><br><span class="line"><span class="symbol">Max_count:</span> <span class="number">85348</span>       <span class="meta">#同一个k-mer出现的最多的数目</span></span><br></pre></td></tr></table></figure></p>
<p>常用参数：<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">L <span class="params">| --lower-count=&lt;num&gt;</span><br><span class="line"></span></span>    不统计数目低于此值的k-mer</span><br><span class="line">-<span class="ruby"><span class="params">U |</span> --upper-count=&lt;num&gt;</span><br><span class="line"></span>    不统计数目高于此值的k-mer</span><br></pre></td></tr></table></figure></p>
<h3 id="5-通过Hash结果来画直方图"><a href="#5-通过Hash结果来画直方图" class="headerlink" title="5. 通过Hash结果来画直方图"></a>5. 通过Hash结果来画直方图</h3><p>对k-mer的计数结果有个直观的认识，则需要统计出现了x(x=1,2,3…)次的kmer的数目y,以x，y为横纵坐标画出直方图。使用 histo 命令能给出 x 和 y 对应的值，将结果默认输出到标准输出。其使用方法为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ jellyfish histo <span class="_">-l</span> 1 -h 1000 <span class="built_in">hash</span></span><br></pre></td></tr></table></figure></p>
<p>常用参数：<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">l <span class="params">| --low=&lt;num&gt;  default: 1</span><br><span class="line"></span></span>    最低的 x 轴的值。同时结果会将低于此值的所有的k-mer的数目作为 (x-1) 的值。因</span><br><span class="line">此该值为 2 和 1 的结果是一致的。</span><br><span class="line">-<span class="ruby"><span class="params">h |</span> --high=&lt;num&gt;  <span class="symbol">default:</span> <span class="number">10000</span></span><br><span class="line"></span>    最高的 x 轴的值。同时结果会将高于此值的所有的k-mer的数目的和作为 (x+1) 的值。</span><br><span class="line">-<span class="ruby">i <span class="params">| --increment=&lt;num&gt;  default: 1</span><br><span class="line"></span></span>    x 轴取值是每隔该数值取值</span><br><span class="line">-<span class="ruby"><span class="params">t |</span> --threads=&lt;num&gt;  <span class="symbol">default:</span> <span class="number">1</span></span><br><span class="line"></span>    使用的CPU线程数</span><br><span class="line">-<span class="ruby">f <span class="params">| --full  default: <span class="literal">false</span></span><br><span class="line"></span></span>    全部的直方图</span><br></pre></td></tr></table></figure></p>
<h3 id="6-将二进制Hash结果转换成文本文件"><a href="#6-将二进制Hash结果转换成文本文件" class="headerlink" title="6. 将二进制Hash结果转换成文本文件"></a>6. 将二进制Hash结果转换成文本文件</h3><p>由于count命令生成的结果为二进制的，如有需要，则可以转换成可读文本文件。使用 dump 命令，使用方法：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ jellyfish <span class="built_in">dump</span> -<span class="built_in">c</span> -t -<span class="type">U</span> <span class="number">1000</span> hash</span><br></pre></td></tr></table></figure></p>
<p>常用参数：<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">c <span class="params">| --colum  default: <span class="literal">false</span></span><br><span class="line"></span></span>    生成结果为2列，第一列为k-mer序列，第二列为对应的数目。默认情况下是是fasta格</span><br><span class="line">式，fasta的头为k-mer的数目，fasta的序列为k-mer的序列。</span><br><span class="line">-<span class="ruby"><span class="params">t |</span> --tab  <span class="symbol">default:</span> <span class="literal">false</span></span><br><span class="line"></span>    当 -c 参数存在时，以tab来进行分隔两行。默认是以空格来分开的。</span><br><span class="line">-<span class="ruby">L <span class="params">| --lower-count=&lt;num&gt;</span><br><span class="line"></span></span>    不输出小于该值的k-mer</span><br><span class="line">-<span class="ruby"><span class="params">U |</span> --upper-count=&lt;num&gt;</span><br><span class="line"></span>    不输出高于该值的k-mer</span><br><span class="line">-<span class="ruby">o <span class="params">| --output=&lt;file&gt;</span><br><span class="line"></span></span>    输出文件的路径和名称</span><br></pre></td></tr></table></figure></p>
<h3 id="7-查询指定的k-mer出现的次数"><a href="#7-查询指定的k-mer出现的次数" class="headerlink" title="7. 查询指定的k-mer出现的次数"></a>7. 查询指定的k-mer出现的次数</h3><p>如果需要从Hash结果中查询指定的k-mer出现的次数，则要是用 query 命令。从标准输入读取k-mer的序列，从标准输出得到k-mer对应的数目。使用方法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ jellyfish query <span class="built_in">hash</span></span><br></pre></td></tr></table></figure></p>
<p>常用参数：<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">C <span class="params">| --both-strands  default: <span class="literal">false</span></span><br><span class="line"></span></span>    同时查询k-mer序列的正负链</span><br><span class="line">-<span class="ruby"><span class="params">i |</span> --input=&lt;file&gt;</span><br><span class="line"></span>    输入的文件</span><br><span class="line">-<span class="ruby">o <span class="params">| --output=&lt;file&gt;</span><br><span class="line"></span></span>    输出的文件</span><br></pre></td></tr></table></figure></p>
<h2 id="四、思考"><a href="#四、思考" class="headerlink" title="四、思考"></a>四、思考</h2><h3 id="对Illumina-paired-end测序结果进行jellyfish分析"><a href="#对Illumina-paired-end测序结果进行jellyfish分析" class="headerlink" title="对Illumina paired-end测序结果进行jellyfish分析"></a>对Illumina paired-end测序结果进行jellyfish分析</h3><p>由于paired-end序列有一定的顺序，需要将第2个文件的序列进行反向重复后，在和第一个文件的序列合到一起进行分析。可以使用Trinity中附带的软件fastool来将fastq文件转换成fasta文件，以及反向重复的转换。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="variable">$Trinity_Home</span>/trinity-plugins/fastool/fastool --illumina-trinity --to-fasta reads_1<span class="selector-class">.fastaq</span> &gt; reads_1<span class="selector-class">.fasta</span></span><br><span class="line">$ <span class="variable">$Trinity_Home</span>/trinity-plugins/fastool/fastool --rev --illumina-trinity --to-fasta reads_2<span class="selector-class">.fastaq</span> &gt; reads_2<span class="selector-class">.fasta</span></span><br><span class="line">$ cat reads_1<span class="selector-class">.fasta</span> reads_2<span class="selector-class">.fasta</span> &gt; both<span class="selector-class">.fasta</span></span><br><span class="line">$ jellyfish count ....</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Samtools常用命令详解]]></title>
      <url>http://starsyi.github.io/2016/05/21/Samtools%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<blockquote>
<p>可以参考我后面一篇博文，更加全面：<a href="http://starsyi.github.io/2016/05/24/SAMtools%E5%92%8CBCFtools%E5%B7%A5%E5%85%B7%E8%AF%A6%E8%A7%A3/">SAMtools和BCFtools工具详解</a></p>
</blockquote>
<p>samtools的说明文档：<a href="http://samtools.sourceforge.net/samtools.shtml" target="_blank" rel="external">http://samtools.sourceforge.net/samtools.shtml</a><br>samtools是一个用于操作sam和bam文件的工具合集。包含有许多命令。以下是常用命令的介绍</p>
<h2 id="1-view"><a href="#1-view" class="headerlink" title="1. view"></a>1. view</h2><p>view命令的主要功能是：将sam文件转换成bam文件；然后对bam文件进行各种操作，比如数据的排序(不属于本命令的功能)和提取(这些操作是对bam文件进行的，因而当输入为sam文件的时候，不能进行该操作)；最后将排序或提取得到的数据输出为bam或sam（默认的）格式。</p>
<p>bam文件优点：bam文件为二进制文件，占用的磁盘空间比sam文本文件小；利用bam二进制文件的运算速度快。</p>
<p>view命令中，对sam文件头部的输入(-t或-T）和输出(-h)是单独的一些参数来控制的</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">Usage: samtools view [options] &lt;in.bam&gt;|&lt;in.sam&gt; [region1 [...]]</span><br><span class="line">默认情况下不加 region，则是输出所有的 region.</span><br><span class="line"></span><br><span class="line">Options: -b       output BAM</span><br><span class="line">                  默认下输出是 SAM 格式文件，该参数设置输出 BAM 格式</span><br><span class="line">         -<span class="ruby">h       print header <span class="keyword">for</span> the SAM output</span><br><span class="line"></span>                  默认下输出的 sam 格式文件不带 header，该参数设定输出sam文件时带 header 信息</span><br><span class="line">         -<span class="ruby">H       print header only (no alignments)</span><br><span class="line"></span>         -<span class="ruby">S       input is SAM</span><br><span class="line"></span>                  默认下输入是 BAM 文件，若是输入是 SAM 文件，则最好加该参数，否则有时候会报错。</span><br><span class="line">         -<span class="ruby">u       uncompressed BAM output (force -b)</span><br><span class="line"></span>                  该参数的使用需要有-b参数，能节约时间，但是需要更多磁盘空间。</span><br><span class="line">         -<span class="ruby">c       Instead of printing the alignments, only count them <span class="keyword">and</span> print the </span><br><span class="line"></span>                  total number. All filter options, such as ‘-f’, ‘-F’ and ‘-q’ , </span><br><span class="line">                  are taken into account.</span><br><span class="line">         -<span class="ruby"><span class="number">1</span>       fast compression (force -b)</span><br><span class="line"></span>         -<span class="ruby">x       output FLAG <span class="keyword">in</span> HEX (samtools-C specific)</span><br><span class="line"></span>         -<span class="ruby">X       output FLAG <span class="keyword">in</span> string (samtools-C specific)</span><br><span class="line"></span>         -<span class="ruby">c       print only the count of matching records</span><br><span class="line"></span>         -<span class="ruby">L FILE  output alignments overlapping the input BED FILE [null]</span><br><span class="line"></span>         -<span class="ruby">t FILE  list of reference names <span class="keyword">and</span> lengths (force -S) [null]</span><br><span class="line"></span>                  使用一个list文件来作为header的输入</span><br><span class="line">         -<span class="ruby">T FILE  reference sequence file (force -S) [null]</span><br><span class="line"></span>                  使用序列fasta文件作为header的输入</span><br><span class="line">         -<span class="ruby">o FILE  output file name [stdout]</span><br><span class="line"></span>         -<span class="ruby">R FILE  list of read groups to be outputted [null]</span><br><span class="line"></span>         -<span class="ruby">f INT   required flag, <span class="number">0</span> <span class="keyword">for</span> unset [<span class="number">0</span>]</span><br><span class="line"></span>         -<span class="ruby">F INT   filtering flag, <span class="number">0</span> <span class="keyword">for</span> unset [<span class="number">0</span>] </span><br><span class="line"></span>                  Skip alignments with bits present in INT [0]</span><br><span class="line">                  数字4代表该序列没有比对到参考序列上</span><br><span class="line">                  数字8代表该序列的mate序列没有比对到参考序列上</span><br><span class="line">         -<span class="ruby">q INT   minimum mapping quality [<span class="number">0</span>]</span><br><span class="line"></span>         -<span class="ruby">l STR   only output reads <span class="keyword">in</span> library STR [null]</span><br><span class="line"></span>         -<span class="ruby">r STR   only output reads <span class="keyword">in</span> read group STR [null]</span><br><span class="line"></span>         -<span class="ruby">s FLOAT fraction of templates to subsample; integer part as seed [-<span class="number">1</span>]</span><br><span class="line"></span>         -<span class="ruby">?       longer help</span></span><br></pre></td></tr></table></figure>
<p>例子：</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">将sam文件转换成<span class="keyword">bam文件</span><br><span class="line"></span>$ samtools view -<span class="keyword">bS </span>abc.sam &gt; abc.<span class="keyword">bam</span><br><span class="line"></span>$ samtools view -<span class="keyword">b </span>-S abc.sam -o abc.<span class="keyword">bam</span><br><span class="line"></span></span><br><span class="line">提取比对到参考序列上的比对结果</span><br><span class="line">$ samtools view -<span class="keyword">bF </span><span class="number">4</span> abc.<span class="keyword">bam </span>&gt; abc.F.<span class="keyword">bam</span><br><span class="line"></span></span><br><span class="line">提取paired reads中两条reads都比对到参考序列上的比对结果，只需要把两个<span class="number">4</span>+<span class="number">8</span>的值<span class="number">12</span>作为过滤参数即可</span><br><span class="line">$ samtools view -<span class="keyword">bF </span><span class="number">12</span> abc.<span class="keyword">bam </span>&gt; abc.F12.<span class="keyword">bam</span><br><span class="line"></span></span><br><span class="line">提取没有比对到参考序列上的比对结果</span><br><span class="line">$ samtools view -<span class="keyword">bf </span><span class="number">4</span> abc.<span class="keyword">bam </span>&gt; abc.f.<span class="keyword">bam</span><br><span class="line"></span></span><br><span class="line">提取<span class="keyword">bam文件中比对到caffold1上的比对结果，并保存到sam文件格式</span><br><span class="line"></span>$ samtools view abc.<span class="keyword">bam </span><span class="keyword">scaffold1 </span>&gt; <span class="keyword">scaffold1.sam</span><br><span class="line"></span></span><br><span class="line">提取<span class="keyword">scaffold1上能比对到30k到100k区域的比对结果</span><br><span class="line"></span>$ samtools view abc.<span class="keyword">bam </span><span class="keyword">scaffold1:30000-100000 </span>$gt<span class="comment">; scaffold1_30k-100k.sam</span></span><br><span class="line"></span><br><span class="line">根据fasta文件，将 header 加入到 sam 或 <span class="keyword">bam </span>文件中</span><br><span class="line">$ samtools view -T genome.fasta -h <span class="keyword">scaffold1.sam </span>&gt; <span class="keyword">scaffold1.h.sam</span></span><br></pre></td></tr></table></figure>
<h2 id="2-sort"><a href="#2-sort" class="headerlink" title="2. sort"></a>2. sort</h2><p>sort对bam文件进行排序<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Usage</span>: <span class="selector-tag">samtools</span> <span class="selector-tag">sort</span> <span class="selector-attr">[-n]</span> <span class="selector-attr">[-m &lt;maxMem&gt;]</span> &lt;<span class="selector-tag">in</span><span class="selector-class">.bam</span>&gt; &lt;<span class="selector-tag">out</span><span class="selector-class">.prefix</span>&gt;  </span><br><span class="line"><span class="selector-tag">-m</span> 参数默认下是 500,000,000 即500<span class="selector-tag">M</span>（不支持<span class="selector-tag">K</span>，<span class="selector-tag">M</span>，<span class="selector-tag">G</span>等缩写）。对于处理大数据时，如果内存够用，则设置大点的值，以节约时间。</span><br><span class="line"><span class="selector-tag">-n</span> 设定排序方式按<span class="selector-tag">short</span> <span class="selector-tag">reads</span>的<span class="selector-tag">ID</span>排序。默认下是按序列在<span class="selector-tag">fasta</span>文件中的顺序（即<span class="selector-tag">header</span>）和序列从左往右的位点排序。</span><br></pre></td></tr></table></figure></p>
<h2 id="3-merge"><a href="#3-merge" class="headerlink" title="3. merge"></a>3. merge</h2><p>将2个或2个以上的已经sort了的bam文件融合成一个bam文件。融合后的文件不需要则是已经sort过了的。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Usage:   samtools <span class="keyword">merge</span> [-nr] [-h inh.sam] &lt;out.bam&gt; &lt;in1.bam&gt; &lt;in2.bam&gt;[...]</span><br><span class="line"></span><br><span class="line">Options: -n       <span class="keyword">sort</span> <span class="keyword">by</span> <span class="keyword">read</span> <span class="keyword">names</span></span><br><span class="line">         -r       attach RG tag (inferred <span class="keyword">from</span> <span class="keyword">file</span> <span class="keyword">names</span>)</span><br><span class="line">         -u       uncompressed BAM <span class="keyword">output</span></span><br><span class="line">         -f       overwrite the <span class="keyword">output</span> BAM <span class="keyword">if</span> exist</span><br><span class="line">         <span class="number">-1</span>       <span class="keyword">compress</span> <span class="keyword">level</span> <span class="number">1</span></span><br><span class="line">         -R <span class="keyword">STR</span>   <span class="keyword">merge</span> <span class="keyword">file</span> <span class="keyword">in</span> the specified region <span class="keyword">STR</span> [all]</span><br><span class="line">         -h <span class="keyword">FILE</span>  copy the header <span class="keyword">in</span> <span class="keyword">FILE</span> <span class="keyword">to</span> &lt;out.bam&gt; [in1.bam]</span><br><span class="line"></span><br><span class="line">Note: Samtools<span class="string">' merge does not reconstruct the @RG dictionary in the header. Users</span><br><span class="line">      must provide the correct header with -h, or uses Picard which properly maintains</span><br><span class="line">      the header dictionary in merging.</span></span><br></pre></td></tr></table></figure></p>
<h2 id="4-index"><a href="#4-index" class="headerlink" title="4. index"></a>4. index</h2><p>必须对bam文件进行默认情况下的排序后，才能进行index。否则会报错。</p>
<p>建立索引后将产生后缀为.bai的文件，用于快速的随机处理。很多情况下需要有bai文件的存在，特别是显示序列比对情况下。比如samtool的tview命令就需要；gbrowse2显示reads的比对图形的时候也需要。<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Usage: samtools <span class="keyword">index</span> &lt;<span class="keyword">in</span>.bam&gt; [<span class="keyword">out</span>.<span class="keyword">index</span>]</span><br></pre></td></tr></table></figure></p>
<p>例子：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">以下两种命令结果一样</span><br><span class="line">$ samtools index abc<span class="selector-class">.sort</span><span class="selector-class">.bam</span></span><br><span class="line">$ samtools index abc<span class="selector-class">.sort</span><span class="selector-class">.bam</span> abc<span class="selector-class">.sort</span><span class="selector-class">.bam</span><span class="selector-class">.bai</span></span><br></pre></td></tr></table></figure></p>
<h2 id="5-faidx"><a href="#5-faidx" class="headerlink" title="5. faidx"></a>5. faidx</h2><p>对fasta文件建立索引,生成的索引文件以.fai后缀结尾。该命令也能依据索引文件快速提取fasta文件中的某一条（子）序列<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Usage</span>: samtools faidx &lt;in.bam&gt; [ [...]]</span><br><span class="line"></span><br><span class="line"><span class="stylus">对基因组文件建立索引</span><br><span class="line">$ samtools faidx genome<span class="selector-class">.fasta</span></span><br><span class="line">生成了索引文件genome<span class="selector-class">.fasta</span><span class="selector-class">.fai</span>,是一个文本文件，分成了<span class="number">5</span>列。第一列是子序列的名称；</span><br><span class="line">第二列是子序列的长度；个人认为“第三列是序列所在的位置”，因为该数字从上往下逐渐变大，</span><br><span class="line">最后的数字是genome.fasta文件的大小；第<span class="number">4</span>和<span class="number">5</span>列不知是啥意思。于是通过此文件，可以定</span><br><span class="line">位子序列在fasta文件在磁盘上的存放位置，直接快速调出子序列。</span><br><span class="line"></span><br><span class="line">由于有索引文件，可以使用以下命令很快从基因组中提取到fasta格式的子序列</span><br><span class="line">$ samtools faidx genome<span class="selector-class">.fasta</span> scffold_10 &gt; scaffold_10.fasta</span></span><br></pre></td></tr></table></figure></p>
<h2 id="6-tview"><a href="#6-tview" class="headerlink" title="6. tview"></a>6. tview</h2><p>tview能直观的显示出reads比对基因组的情况，和基因组浏览器有点类似。<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Usage</span>: samtools tview &lt;aln.bam&gt; [ref.fasta]</span><br><span class="line"></span><br><span class="line"><span class="mipsasm">当给出参考基因组的时候，会在第一排显示参考基因组的序列，否则，第一排全用N表示。</span><br><span class="line">按下 g ，则提示输入要到达基因组的某一个位点。例子“<span class="keyword">scaffold_10:1000"表示到达第</span><br><span class="line"></span><span class="number">10</span>号<span class="keyword">scaffold的第1000个碱基位点处。</span><br><span class="line"></span>使用H(左）<span class="keyword">J（上）K（下）L（右）移动显示界面。大写字母移动快，小写字母移动慢。</span><br><span class="line"></span>使用空格建向左快速移动（和 L 类似），使用<span class="keyword">Backspace键向左快速移动（和 </span>H 类似）。</span><br><span class="line">Ctrl+H 向左移动<span class="number">1</span>kb碱基距离； Ctrl+L 向右移动<span class="number">1</span>kb碱基距离</span><br><span class="line">可以用颜色标注比对质量，碱基质量，核苷酸等。<span class="number">30</span>～<span class="number">40</span>的碱基质量或比对质量使用白色表示；</span><br><span class="line"><span class="number">20</span>～<span class="number">30</span>黄色；<span class="number">10</span>～<span class="number">20</span>绿色；<span class="number">0</span>～<span class="number">10</span>蓝色。</span><br><span class="line">使用点号<span class="string">'.'</span>切换显示碱基和点号；使用r切换显示read name等</span><br><span class="line">还有很多其它的使用说明，具体按 ？ 键来查看。</span></span><br></pre></td></tr></table></figure></p>
<h2 id="7-flagstat"><a href="#7-flagstat" class="headerlink" title="7. flagstat"></a>7. flagstat</h2><p>给出BAM文件的比对结果<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Usage</span>: samtools flagstat &lt;in.bam&gt;</span><br><span class="line"></span><br><span class="line"><span class="elixir"><span class="variable">$ </span>samtools flagstat example.bam</span><br><span class="line"><span class="number">11945742</span> + <span class="number">0</span> <span class="keyword">in</span> total (QC-passed reads + QC-failed reads)</span><br><span class="line"><span class="comment">#总共的reads数</span></span><br><span class="line"><span class="number">0</span> + <span class="number">0</span> duplicates</span><br><span class="line"><span class="number">7536364</span> + <span class="number">0</span> mapped (<span class="number">63.09</span>%<span class="symbol">:-nan%</span>)</span><br><span class="line"><span class="comment">#总体上reads的匹配率</span></span><br><span class="line"><span class="number">11945742</span> + <span class="number">0</span> paired <span class="keyword">in</span> sequencing</span><br><span class="line"><span class="comment">#有多少reads是属于paired reads</span></span><br><span class="line"><span class="number">5972871</span> + <span class="number">0</span> read1</span><br><span class="line"><span class="comment">#reads1中的reads数</span></span><br><span class="line"><span class="number">5972871</span> + <span class="number">0</span> read2</span><br><span class="line"><span class="comment">#reads2中的reads数</span></span><br><span class="line"><span class="number">6412042</span> + <span class="number">0</span> properly paired (<span class="number">53.68</span>%<span class="symbol">:-nan%</span>)</span><br><span class="line"><span class="comment">#完美匹配的reads数：比对到同一条参考序列，并且两条reads之间的距离符合设置的阈值</span></span><br><span class="line"><span class="number">6899708</span> + <span class="number">0</span> with itself <span class="keyword">and</span> mate mapped</span><br><span class="line"><span class="comment">#paired reads中两条都比对到参考序列上的reads数</span></span><br><span class="line"><span class="number">636656</span> + <span class="number">0</span> singletons (<span class="number">5.33</span>%<span class="symbol">:-nan%</span>)</span><br><span class="line"><span class="comment">#单独一条匹配到参考序列上的reads数，和上一个相加，则是总的匹配上的reads数。</span></span><br><span class="line"><span class="number">469868</span> + <span class="number">0</span> with mate mapped to a different chr</span><br><span class="line"><span class="comment">#paired reads中两条分别比对到两条不同的参考序列的reads数</span></span><br><span class="line"><span class="number">243047</span> + <span class="number">0</span> with mate mapped to a different chr (mapQ&gt;=<span class="number">5</span>)</span></span><br></pre></td></tr></table></figure></p>
<p>同上一个，只是其中比对质量&gt;=5的reads的数量</p>
<h2 id="8-depth"><a href="#8-depth" class="headerlink" title="8. depth"></a>8. depth</h2><p>得到每个碱基位点的测序深度,并输出到标准输出。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Usage</span>: <span class="selector-tag">bam2depth</span> <span class="selector-attr">[-r reg]</span> <span class="selector-attr">[-q baseQthres]</span> <span class="selector-attr">[-Q mapQthres]</span> <span class="selector-attr">[-b in.bed]</span> &lt;<span class="selector-tag">in1</span><span class="selector-class">.bam</span>&gt; <span class="selector-attr">[...]</span></span><br></pre></td></tr></table></figure></p>
<h2 id="9-其他有用的命令"><a href="#9-其他有用的命令" class="headerlink" title="9. 其他有用的命令"></a>9. 其他有用的命令</h2><p>reheader 替换bam文件的头<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ samtools reheader &lt;<span class="keyword">in</span><span class="selector-class">.header</span><span class="selector-class">.sam</span>&gt; &lt;<span class="keyword">in</span>.bam&gt;</span><br></pre></td></tr></table></figure></p>
<p>cat 连接多个bam文件，适用于非sorted的bam文件<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ samtools cat <span class="string">[-h header.sam]</span> <span class="string">[-o out.bam]</span> &lt;in1.bam&gt; &lt;in2.bam&gt; <span class="string">[ ... ]</span></span><br></pre></td></tr></table></figure></p>
<p>idxstats 统计一个表格，4列，分别为”序列名，序列长度，比对上的reads数，unmapped reads number”。第4列应该是paired reads中有一端能匹配到该scaffold上，而另外一端不匹配到任何scaffolds上的reads数。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ samtools idxstats <span class="tag">&lt;<span class="name">aln.bam</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="10-将bam文件转换为fastq文件"><a href="#10-将bam文件转换为fastq文件" class="headerlink" title="10. 将bam文件转换为fastq文件"></a>10. 将bam文件转换为fastq文件</h2><p>有时候，我们需要提取出比对到一段参考序列的reads，进行小范围的分析，以利于debug等。这时需要将bam或sam文件转换为fastq格式。<br>该网站提供了一个bam转换为fastq的程序：<a href="http://www.hudsonalpha.org/gsl/information/software/bam2fastq" target="_blank" rel="external">http://www.hudsonalpha.org/gsl/information/software/bam2fastq</a><br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span> wget http:<span class="comment">//www.hudsonalpha.org/gsl/static/software/bam2fastq-1.1.0.tgz</span></span><br><span class="line"><span class="symbol">$</span> tar zxf bam2fastq<span class="number">-1.1</span><span class="number">.0</span>.tgz</span><br><span class="line"><span class="symbol">$</span> cd bam2fastq<span class="number">-1.1</span><span class="number">.0</span></span><br><span class="line"><span class="symbol">$</span> make</span><br><span class="line"><span class="symbol">$</span> ./bam2fastq &lt;in.bam&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="11-mpileup"><a href="#11-mpileup" class="headerlink" title="11. mpileup"></a>11. mpileup</h2><p>samtools还有个非常重要的命令mpileup，以前为pileup。该命令用于生成bcf文件，再使用bcftools进行SNP和Indel的分析。bcftools是samtool中附带的软件，在samtools的安装文件夹中可以找到。</p>
<p>最常用的参数有2： -f 来输入有索引文件的fasta参考序列； -g 输出到bcf格式。用法和最简单的例子如下<br><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Usage: samtools mpileup <span class="comment">[-EBug]</span> <span class="comment">[-C capQcoef]</span> <span class="comment">[-r reg]</span> <span class="comment">[-f in.fa]</span> <span class="comment">[-l list]</span> <span class="comment">[-M capMapQ]</span> <span class="comment">[-Q minBaseQ]</span> <span class="comment">[-q minMapQ]</span> in.bam <span class="comment">[in2.bam <span class="comment">[...]</span>]</span></span><br><span class="line"></span><br><span class="line">$ samtools mpileup -f genome.fasta abc.bam &gt; abc.txt</span><br><span class="line">$ samtools mpileup -gSDf genome.fasta abc.bam &gt; abc.bcf</span><br><span class="line">$ samtools mpileup -guSDf genome.fasta abc.bam | \</span><br><span class="line">           bcftools view -cvNg - &gt; abc.vcf</span><br></pre></td></tr></table></figure></p>
<p>mpileup不使用-u或-g参数时，则不生成二进制的bcf文件，而生成一个文本文件(输出到标准输出)。该文本文件统计了参考序列中每个碱基位点的比对情况；该文件每一行代表了参考序列中某一个碱基位点的比对结果。比如：<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">scaffold_1</span></span>      <span class="number">2841</span>    A       <span class="number">11</span>      ,,,...,....     BHIGDGIJ?FF</span><br><span class="line"><span class="function"><span class="title">scaffold_1</span></span>      <span class="number">2842</span>    C       <span class="number">12</span>      ,<span class="symbol">$</span>,,...,....^I. CFGEGEGGCFF+</span><br><span class="line"><span class="function"><span class="title">scaffold_1</span></span>      <span class="number">2843</span>    G       <span class="number">11</span>      ,,...,.....     FDDDDCD?DD+</span><br><span class="line"><span class="function"><span class="title">scaffold_1</span></span>      <span class="number">2844</span>    G       <span class="number">11</span>      ,,...,.....     FA?AAAA&lt;AA+</span><br><span class="line"><span class="function"><span class="title">scaffold_1</span></span>      <span class="number">2845</span>    G       <span class="number">11</span>      ,,...,.....     F656666166*</span><br><span class="line"><span class="function"><span class="title">scaffold_1</span></span>      <span class="number">2846</span>    A       <span class="number">11</span>      ,,...,.....     (<span class="number">1.1111</span>)<span class="number">11</span>*</span><br><span class="line">scaffold_1      <span class="number">2847</span>    A       <span class="number">11</span>      ,,+<span class="number">9</span>acggtgaag.+<span class="number">9</span>ACGGTGAAT.+<span class="number">9</span>ACGGTGAAG.+<span class="number">9</span>ACGGTGAAG,+<span class="number">9</span>acggtgaag.+<span class="number">9</span>ACGGTGAAG.+<span class="number">9</span>ACGGTGAAG.+<span class="number">9</span>ACGGTGAAG.+<span class="number">9</span>ACGGTGAAG.+<span class="number">9</span>ACGGTGAAG       %.+....-..)</span><br><span class="line">scaffold_1      <span class="number">2848</span>    N       <span class="number">11</span>      agGGGgGGGGG     !!<span class="symbol">$</span>!!!!!!!!</span><br><span class="line"><span class="function"><span class="title">scaffold_1</span></span>      <span class="number">2849</span>    A       <span class="number">11</span>      c<span class="symbol">$</span>,...,.....    !<span class="number">0000000000</span></span><br><span class="line"><span class="function"><span class="title">scaffold_1</span></span>      <span class="number">2850</span>    A       <span class="number">10</span>      ,...,.....      <span class="number">353333333</span></span><br></pre></td></tr></table></figure></p>
<p>mpileup生成的结果包含6行：参考序列名；位置；参考碱基；比对上的reads数；比对情况；比对上的碱基的质量。其中第5列比较复杂,解释如下：</p>
<p>1 ‘.’代表与参考序列正链匹配。<br>2 ‘,’代表与参考序列负链匹配。<br>3 ‘ATCGN’代表在正链上的不匹配。<br>4 ‘atcgn’代表在负链上的不匹配。<br>5 ‘*’代表模糊碱基<br>6 ‘^’代表匹配的碱基是一个read的开始；’^’后面紧跟的ascii码减去33代表比对质量；这两个符号修饰的是后面的碱基，其后紧跟的碱基(.,ATCGatcgNn)代表该read的第一个碱基。<br>7 ‘$’代表一个read的结束，该符号修饰的是其前面的碱基。<br>8 正则式’+[0-9]+[ACGTNacgtn]+’代表在该位点后插入的碱基；比如上例中在scaffold_1的2847后插入了9个长度的碱基acggtgaag。表明此处极可能是indel。<br>9 正则式’-[0-9]+[ACGTNacgtn]+’代表在该位点后缺失的碱基；</p>
<p>pileup具体的参数如下：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">输入参数</span><br><span class="line"><span class="number">-6</span>       Assume <span class="keyword">the</span> quality is <span class="keyword">in</span> <span class="keyword">the</span> Illumina <span class="number">1.3</span>+ encoding. -A Do <span class="keyword">not</span> skip anomalous <span class="built_in">read</span> pairs <span class="keyword">in</span> variant calling. </span><br><span class="line">-B       Disable probabilistic realignment <span class="keyword">for</span> <span class="keyword">the</span> computation <span class="keyword">of</span> base alignment quality (BAQ). BAQ is <span class="keyword">the</span> Phred-scaled probability <span class="keyword">of</span> <span class="keyword">a</span> <span class="built_in">read</span> base being misaligned. Applying this option greatly helps <span class="built_in">to</span> reduce <span class="literal">false</span> SNPs caused <span class="keyword">by</span> misalignments. </span><br><span class="line">-b FILE  List <span class="keyword">of</span> input BAM <span class="built_in">files</span>, <span class="literal">one</span> <span class="built_in">file</span> per <span class="built_in">line</span> [<span class="literal">null</span>]</span><br><span class="line">-C INT   Coefficient <span class="keyword">for</span> downgrading mapping quality <span class="keyword">for</span> reads containing excessive mismatches. Given <span class="keyword">a</span> <span class="built_in">read</span> <span class="keyword">with</span> <span class="keyword">a</span> phred-scaled probability q <span class="keyword">of</span> being generated <span class="built_in">from</span> <span class="keyword">the</span> mapped position, <span class="keyword">the</span> <span class="built_in">new</span> mapping quality is about <span class="built_in">sqrt</span>((INT-q)/INT)*INT. A <span class="literal">zero</span> <span class="built_in">value</span> disables this functionality; <span class="keyword">if</span> enabled, <span class="keyword">the</span> recommended <span class="built_in">value</span> <span class="keyword">for</span> BWA is <span class="number">50.</span> [<span class="number">0</span>] </span><br><span class="line">-d INT   At <span class="keyword">a</span> position, <span class="built_in">read</span> maximally INT reads per input BAM. [<span class="number">250</span>] </span><br><span class="line">-E       Extended BAQ computation. This option helps sensitivity especially <span class="keyword">for</span> MNPs, but may hurt specificity <span class="keyword">a</span> little bit. </span><br><span class="line">-f FILE  The faidx-indexed reference <span class="built_in">file</span> <span class="keyword">in</span> <span class="keyword">the</span> FASTA <span class="built_in">format</span>. The <span class="built_in">file</span> can be optionally compressed <span class="keyword">by</span> razip. [<span class="literal">null</span>] </span><br><span class="line">-l FILE  BED <span class="keyword">or</span> position list <span class="built_in">file</span> containing <span class="keyword">a</span> list <span class="keyword">of</span> regions <span class="keyword">or</span> sites where pileup <span class="keyword">or</span> BCF should be generated [<span class="literal">null</span>] </span><br><span class="line">-M INT       cap mapping quality <span class="keyword">at</span> INT [<span class="number">60</span>]</span><br><span class="line">-q INT 	Minimum mapping quality <span class="keyword">for</span> <span class="keyword">an</span> alignment <span class="built_in">to</span> be used [<span class="number">0</span>] </span><br><span class="line">-Q INT 	Minimum base quality <span class="keyword">for</span> <span class="keyword">a</span> base <span class="built_in">to</span> be considered [<span class="number">13</span>]</span><br><span class="line">-r STR 	Only generate pileup <span class="keyword">in</span> region STR [all sites] </span><br><span class="line"></span><br><span class="line">输出参数</span><br><span class="line">-D 	Output per-sample <span class="built_in">read</span> depth (<span class="built_in">require</span> -g/-u)</span><br><span class="line">-g 	Compute genotype likelihoods <span class="keyword">and</span> output them <span class="keyword">in</span> <span class="keyword">the</span> binary call <span class="built_in">format</span> (BCF). </span><br><span class="line">-S 	Output per-sample Phred-scaled strand bias P-<span class="built_in">value</span> (<span class="built_in">require</span> -g/-u) </span><br><span class="line">-u 	Similar <span class="built_in">to</span> -g except that <span class="keyword">the</span> output is uncompressed BCF, which is preferred <span class="keyword">for</span> piping. </span><br><span class="line"></span><br><span class="line">Options <span class="keyword">for</span> Genotype Likelihood Computation (<span class="keyword">for</span> -g <span class="keyword">or</span> -u):</span><br><span class="line">-e INT 	Phred-scaled gap extension sequencing error probability. Reducing INT leads <span class="built_in">to</span> longer indels. [<span class="number">20</span>] </span><br><span class="line">-h INT 	Coefficient <span class="keyword">for</span> modeling homopolymer errors. Given <span class="keyword">an</span> l-<span class="keyword">long</span> homopolymer run, <span class="keyword">the</span> sequencing error <span class="keyword">of</span> <span class="keyword">an</span> indel <span class="keyword">of</span> size s is modeled <span class="keyword">as</span> INT*s/l. [<span class="number">100</span>] </span><br><span class="line">-I 	Do <span class="keyword">not</span> perform INDEL calling </span><br><span class="line">-L INT 	Skip INDEL calling <span class="keyword">if</span> <span class="keyword">the</span> <span class="built_in">average</span> per-sample depth is above INT. [<span class="number">250</span>] </span><br><span class="line">-o INT 	Phred-scaled gap <span class="built_in">open</span> sequencing error probability. Reducing INT leads <span class="built_in">to</span> more indel calls. [<span class="number">40</span>] </span><br><span class="line">-P STR 	Comma dilimited list <span class="keyword">of</span> platforms (determined <span class="keyword">by</span> @RG-PL) <span class="built_in">from</span> which indel candidates are obtained. It is recommended <span class="built_in">to</span> collect indel candidates <span class="built_in">from</span> sequencing technologies that have low indel error rate such <span class="keyword">as</span> ILLUMINA. [all]</span><br></pre></td></tr></table></figure></p>
<h2 id="12-使用bcftools"><a href="#12-使用bcftools" class="headerlink" title="12. 使用bcftools"></a>12. 使用bcftools</h2><p>bcftools和samtools类似，用于处理vcf(variant call format)文件和bcf(binary call format)文件。前者为文本文件，后者为其二进制文件。</p>
<p>bcftools使用简单，最主要的命令是view命令，其次还有index和cat等命令。index和cat命令和samtools中类似。此处主讲使用view命令来进行SNP和Indel calling。该命令的使用方法和例子为：</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ bcftools view <span class="string">[-AbFGNQSucgv]</span> <span class="string">[-D seqDict]</span> <span class="string">[-l listLoci]</span> <span class="string">[-s listSample]</span> </span><br><span class="line">          <span class="string">[-i gapSNPratio]</span> <span class="string">[-t mutRate]</span> <span class="string">[-p varThres]</span> <span class="string">[-P prior]</span> </span><br><span class="line">          <span class="string">[-1 nGroup1]</span> <span class="string">[-d minFrac]</span> <span class="string">[-U nPerm]</span> <span class="string">[-X permThres]</span> </span><br><span class="line">          <span class="string">[-T trioType]</span> in.bcf <span class="string">[region]</span></span><br><span class="line"></span><br><span class="line">$ bcftools view -cvNg abc.bcf &gt; snp_indel.vcf</span><br></pre></td></tr></table></figure>
<p>生成的结果文件为vcf格式，有10列，分别是：1 参考序列名；2 varianti所在的left-most位置；3 variant的ID（默认未设置，用’.’表示)；4 参考序列的allele；5 variant的allele(有多个alleles，则用’,’分隔);6 variant/reference QUALity;7 FILTers applied;8 variant的信息，使用分号隔开；9 FORMAT of the genotype fields, separated by colon (optional)； 10 SAMPLE genotypes and per-sample information (optional)。<br>例如：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">scaffold_1      <span class="number">2847</span>    .       A       AACGGTGAAG      <span class="number">194</span>     .       INDEL;DP=<span class="number">11</span>;VDB=<span class="number">0.0401</span>;AF1=<span class="number">1</span>;AC1=<span class="number">2</span>;DP4=<span class="number">0</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">3</span>;MQ=<span class="number">35</span>;FQ=<span class="number">-67.5</span>   <span class="string">GT:</span><span class="string">PL:</span>GQ        <span class="number">1</span>/<span class="number">1</span>:<span class="number">235</span>,<span class="number">33</span>,<span class="number">0</span>:<span class="number">63</span></span><br><span class="line">scaffold_1      <span class="number">3908</span>    .       G       A       <span class="number">111</span>     .       DP=<span class="number">13</span>;VDB=<span class="number">0.0085</span>;AF1=<span class="number">1</span>;AC1=<span class="number">2</span>;DP4=<span class="number">0</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">7</span>;MQ=<span class="number">42</span>;FQ=<span class="number">-63</span>   <span class="string">GT:</span><span class="string">PL:</span>GQ        <span class="number">1</span>/<span class="number">1</span>:<span class="number">144</span>,<span class="number">36</span>,<span class="number">0</span>:<span class="number">69</span></span><br><span class="line">scaffold_1      <span class="number">4500</span>    .       A       G       <span class="number">31.5</span>    .       DP=<span class="number">8</span>;VDB=<span class="number">0.0034</span>;AF1=<span class="number">1</span>;AC1=<span class="number">2</span>;DP4=<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>;MQ=<span class="number">42</span>;FQ=<span class="number">-39</span>    <span class="string">GT:</span><span class="string">PL:</span>GQ        <span class="number">1</span>/<span class="number">1</span>:<span class="number">64</span>,<span class="number">12</span>,<span class="number">0</span>:<span class="number">21</span></span><br><span class="line">scaffold_1      <span class="number">4581</span>    .       TGGNGG  TGG     <span class="number">145</span>     .       INDEL;DP=<span class="number">8</span>;VDB=<span class="number">0.0308</span>;AF1=<span class="number">1</span>;AC1=<span class="number">2</span>;DP4=<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">8</span>;MQ=<span class="number">42</span>;FQ=<span class="number">-58.5</span>    <span class="string">GT:</span><span class="string">PL:</span>GQ        <span class="number">1</span>/<span class="number">1</span>:<span class="number">186</span>,<span class="number">24</span>,<span class="number">0</span>:<span class="number">45</span></span><br><span class="line">scaffold_1      <span class="number">4644</span>    .       G       A       <span class="number">195</span>     .       DP=<span class="number">21</span>;VDB=<span class="number">0.0198</span>;AF1=<span class="number">1</span>;AC1=<span class="number">2</span>;DP4=<span class="number">0</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">10</span>;MQ=<span class="number">42</span>;FQ=<span class="number">-87</span> <span class="string">GT:</span><span class="string">PL:</span>GQ        <span class="number">1</span>/<span class="number">1</span>:<span class="number">228</span>,<span class="number">60</span>,<span class="number">0</span>:<span class="number">99</span></span><br><span class="line">scaffold_1      <span class="number">4827</span>    .       NACAAAGA        NA      <span class="number">4.42</span>    .       INDEL;DP=<span class="number">1</span>;AF1=<span class="number">1</span>;AC1=<span class="number">2</span>;DP4=<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>;MQ=<span class="number">40</span>;FQ=<span class="number">-37.5</span>       <span class="string">GT:</span><span class="string">PL:</span>GQ        <span class="number">0</span>/<span class="number">1</span>:<span class="number">40</span>,<span class="number">3</span>,<span class="number">0</span>:<span class="number">3</span></span><br><span class="line">scaffold_1      <span class="number">4854</span>    .       A       G       <span class="number">48</span>      .       DP=<span class="number">6</span>;VDB=<span class="number">0.0085</span>;AF1=<span class="number">1</span>;AC1=<span class="number">2</span>;DP4=<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>;MQ=<span class="number">41</span>;FQ=<span class="number">-36</span>    <span class="string">GT:</span><span class="string">PL:</span>GQ        <span class="number">1</span>/<span class="number">1</span>:<span class="number">80</span>,<span class="number">9</span>,<span class="number">0</span>:<span class="number">16</span></span><br><span class="line">scaffold_1      <span class="number">5120</span>    .       A       G       <span class="number">85</span>      .       DP=<span class="number">8</span>;VDB=<span class="number">0.0355</span>;AF1=<span class="number">1</span>;AC1=<span class="number">2</span>;DP4=<span class="number">0</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">3</span>;MQ=<span class="number">42</span>;FQ=<span class="number">-51</span>    <span class="string">GT:</span><span class="string">PL:</span>GQ        <span class="number">1</span>/<span class="number">1</span>:<span class="number">118</span>,<span class="number">24</span>,<span class="number">0</span>:<span class="number">45</span></span><br></pre></td></tr></table></figure></p>
<p>第8列中显示了对variants的信息描述，比较重要，其中的 Tag 的描述如下：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Tag	Format	Description</span><br><span class="line">AF1	double	Max-likelihood estimate <span class="keyword">of</span> <span class="keyword">the</span> site allele frequency (AF) <span class="keyword">of</span> <span class="keyword">the</span> <span class="keyword">first</span> ALT allele</span><br><span class="line">DP	int	Raw <span class="built_in">read</span> depth (<span class="keyword">without</span> quality filtering)</span><br><span class="line">DP4	int[<span class="number">4</span>]	<span class="comment"># high-quality reference forward bases, ref reverse, alternate for and alt rev bases</span></span><br><span class="line">FQ	int	Consensus quality. Positive: sample genotypes different; negative: otherwise</span><br><span class="line">MQ	int	Root-Mean-Square mapping quality <span class="keyword">of</span> covering reads</span><br><span class="line">PC2	int[<span class="number">2</span>]	Phred probability <span class="keyword">of</span> AF <span class="keyword">in</span> group1 samples being larger (,smaller) than <span class="keyword">in</span> group2</span><br><span class="line">PCHI2	double	Posterior weighted chi^<span class="number">2</span> P-<span class="built_in">value</span> between group1 <span class="keyword">and</span> group2 samples</span><br><span class="line">PV4	double[<span class="number">4</span>]	P-<span class="built_in">value</span> <span class="keyword">for</span> strand bias, baseQ bias, mapQ bias <span class="keyword">and</span> tail distance bias</span><br><span class="line">QCHI2	int	Phred-scaled PCHI2</span><br><span class="line">RP	int	<span class="comment"># permutations yielding a smaller PCHI2</span></span><br><span class="line">CLR	int	Phred <span class="built_in">log</span> ratio <span class="keyword">of</span> genotype likelihoods <span class="keyword">with</span> <span class="keyword">and</span> <span class="keyword">without</span> <span class="keyword">the</span> trio/pair constraint</span><br><span class="line">UGT	<span class="keyword">string</span>	Most probable genotype configuration <span class="keyword">without</span> <span class="keyword">the</span> trio constraint</span><br><span class="line">CGT	<span class="keyword">string</span>	Most probable configuration <span class="keyword">with</span> <span class="keyword">the</span> trio constraint</span><br></pre></td></tr></table></figure></p>
<p>bcftools view 的具体参数如下：</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Input/Output Options:</span><br><span class="line">-A 	Retain all possible alternate alleles <span class="keyword">at</span> variant sites. By default, <span class="keyword">the</span> view <span class="keyword">command</span> <span class="title">discards</span> <span class="title">unlikely</span> <span class="title">alleles</span>.</span><br><span class="line">-b 	Output <span class="keyword">in</span> <span class="keyword">the</span> BCF <span class="built_in">format</span>. The default is VCF.</span><br><span class="line">-D FILE Sequence dictionary (list <span class="keyword">of</span> chromosome names) <span class="keyword">for</span> VCF-&gt;BCF conversion [<span class="literal">null</span>]</span><br><span class="line">-F 	Indicate PL is generated <span class="keyword">by</span> r921 <span class="keyword">or</span> <span class="keyword">before</span> (ordering is different).</span><br><span class="line">-G 	Suppress all individual genotype information.</span><br><span class="line">-l FILE List <span class="keyword">of</span> sites <span class="keyword">at</span> which information are outputted [all sites]</span><br><span class="line">-N 	Skip sites where <span class="keyword">the</span> REF field is <span class="keyword">not</span> A/C/G/T</span><br><span class="line">-Q 	Output <span class="keyword">the</span> QCALL likelihood <span class="built_in">format</span></span><br><span class="line">-s FILE List <span class="keyword">of</span> samples <span class="built_in">to</span> use. The <span class="keyword">first</span> column <span class="keyword">in</span> <span class="keyword">the</span> input gives <span class="keyword">the</span> sample names <span class="keyword">and</span> <span class="keyword">the</span> <span class="keyword">second</span> gives <span class="keyword">the</span> ploidy, which can only be <span class="number">1</span> <span class="keyword">or</span> <span class="number">2.</span> When <span class="keyword">the</span> <span class="number">2</span>nd column is absent, <span class="keyword">the</span> sample ploidy is assumed <span class="built_in">to</span> be <span class="number">2.</span> In <span class="keyword">the</span> output, <span class="keyword">the</span> ordering <span class="keyword">of</span> samples will be identical <span class="built_in">to</span> <span class="keyword">the</span> <span class="literal">one</span> <span class="keyword">in</span> FILE. [<span class="literal">null</span>]</span><br><span class="line">-S 	The input is VCF instead <span class="keyword">of</span> BCF.</span><br><span class="line">-u 	Uncompressed BCF output (force -b). </span><br><span class="line"></span><br><span class="line">Consensus/Variant Calling Options:</span><br><span class="line">-c 	Call variants <span class="keyword">using</span> Bayesian inference. This option automatically invokes option -e.</span><br><span class="line">-d FLOAT When -v is <span class="keyword">in</span> use, skip loci where <span class="keyword">the</span> fraction <span class="keyword">of</span> samples covered <span class="keyword">by</span> reads is below FLOAT. [<span class="number">0</span>]</span><br><span class="line">        当有多个sample用于variants calling时，比如多个转录组数据或多个重测序</span><br><span class="line">        数据需要比对到参考基因组上，设置该值，表明至少有该&lt;float <span class="number">0</span>~<span class="number">1</span>&gt;比例的</span><br><span class="line">        samples在该位点都有覆盖才计算入variant.所以对于只有一个sample的情况</span><br><span class="line">        下，该值设置在<span class="number">0</span>～<span class="number">1</span>之间没有意义，大于<span class="number">1</span>则得不到任何结果。</span><br><span class="line">-e 	Perform <span class="built_in">max</span>-likelihood inference only, including estimating <span class="keyword">the</span> site allele frequency, testing Hardy-Weinberg equlibrium <span class="keyword">and</span> testing associations <span class="keyword">with</span> LRT.</span><br><span class="line">-g 	Call per-sample genotypes <span class="keyword">at</span> variant sites (force -c)</span><br><span class="line">-i FLOAT Ratio <span class="keyword">of</span> INDEL-<span class="built_in">to</span>-SNP mutation rate [<span class="number">0.15</span>]</span><br><span class="line">-p FLOAT A site is considered <span class="built_in">to</span> be <span class="keyword">a</span> variant <span class="keyword">if</span> P(ref|D)</span><br><span class="line">-t FLOAT Scaled muttion rate <span class="keyword">for</span> variant calling [<span class="number">0.001</span>]</span><br><span class="line">-T STR 	Enable pair/trio calling. For trio calling, option -s is usually needed <span class="built_in">to</span> be applied <span class="built_in">to</span> configure <span class="keyword">the</span> trio members <span class="keyword">and</span> their ordering. In <span class="keyword">the</span> <span class="built_in">file</span> supplied <span class="built_in">to</span> <span class="keyword">the</span> option -s, <span class="keyword">the</span> <span class="keyword">first</span> sample must be <span class="keyword">the</span> child, <span class="keyword">the</span> <span class="keyword">second</span> <span class="keyword">the</span> father <span class="keyword">and</span> <span class="keyword">the</span> <span class="keyword">third</span> <span class="keyword">the</span> mother. The valid values <span class="keyword">of</span> STR are ‘pair’, ‘trioauto’, ‘trioxd’ <span class="keyword">and</span> ‘trioxs’, where ‘pair’ calls differences between <span class="literal">two</span> input samples, <span class="keyword">and</span> ‘trioxd’ (‘trioxs’) specifies that <span class="keyword">the</span> input is <span class="built_in">from</span> <span class="keyword">the</span> X chromosome non-PAR regions <span class="keyword">and</span> <span class="keyword">the</span> child is <span class="keyword">a</span> female (male). [<span class="literal">null</span>]</span><br><span class="line">-v 	Output variant sites only (force -c) </span><br><span class="line"></span><br><span class="line">Contrast Calling <span class="keyword">and</span> Association Test Options:</span><br><span class="line"><span class="number">-1</span> INT 	Number <span class="keyword">of</span> group<span class="number">-1</span> samples. This option is used <span class="keyword">for</span> dividing <span class="keyword">the</span> samples <span class="keyword">into</span> <span class="literal">two</span> groups <span class="keyword">for</span> contrast SNP calling <span class="keyword">or</span> association test. When this option is <span class="keyword">in</span> use, <span class="keyword">the</span> following VCF INFO will be outputted: PC2, PCHI2 <span class="keyword">and</span> QCHI2. [<span class="number">0</span>]</span><br><span class="line">-U INT 	Number <span class="keyword">of</span> permutations <span class="keyword">for</span> association test (<span class="keyword">effective</span> only <span class="keyword">with</span> <span class="number">-1</span>) [<span class="number">0</span>]</span><br><span class="line">-X FLOAT Only perform permutations <span class="keyword">for</span> P(chi^<span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p>使用bcftools得到variant calling结果后。需要对结果再次进行过滤。主要依据比对结果中第8列信息。其中的 DP4 一行尤为重要，提供了4个数据：1 比对结果和正链一致的reads数、2 比对结果和负链一致的reads数、3 比对结果在正链的variant上的reads数、4 比对结果在负链的variant上的reads数。可以设定 （value3 + value4）大于某一阈值，才算是variant。比如：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ perl -ne '<span class="keyword">print</span> <span class="variable">$_</span> <span class="keyword">if</span> /DP4=(\<span class="keyword">d</span>+),(\<span class="keyword">d</span>+),(\<span class="keyword">d</span>+),(\<span class="keyword">d</span>+)/ &amp;&amp; (<span class="variable">$3</span>+<span class="variable">$4</span>)&gt;=10 &amp;&amp; (<span class="variable">$3</span>+<span class="variable">$4</span>)/(<span class="variable">$1</span>+<span class="variable">$2</span>+<span class="variable">$3</span>+<span class="variable">$4</span>)&gt;=0.8' snp_indel.vcf &gt; snp_indel.final.vcf</span><br></pre></td></tr></table></figure></p>
<h2 id="13-samtools-rmdup"><a href="#13-samtools-rmdup" class="headerlink" title="13. samtools rmdup"></a>13. samtools rmdup</h2><p>NGS上机测序前需要进行PCR一步，使一个模板扩增出一簇，从而在上机测序的时候表现出为1个点，即一个reads。若一个模板扩增出了多簇，结果得到了多个reads，这些reads的坐标(coordinates)是相近的。在进行了reads比对后需要将这些由PCR duplicates获得的reads去掉，并只保留最高比对质量的read。使用rmdup命令即可完成.<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Usage:  samtools rmdup [-sS]  </span><br><span class="line">-<span class="ruby">s 对single-<span class="keyword">end</span> reads。默认情况下，只对paired-<span class="keyword">end</span> reads</span><br><span class="line"></span>-<span class="ruby">S 将Paired-<span class="keyword">end</span> reads作为single-<span class="keyword">end</span> reads处理。</span><br><span class="line"></span></span><br><span class="line">$ samtools input.sorted.bam output.bam</span><br></pre></td></tr></table></figure></p>
<p>参考内容：</p>
<ol>
<li><a href="http://www.chenlianfu.com/?p=1399" target="_blank" rel="external">宠辱不惊，一心问学！</a></li>
</ol>
]]></content>
    </entry>
    
  
  
</search>
